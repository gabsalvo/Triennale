{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"P",
				"pairArg"
			],
			[
				"d",
				"fDecEnv"
			],
			[
				"C",
				"Closure2"
			],
			[
				"Clo",
				"Closure2"
			],
			[
				"BUf",
				"BufferedReader"
			],
			[
				"R",
				"Runnable"
			],
			[
				"I",
				"IOExpection"
			],
			[
				"ser",
				"server"
			],
			[
				"Ser",
				"ServerSocket"
			],
			[
				"serv",
				"serverSocket"
			],
			[
				"se",
				"serverSocket"
			],
			[
				"Serv",
				"ServerSocket"
			],
			[
				"col",
				"color_tree_lists"
			],
			[
				"colo",
				"color_tree_lists"
			],
			[
				"color",
				"color_tree_lists"
			],
			[
				"r",
				"r2"
			]
		]
	},
	"buffers":
	[
		{
			"file": "III/Basi-di-Dati/Capitolo-4.md",
			"settings":
			{
				"buffer_size": 5845,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1406,
					1,
					"insert",
					{
						"characters": "\nse"
					},
					"AwAAAPcTAAAAAAAA+BMAAAAAAAAAAAAA+BMAAAAAAAD5EwAAAAAAAAAAAAD5EwAAAAAAAPoTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9xMAAAAAAAD3EwAAAAAAAAAAAAAA4GlA"
				],
				[
					1407,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPoTAAAAAAAA+xMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+hMAAAAAAAD6EwAAAAAAAAAAAAAAAPC/"
				],
				[
					1408,
					3,
					"left_delete",
					null,
					"AwAAAPoTAAAAAAAA+hMAAAAAAAABAAAAIPkTAAAAAAAA+RMAAAAAAAABAAAAZfgTAAAAAAAA+BMAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAA+xMAAAAAAAD7EwAAAAAAAAAAAAAAAPC/"
				],
				[
					1409,
					1,
					"insert",
					{
						"characters": "Anticipazio"
					},
					"CwAAAPgTAAAAAAAA+RMAAAAAAAAAAAAA+RMAAAAAAAD6EwAAAAAAAAAAAAD6EwAAAAAAAPsTAAAAAAAAAAAAAPsTAAAAAAAA/BMAAAAAAAAAAAAA/BMAAAAAAAD9EwAAAAAAAAAAAAD9EwAAAAAAAP4TAAAAAAAAAAAAAP4TAAAAAAAA/xMAAAAAAAAAAAAA/xMAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAEUAAAAAAAAAAAAAAEUAAAAAAAAAhQAAAAAAAAAAAAAAhQAAAAAAAADFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+BMAAAAAAAD4EwAAAAAAAAAAAAAAAPC/"
				],
				[
					1410,
					1,
					"insert",
					{
						"characters": "ne"
					},
					"AgAAAAMUAAAAAAAABBQAAAAAAAAAAAAABBQAAAAAAAAFFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAxQAAAAAAAADFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1411,
					1,
					"insert",
					{
						"characters": " della"
					},
					"BgAAAAUUAAAAAAAABhQAAAAAAAAAAAAABhQAAAAAAAAHFAAAAAAAAAAAAAAHFAAAAAAAAAgUAAAAAAAAAAAAAAgUAAAAAAAACRQAAAAAAAAAAAAACRQAAAAAAAAKFAAAAAAAAAAAAAAKFAAAAAAAAAsUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABRQAAAAAAAAFFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1412,
					1,
					"insert",
					{
						"characters": " proiezione"
					},
					"CwAAAAsUAAAAAAAADBQAAAAAAAAAAAAADBQAAAAAAAANFAAAAAAAAAAAAAANFAAAAAAAAA4UAAAAAAAAAAAAAA4UAAAAAAAADxQAAAAAAAAAAAAADxQAAAAAAAAQFAAAAAAAAAAAAAAQFAAAAAAAABEUAAAAAAAAAAAAABEUAAAAAAAAEhQAAAAAAAAAAAAAEhQAAAAAAAATFAAAAAAAAAAAAAATFAAAAAAAABQUAAAAAAAAAAAAABQUAAAAAAAAFRQAAAAAAAAAAAAAFRQAAAAAAAAWFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACxQAAAAAAAALFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1413,
					1,
					"insert",
					{
						"characters": " rispetto"
					},
					"CQAAABYUAAAAAAAAFxQAAAAAAAAAAAAAFxQAAAAAAAAYFAAAAAAAAAAAAAAYFAAAAAAAABkUAAAAAAAAAAAAABkUAAAAAAAAGhQAAAAAAAAAAAAAGhQAAAAAAAAbFAAAAAAAAAAAAAAbFAAAAAAAABwUAAAAAAAAAAAAABwUAAAAAAAAHRQAAAAAAAAAAAAAHRQAAAAAAAAeFAAAAAAAAAAAAAAeFAAAAAAAAB8UAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFhQAAAAAAAAWFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1414,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAAB8UAAAAAAAAIBQAAAAAAAAAAAAAIBQAAAAAAAAhFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHxQAAAAAAAAfFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1415,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACEUAAAAAAAAIhQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIRQAAAAAAAAhFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1416,
					1,
					"left_delete",
					null,
					"AQAAACEUAAAAAAAAIRQAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAIhQAAAAAAAAiFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1417,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAACEUAAAAAAAAIhQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIRQAAAAAAAAhFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1418,
					1,
					"insert",
					{
						"characters": " join"
					},
					"BQAAACIUAAAAAAAAIxQAAAAAAAAAAAAAIxQAAAAAAAAkFAAAAAAAAAAAAAAkFAAAAAAAACUUAAAAAAAAAAAAACUUAAAAAAAAJhQAAAAAAAAAAAAAJhQAAAAAAAAnFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIhQAAAAAAAAiFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1419,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACcUAAAAAAAAKBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJxQAAAAAAAAnFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1420,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACgUAAAAAAAAKhQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKBQAAAAAAAAoFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1423,
					1,
					"insert",
					{
						"characters": "Pushing"
					},
					"BwAAACkUAAAAAAAAKhQAAAAAAAAAAAAAKhQAAAAAAAArFAAAAAAAAAAAAAArFAAAAAAAACwUAAAAAAAAAAAAACwUAAAAAAAALRQAAAAAAAAAAAAALRQAAAAAAAAuFAAAAAAAAAAAAAAuFAAAAAAAAC8UAAAAAAAAAAAAAC8UAAAAAAAAMBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKRQAAAAAAAApFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1424,
					1,
					"insert",
					{
						"characters": " projections"
					},
					"DAAAADAUAAAAAAAAMRQAAAAAAAAAAAAAMRQAAAAAAAAyFAAAAAAAAAAAAAAyFAAAAAAAADMUAAAAAAAAAAAAADMUAAAAAAAANBQAAAAAAAAAAAAANBQAAAAAAAA1FAAAAAAAAAAAAAA1FAAAAAAAADYUAAAAAAAAAAAAADYUAAAAAAAANxQAAAAAAAAAAAAANxQAAAAAAAA4FAAAAAAAAAAAAAA4FAAAAAAAADkUAAAAAAAAAAAAADkUAAAAAAAAOhQAAAAAAAAAAAAAOhQAAAAAAAA7FAAAAAAAAAAAAAA7FAAAAAAAADwUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMBQAAAAAAAAwFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1425,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADwUAAAAAAAAPRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPBQAAAAAAAA8FAAAAAAAAAAAAAAAAPC/"
				],
				[
					1426,
					1,
					"left_delete",
					null,
					"AQAAADwUAAAAAAAAPBQAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAPRQAAAAAAAA9FAAAAAAAAAAAAAAAAPC/"
				],
				[
					1427,
					1,
					"insert",
					{
						"characters": " down"
					},
					"BQAAADwUAAAAAAAAPRQAAAAAAAAAAAAAPRQAAAAAAAA+FAAAAAAAAAAAAAA+FAAAAAAAAD8UAAAAAAAAAAAAAD8UAAAAAAAAQBQAAAAAAAAAAAAAQBQAAAAAAABBFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPBQAAAAAAAA8FAAAAAAAAAAAAAAAAPC/"
				],
				[
					1429,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAEIUAAAAAAAAQxQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQhQAAAAAAABCFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1430,
					1,
					"insert",
					{
						"characters": "\nNon"
					},
					"BAAAAEMUAAAAAAAARBQAAAAAAAAAAAAARBQAAAAAAABFFAAAAAAAAAAAAABFFAAAAAAAAEYUAAAAAAAAAAAAAEYUAAAAAAAARxQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQxQAAAAAAABDFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1431,
					1,
					"insert",
					{
						"characters": " ha"
					},
					"AwAAAEcUAAAAAAAASBQAAAAAAAAAAAAASBQAAAAAAABJFAAAAAAAAAAAAABJFAAAAAAAAEoUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARxQAAAAAAABHFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1432,
					1,
					"insert",
					{
						"characters": " effetto"
					},
					"CAAAAEoUAAAAAAAASxQAAAAAAAAAAAAASxQAAAAAAABMFAAAAAAAAAAAAABMFAAAAAAAAE0UAAAAAAAAAAAAAE0UAAAAAAAAThQAAAAAAAAAAAAAThQAAAAAAABPFAAAAAAAAAAAAABPFAAAAAAAAFAUAAAAAAAAAAAAAFAUAAAAAAAAURQAAAAAAAAAAAAAURQAAAAAAABSFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAShQAAAAAAABKFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1433,
					1,
					"insert",
					{
						"characters": " sull'effici"
					},
					"DAAAAFIUAAAAAAAAUxQAAAAAAAAAAAAAUxQAAAAAAABUFAAAAAAAAAAAAABUFAAAAAAAAFUUAAAAAAAAAAAAAFUUAAAAAAAAVhQAAAAAAAAAAAAAVhQAAAAAAABXFAAAAAAAAAAAAABXFAAAAAAAAFgUAAAAAAAAAAAAAFgUAAAAAAAAWRQAAAAAAAAAAAAAWRQAAAAAAABaFAAAAAAAAAAAAABaFAAAAAAAAFsUAAAAAAAAAAAAAFsUAAAAAAAAXBQAAAAAAAAAAAAAXBQAAAAAAABdFAAAAAAAAAAAAABdFAAAAAAAAF4UAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUhQAAAAAAABSFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1434,
					1,
					"insert",
					{
						"characters": "enza"
					},
					"BAAAAF4UAAAAAAAAXxQAAAAAAAAAAAAAXxQAAAAAAABgFAAAAAAAAAAAAABgFAAAAAAAAGEUAAAAAAAAAAAAAGEUAAAAAAAAYhQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXhQAAAAAAABeFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1435,
					1,
					"insert",
					{
						"characters": " ma"
					},
					"AwAAAGIUAAAAAAAAYxQAAAAAAAAAAAAAYxQAAAAAAABkFAAAAAAAAAAAAABkFAAAAAAAAGUUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYhQAAAAAAABiFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1436,
					1,
					"insert",
					{
						"characters": " sulla"
					},
					"BgAAAGUUAAAAAAAAZhQAAAAAAAAAAAAAZhQAAAAAAABnFAAAAAAAAAAAAABnFAAAAAAAAGgUAAAAAAAAAAAAAGgUAAAAAAAAaRQAAAAAAAAAAAAAaRQAAAAAAABqFAAAAAAAAAAAAABqFAAAAAAAAGsUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZRQAAAAAAABlFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1437,
					1,
					"insert",
					{
						"characters": " leggibilit"
					},
					"CwAAAGsUAAAAAAAAbBQAAAAAAAAAAAAAbBQAAAAAAABtFAAAAAAAAAAAAABtFAAAAAAAAG4UAAAAAAAAAAAAAG4UAAAAAAAAbxQAAAAAAAAAAAAAbxQAAAAAAABwFAAAAAAAAAAAAABwFAAAAAAAAHEUAAAAAAAAAAAAAHEUAAAAAAAAchQAAAAAAAAAAAAAchQAAAAAAABzFAAAAAAAAAAAAABzFAAAAAAAAHQUAAAAAAAAAAAAAHQUAAAAAAAAdRQAAAAAAAAAAAAAdRQAAAAAAAB2FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaxQAAAAAAABrFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1438,
					1,
					"insert",
					{
						"characters": "Ã "
					},
					"AQAAAHYUAAAAAAAAdxQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdhQAAAAAAAB2FAAAAAAAAAAAAAAAAPC/"
				],
				[
					1439,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAHcUAAAAAAAAeBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdxQAAAAAAAB3FAAAAAAAAAAAAAAAAPC/"
				],
				[
					1440,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAHgUAAAAAAAAeRQAAAAAAAAAAAAAeRQAAAAAAAB6FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeBQAAAAAAAB4FAAAAAAAAAAAAAAAAPC/"
				],
				[
					1441,
					1,
					"replace_view_content",
					{
						"content": "# Basi di Dati Capitolo 4\n\n[Link alle slides](https://elearning.di.unipi.it/pluginfile.php/77038/mod_resource/content/2/4b.ModelloRel_AlgebraRelazionale_Parte_I.pdf)\n\n## Algebra relazionale\n\n_Operazioni sullo schema_\n\n- **DDL: Data Definition Language**\n  Operazioni di creazione, cancellazione e modifica di schemi di tabelle, creazioni viste, creazione indici.\n\n_Operazioni sui dati_\n\n- **DML: Data Manipulation language**\n  - _data query language:_ Query o interrogazione della base di dati\n  - _Aggiornamento dati:_ Inserimento, cancellazione e modifica di dati\n\n### Linguaggi Relazionali\n\n- Algebra relazionale: insieme di operatori su relazioni che danno come risultato relazioni.\n\n- Non si usa come linguaggio di interrogazione dei DBMS ma come rappresentazione interna delle interrogazioni.\n\n- Calcolo relazionale: linguaggio dichiarativo di tipo logico dal quale Ã¨ stato derivato l'SQL\n\n### Gli operatori dell'algebra relazionale\n\n- unione, intersezione, differenza\n- ridenominazione\n- selezione\n- proiezione\n- join (join naturale, prodotto cartesiano, theta-join)\n\n### Operatori Insiemistici\n\n- le relazioni sono insiemi\n- i risultati devono essere relazioni\n- Ã¨ possibile applicare unione, intersezione, differenza solo a relazioni definite sugli stessi attributi (nome e tipo), cioÃ¨ possono operare solo su tuple uniformi.\n\nâ¢ Unione: R U S\nâ¢ Differenza: R â S\nâ¢ Qual Ã¨ il tipo del risultato? Se R e S hanno n elementi, quanti ne ha\nil risultato?\nâ¢ Se t1 Ã¨ un'ennupla non in R , allora:\nâ¢ R = (R U {t_1}) â {t_1}\nâ¢ operatore monadico (con un argomento)\nâ¢ \"modifica lo schema\" lasciando inalterata l'istanza dell'operando\nâ¢ Ã indicato con la lettera rho\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-1.png\" alt=\"is\" />\n</p>\n\n### Selezione (Restrizione)\n\n- operatore monadico\n- produce un risultato che:\n  - ha lo stesso schema dell'operando\n  - contiene un sottoinsieme delle ennuple dell'operando\n  - quelle che soddisfano una condizione espressa combinando, con i connettivi logici and, or, not, condizioni atomiche del tipo A theta B oppure A theta C dove theta Ã¨ un oepratore di confronto. A e B sono atributi su cui l'operatore theta abbai senso, c una costante compatibile col dominio di A.\n    Ã denotata con sigma, con la condizione messa a pedice.\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-2.png\" alt=\"is\" />\n</p>\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-3.png\" alt=\"is\" />\n</p>\n\n_Selezione e proiezione_: combinando selezione e proiezione, possiamo estrarre interessanti informazioni da una relazione.\n\n_Combinando selezione e proiezione_, possiamo estrarre informazioni da una relazione, ma non possiamo perÃ² correlare informazioni presenti in relazioni diverse.\n\nIl join Ã¨ l'operatore piÃ¹ interessante dell'algebra relazionale poichÃ¨ permette di correlare dati in relazioni diverse.\n\n**Join Naturale**\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-4.png\" alt=\"is\" />\n</p>\n\nÃ un operatore binario che correla dati in relazioni diverse, sulla base di valori uguali in attributi con lo stesso nome.\n\n- Produce un risultato:\n- sull'unione degli attributi degli operandi\n- con ennuple che sono ottenute combinando le ennuple degli operandi con valori uguali sugli attributi in comune.\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-5.png\" alt=\"is\" />\n</p>\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-6.png\" alt=\"is\" />\n</p>\n\n### Join esterno, interno, sinistro, destro, completo\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-7.png\" alt=\"is\" />\n</p>\n\n**Il prodotto cartesiano:** Ã¨ un join naturale senza attributi in comune e contiene sempre un numero di ennuple pari al prodotto dlle cardinalitÃ  degli operandi (le ennuple sono tutte comabinabili)\n\n**Theta-join ed equi-join**\n\n- Prodotto cartesiano: concatena tuple non necessariamente correlate dal punto di vista semantico.\n\nÃ¨ piÃ¹ utile se fatto seguire da una selezione.\nProdotto cartesiano seguito dalla selezione che mantiene solo le tuple con valori uguali sull'attributo:\nReparto di Impiegati e codice di reparti.\n\n### Theta-join\n\n- Il prodotto cartesiano, in pratica, ha senso solo se seguito da selezione:\n  sigma_condizione (R_1 |><| R_2)\n\n- L'operazione viene chiamata theta-join e puÃ² essere sintatticamente indicata con\n  R_1 |><|\\_condizione R_2\n\n#### PerchÃ¨ theta-join?\n\nLa condizione C Ã¨ spesso una congiunzione di atomi di confronto A_1 theta-join A_2 dove theta_join Ã¨ uno degli operatori di confronto (=, >,<,...)\n\n- se l'operatore Ã¨ sempre l'uguaglianza (=) allora si parla di equi-join\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-8.png\" alt=\"is\" />\n</p>\n\n### Self Join\n\nSupponiamo di considerare la seguente relazione.\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-9.png\" alt=\"is\" />\n</p>\n\ne di voler ottenere una relazione Nonno-Nipote.\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-10.png\" alt=\"is\" />\n</p>\n\nUna selezione congiuntiva puÃ² essere sostituita da una cascata di selezioni atomiche.\n\nUna proiezione puÃ² essere trasformata in una cascata di proiezioni che eliminano i vari attributi in fasi diverse se E Ã¨ definita su un insieme di attributi che contiene Y oltre che X.\n\npi*X(E) = pi_X(pi*{XY}(E))\n\nAnticipazione della proiezione rispetto al join (Pushing projections down):\nNon ha effetto sull'efficienza ma sulla leggibilitÃ .\n"
					},
					"AQAAAAAAAAAAAAAAeRQAAAAAAACoFAAAIyBCYXNpIGRpIERhdGkgQ2FwaXRvbG8gNAoKW0xpbmsgYWxsZSBzbGlkZXNdKGh0dHBzOi8vZWxlYXJuaW5nLmRpLnVuaXBpLml0L3BsdWdpbmZpbGUucGhwLzc3MDM4L21vZF9yZXNvdXJjZS9jb250ZW50LzIvNGIuTW9kZWxsb1JlbF9BbGdlYnJhUmVsYXppb25hbGVfUGFydGVfSS5wZGYpCgojIyBBbGdlYnJhIHJlbGF6aW9uYWxlCgpfT3BlcmF6aW9uaSBzdWxsbyBzY2hlbWFfCgotICoqRERMOiBEYXRhIERlZmluaXRpb24gTGFuZ3VhZ2UqKgogIE9wZXJhemlvbmkgZGkgY3JlYXppb25lLCBjYW5jZWxsYXppb25lIGUgbW9kaWZpY2EgZGkgc2NoZW1pIGRpIHRhYmVsbGUsIGNyZWF6aW9uaSB2aXN0ZSwgY3JlYXppb25lIGluZGljaS4KCl9PcGVyYXppb25pIHN1aSBkYXRpXwoKLSAqKkRNTDogRGF0YSBNYW5pcHVsYXRpb24gbGFuZ3VhZ2UqKgogIC0gX2RhdGEgcXVlcnkgbGFuZ3VhZ2U6XyBRdWVyeSBvIGludGVycm9nYXppb25lIGRlbGxhIGJhc2UgZGkgZGF0aQogIC0gX0FnZ2lvcm5hbWVudG8gZGF0aTpfIEluc2VyaW1lbnRvLCBjYW5jZWxsYXppb25lIGUgbW9kaWZpY2EgZGkgZGF0aQoKIyMjIExpbmd1YWdnaSBSZWxhemlvbmFsaQoKLSBBbGdlYnJhIHJlbGF6aW9uYWxlOiBpbnNpZW1lIGRpIG9wZXJhdG9yaSBzdSByZWxhemlvbmkgY2hlIGRhbm5vIGNvbWUgcmlzdWx0YXRvIHJlbGF6aW9uaS4KCi0gTm9uIHNpIHVzYSBjb21lIGxpbmd1YWdnaW8gZGkgaW50ZXJyb2dhemlvbmUgZGVpIERCTVMgbWEgY29tZSByYXBwcmVzZW50YXppb25lIGludGVybmEgZGVsbGUgaW50ZXJyb2dhemlvbmkuCgotIENhbGNvbG8gcmVsYXppb25hbGU6IGxpbmd1YWdnaW8gZGljaGlhcmF0aXZvIGRpIHRpcG8gbG9naWNvIGRhbCBxdWFsZSDDqCBzdGF0byBkZXJpdmF0byBsJ1NRTAoKIyMjIEdsaSBvcGVyYXRvcmkgZGVsbCdhbGdlYnJhIHJlbGF6aW9uYWxlCgotIHVuaW9uZSwgaW50ZXJzZXppb25lLCBkaWZmZXJlbnphCi0gcmlkZW5vbWluYXppb25lCi0gc2VsZXppb25lCi0gcHJvaWV6aW9uZQotIGpvaW4gKGpvaW4gbmF0dXJhbGUsIHByb2RvdHRvIGNhcnRlc2lhbm8sIHRoZXRhLWpvaW4pCgojIyMgT3BlcmF0b3JpIEluc2llbWlzdGljaQoKLSBsZSByZWxhemlvbmkgc29ubyBpbnNpZW1pCi0gaSByaXN1bHRhdGkgZGV2b25vIGVzc2VyZSByZWxhemlvbmkKLSDDqCBwb3NzaWJpbGUgYXBwbGljYXJlIHVuaW9uZSwgaW50ZXJzZXppb25lLCBkaWZmZXJlbnphIHNvbG8gYSByZWxhemlvbmkgZGVmaW5pdGUgc3VnbGkgc3Rlc3NpIGF0dHJpYnV0aSAobm9tZSBlIHRpcG8pLCBjaW/DqCBwb3Nzb25vIG9wZXJhcmUgc29sbyBzdSB0dXBsZSB1bmlmb3JtaS4KCuKAoiBVbmlvbmU6IFIgVSBTCuKAoiBEaWZmZXJlbnphOiBSIOKAkyBTCuKAoiBRdWFsIMOoIGlsIHRpcG8gZGVsIHJpc3VsdGF0bz8gU2UgUiBlIFMgaGFubm8gbiBlbGVtZW50aSwgcXVhbnRpIG5lIGhhCmlsIHJpc3VsdGF0bz8K4oCiIFNlIHQxIMOoIHVuJ2VubnVwbGEgbm9uIGluIFIgLCBhbGxvcmE6CuKAoiBSID0gKFIgVSB7dF8xfSkg4oCTIHt0XzF9CuKAoiBvcGVyYXRvcmUgbW9uYWRpY28gKGNvbiB1biBhcmdvbWVudG8pCuKAoiAibW9kaWZpY2EgbG8gc2NoZW1hIiBsYXNjaWFuZG8gaW5hbHRlcmF0YSBsJ2lzdGFuemEgZGVsbCdvcGVyYW5kbwrigKIgw4ggaW5kaWNhdG8gY29uIGxhIGxldHRlcmEgcmhvCgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iLi9hc3NldHMvYmQtNC0xLnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoKIyMjIFNlbGV6aW9uZSAoUmVzdHJpemlvbmUpCgotIG9wZXJhdG9yZSBtb25hZGljbwotIHByb2R1Y2UgdW4gcmlzdWx0YXRvIGNoZToKICAtIGhhIGxvIHN0ZXNzbyBzY2hlbWEgZGVsbCdvcGVyYW5kbwogIC0gY29udGllbmUgdW4gc290dG9pbnNpZW1lIGRlbGxlIGVubnVwbGUgZGVsbCdvcGVyYW5kbwogIC0gcXVlbGxlIGNoZSBzb2RkaXNmYW5vIHVuYSBjb25kaXppb25lIGVzcHJlc3NhIGNvbWJpbmFuZG8sIGNvbiBpIGNvbm5ldHRpdmkgbG9naWNpIGFuZCwgb3IsIG5vdCwgY29uZGl6aW9uaSBhdG9taWNoZSBkZWwgdGlwbyBBIHRoZXRhIEIgb3BwdXJlIEEgdGhldGEgQyBkb3ZlIHRoZXRhIMOoIHVuIG9lcHJhdG9yZSBkaSBjb25mcm9udG8uIEEgZSBCIHNvbm8gYXRyaWJ1dGkgc3UgY3VpIGwnb3BlcmF0b3JlIHRoZXRhIGFiYmFpIHNlbnNvLCBjIHVuYSBjb3N0YW50ZSBjb21wYXRpYmlsZSBjb2wgZG9taW5pbyBkaSBBLgogICAgw4ggZGVub3RhdGEgY29uIHNpZ21hLCBjb24gbGEgY29uZGl6aW9uZSBtZXNzYSBhIHBlZGljZS4KCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTIucG5nIiBhbHQ9ImlzIiAvPgo8L3A+Cgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iLi9hc3NldHMvYmQtNC0zLnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoKX1NlbGV6aW9uZSBlIHByb2llemlvbmVfOiBjb21iaW5hbmRvIHNlbGV6aW9uZSBlIHByb2llemlvbmUsIHBvc3NpYW1vIGVzdHJhcnJlIGludGVyZXNzYW50aSBpbmZvcm1hemlvbmkgZGEgdW5hIHJlbGF6aW9uZS4KCl9Db21iaW5hbmRvIHNlbGV6aW9uZSBlIHByb2llemlvbmVfLCBwb3NzaWFtbyBlc3RyYXJyZSBpbmZvcm1hemlvbmkgZGEgdW5hIHJlbGF6aW9uZSwgbWEgbm9uIHBvc3NpYW1vIHBlcsOyIGNvcnJlbGFyZSBpbmZvcm1hemlvbmkgcHJlc2VudGkgaW4gcmVsYXppb25pIGRpdmVyc2UuCgpJbCBqb2luIMOoIGwnb3BlcmF0b3JlIHBpw7kgaW50ZXJlc3NhbnRlIGRlbGwnYWxnZWJyYSByZWxhemlvbmFsZSBwb2ljaMOoIHBlcm1ldHRlIGRpIGNvcnJlbGFyZSBkYXRpIGluIHJlbGF6aW9uaSBkaXZlcnNlLgoKKipKb2luIE5hdHVyYWxlKioKCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTQucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgrDiCB1biBvcGVyYXRvcmUgYmluYXJpbyBjaGUgY29ycmVsYSBkYXRpIGluIHJlbGF6aW9uaSBkaXZlcnNlLCBzdWxsYSBiYXNlIGRpIHZhbG9yaSB1Z3VhbGkgaW4gYXR0cmlidXRpIGNvbiBsbyBzdGVzc28gbm9tZS4KCi0gUHJvZHVjZSB1biByaXN1bHRhdG86Ci0gc3VsbCd1bmlvbmUgZGVnbGkgYXR0cmlidXRpIGRlZ2xpIG9wZXJhbmRpCi0gY29uIGVubnVwbGUgY2hlIHNvbm8gb3R0ZW51dGUgY29tYmluYW5kbyBsZSBlbm51cGxlIGRlZ2xpIG9wZXJhbmRpIGNvbiB2YWxvcmkgdWd1YWxpIHN1Z2xpIGF0dHJpYnV0aSBpbiBjb211bmUuCgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iLi9hc3NldHMvYmQtNC01LnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoKPHAgYWxpZ249ImNlbnRlciI+CiAgPGltZyBzcmM9Ii4vYXNzZXRzL2JkLTQtNi5wbmciIGFsdD0iaXMiIC8+CjwvcD4KCiMjIyBKb2luIGVzdGVybm8sIGludGVybm8sIHNpbmlzdHJvLCBkZXN0cm8sIGNvbXBsZXRvCgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iLi9hc3NldHMvYmQtNC03LnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoKKipJbCBwcm9kb3R0byBjYXJ0ZXNpYW5vOioqIMOoIHVuIGpvaW4gbmF0dXJhbGUgc2VuemEgYXR0cmlidXRpIGluIGNvbXVuZSBlIGNvbnRpZW5lIHNlbXByZSB1biBudW1lcm8gZGkgZW5udXBsZSBwYXJpIGFsIHByb2RvdHRvIGRsbGUgY2FyZGluYWxpdMOgIGRlZ2xpIG9wZXJhbmRpIChsZSBlbm51cGxlIHNvbm8gdHV0dGUgY29tYWJpbmFiaWxpKQoKKipUaGV0YS1qb2luIGVkIGVxdWktam9pbioqCgotIFByb2RvdHRvIGNhcnRlc2lhbm86IGNvbmNhdGVuYSB0dXBsZSBub24gbmVjZXNzYXJpYW1lbnRlIGNvcnJlbGF0ZSBkYWwgcHVudG8gZGkgdmlzdGEgc2VtYW50aWNvLgoKw6ggcGnDuSB1dGlsZSBzZSBmYXR0byBzZWd1aXJlIGRhIHVuYSBzZWxlemlvbmUuClByb2RvdHRvIGNhcnRlc2lhbm8gc2VndWl0byBkYWxsYSBzZWxlemlvbmUgY2hlIG1hbnRpZW5lIHNvbG8gbGUgdHVwbGUgY29uIHZhbG9yaSB1Z3VhbGkgc3VsbCdhdHRyaWJ1dG86ClJlcGFydG8gZGkgSW1waWVnYXRpIGUgY29kaWNlIGRpIHJlcGFydGkuCgojIyMgVGhldGEtam9pbgoKLSBJbCBwcm9kb3R0byBjYXJ0ZXNpYW5vLCBpbiBwcmF0aWNhLCBoYSBzZW5zbyBzb2xvIHNlIHNlZ3VpdG8gZGEgc2VsZXppb25lOgogIHNpZ21hX2NvbmRpemlvbmUgKFJfMSB8Pjx8IFJfMikKCi0gTCdvcGVyYXppb25lIHZpZW5lIGNoaWFtYXRhIHRoZXRhLWpvaW4gZSBwdcOyIGVzc2VyZSBzaW50YXR0aWNhbWVudGUgaW5kaWNhdGEgY29uCiAgUl8xIHw+PHxcX2NvbmRpemlvbmUgUl8yCgojIyMjIFBlcmNow6ggdGhldGEtam9pbj8KCkxhIGNvbmRpemlvbmUgQyDDqCBzcGVzc28gdW5hIGNvbmdpdW56aW9uZSBkaSBhdG9taSBkaSBjb25mcm9udG8gQV8xIHRoZXRhLWpvaW4gQV8yIGRvdmUgdGhldGFfam9pbiDDqCB1bm8gZGVnbGkgb3BlcmF0b3JpIGRpIGNvbmZyb250byAoPSwgPiw8LC4uLikKCi0gc2UgbCdvcGVyYXRvcmUgw6ggc2VtcHJlIGwndWd1YWdsaWFuemEgKD0pIGFsbG9yYSBzaSBwYXJsYSBkaSBlcXVpLWpvaW4KCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTgucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgojIyMgU2VsZiBKb2luCgpTdXBwb25pYW1vIGRpIGNvbnNpZGVyYXJlIGxhIHNlZ3VlbnRlIHJlbGF6aW9uZS4KCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTkucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgplIGRpIHZvbGVyIG90dGVuZXJlIHVuYSByZWxhemlvbmUgTm9ubm8tTmlwb3RlLgoKPHAgYWxpZ249ImNlbnRlciI+CiAgPGltZyBzcmM9Ii4vYXNzZXRzL2JkLTQtMTAucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgpVbmEgc2VsZXppb25lIGNvbmdpdW50aXZhIHB1w7IgZXNzZXJlIHNvc3RpdHVpdGEgZGEgdW5hIGNhc2NhdGEgZGkgc2VsZXppb25pIGF0b21pY2hlLgoKVW5hIHByb2llemlvbmUgcHXDsiBlc3NlcmUgdHJhc2Zvcm1hdGEgaW4gdW5hIGNhc2NhdGEgZGkgcHJvaWV6aW9uaSBjaGUgZWxpbWluYW5vIGkgdmFyaSBhdHRyaWJ1dGkgaW4gZmFzaSBkaXZlcnNlIHNlIEUgw6ggZGVmaW5pdGEgc3UgdW4gaW5zaWVtZSBkaSBhdHRyaWJ1dGkgY2hlIGNvbnRpZW5lIFkgb2x0cmUgY2hlIFguCgpwaSpYKEUpID0gcGlfWChwaSp7WFl9KEUpKQoKQW50aWNpcGF6aW9uZSBkZWxsYSBwcm9pZXppb25lIHJpc3BldHRvIGFsIGpvaW4gKFB1c2hpbmcgcHJvamVjdGlvbnMgZG93bik6Ck5vbiBoYSBlZmZldHRvIHN1bGwnZWZmaWNpZW56YSBtYSBzdWxsYSBsZWdnaWJpbGl0w6AuCgo",
					"AQAAAAAAAAABAAAAehQAAAAAAAB6FAAAAAAAAAAAAAAAAPC/"
				],
				[
					1442,
					1,
					"insert",
					{
						"characters": "\nIn"
					},
					"AwAAAHkUAAAAAAAAehQAAAAAAAAAAAAAehQAAAAAAAB7FAAAAAAAAAAAAAB7FAAAAAAAAHwUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeRQAAAAAAAB5FAAAAAAAAAAAAAAAAPC/"
				],
				[
					1443,
					1,
					"insert",
					{
						"characters": " genera"
					},
					"BwAAAHwUAAAAAAAAfRQAAAAAAAAAAAAAfRQAAAAAAAB+FAAAAAAAAAAAAAB+FAAAAAAAAH8UAAAAAAAAAAAAAH8UAAAAAAAAgBQAAAAAAAAAAAAAgBQAAAAAAACBFAAAAAAAAAAAAACBFAAAAAAAAIIUAAAAAAAAAAAAAIIUAAAAAAAAgxQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfBQAAAAAAAB8FAAAAAAAAAAAAAAAAPC/"
				],
				[
					1444,
					1,
					"left_delete",
					null,
					"AQAAAIIUAAAAAAAAghQAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAgxQAAAAAAACDFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1445,
					1,
					"insert",
					{
						"characters": "ale"
					},
					"AwAAAIIUAAAAAAAAgxQAAAAAAAAAAAAAgxQAAAAAAACEFAAAAAAAAAAAAACEFAAAAAAAAIUUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAghQAAAAAAACCFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1446,
					1,
					"insert",
					{
						"characters": " se"
					},
					"AwAAAIUUAAAAAAAAhhQAAAAAAAAAAAAAhhQAAAAAAACHFAAAAAAAAAAAAACHFAAAAAAAAIgUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhRQAAAAAAACFFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1447,
					1,
					"insert",
					{
						"characters": " R_1"
					},
					"BAAAAIgUAAAAAAAAiRQAAAAAAAAAAAAAiRQAAAAAAACKFAAAAAAAAAAAAACKFAAAAAAAAIsUAAAAAAAAAAAAAIsUAAAAAAAAjBQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiBQAAAAAAACIFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1448,
					1,
					"insert",
					{
						"characters": " ed"
					},
					"AwAAAIwUAAAAAAAAjRQAAAAAAAAAAAAAjRQAAAAAAACOFAAAAAAAAAAAAACOFAAAAAAAAI8UAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjBQAAAAAAACMFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1449,
					1,
					"insert",
					{
						"characters": " R_2"
					},
					"BAAAAI8UAAAAAAAAkBQAAAAAAAAAAAAAkBQAAAAAAACRFAAAAAAAAAAAAACRFAAAAAAAAJIUAAAAAAAAAAAAAJIUAAAAAAAAkxQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjxQAAAAAAACPFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1450,
					1,
					"insert",
					{
						"characters": " sono"
					},
					"BQAAAJMUAAAAAAAAlBQAAAAAAAAAAAAAlBQAAAAAAACVFAAAAAAAAAAAAACVFAAAAAAAAJYUAAAAAAAAAAAAAJYUAAAAAAAAlxQAAAAAAAAAAAAAlxQAAAAAAACYFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkxQAAAAAAACTFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1451,
					1,
					"insert",
					{
						"characters": " definite"
					},
					"CQAAAJgUAAAAAAAAmRQAAAAAAAAAAAAAmRQAAAAAAACaFAAAAAAAAAAAAACaFAAAAAAAAJsUAAAAAAAAAAAAAJsUAAAAAAAAnBQAAAAAAAAAAAAAnBQAAAAAAACdFAAAAAAAAAAAAACdFAAAAAAAAJ4UAAAAAAAAAAAAAJ4UAAAAAAAAnxQAAAAAAAAAAAAAnxQAAAAAAACgFAAAAAAAAAAAAACgFAAAAAAAAKEUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmBQAAAAAAACYFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1452,
					1,
					"insert",
					{
						"characters": " sll'insieme"
					},
					"DAAAAKEUAAAAAAAAohQAAAAAAAAAAAAAohQAAAAAAACjFAAAAAAAAAAAAACjFAAAAAAAAKQUAAAAAAAAAAAAAKQUAAAAAAAApRQAAAAAAAAAAAAApRQAAAAAAACmFAAAAAAAAAAAAACmFAAAAAAAAKcUAAAAAAAAAAAAAKcUAAAAAAAAqBQAAAAAAAAAAAAAqBQAAAAAAACpFAAAAAAAAAAAAACpFAAAAAAAAKoUAAAAAAAAAAAAAKoUAAAAAAAAqxQAAAAAAAAAAAAAqxQAAAAAAACsFAAAAAAAAAAAAACsFAAAAAAAAK0UAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoRQAAAAAAAChFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1453,
					1,
					"insert",
					{
						"characters": " di"
					},
					"AwAAAK0UAAAAAAAArhQAAAAAAAAAAAAArhQAAAAAAACvFAAAAAAAAAAAAACvFAAAAAAAALAUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArRQAAAAAAACtFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1454,
					1,
					"insert",
					{
						"characters": " attributi"
					},
					"CgAAALAUAAAAAAAAsRQAAAAAAAAAAAAAsRQAAAAAAACyFAAAAAAAAAAAAACyFAAAAAAAALMUAAAAAAAAAAAAALMUAAAAAAAAtBQAAAAAAAAAAAAAtBQAAAAAAAC1FAAAAAAAAAAAAAC1FAAAAAAAALYUAAAAAAAAAAAAALYUAAAAAAAAtxQAAAAAAAAAAAAAtxQAAAAAAAC4FAAAAAAAAAAAAAC4FAAAAAAAALkUAAAAAAAAAAAAALkUAAAAAAAAuhQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsBQAAAAAAACwFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1455,
					1,
					"insert",
					{
						"characters": " X"
					},
					"AgAAALoUAAAAAAAAuxQAAAAAAAAAAAAAuxQAAAAAAAC8FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuhQAAAAAAAC6FAAAAAAAAAAAAAAAAPC/"
				],
				[
					1456,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAALwUAAAAAAAAvRQAAAAAAAAAAAAAvRQAAAAAAAC+FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvBQAAAAAAAC8FAAAAAAAAAAAAAAAAPC/"
				],
				[
					1457,
					1,
					"insert",
					{
						"characters": " AB,"
					},
					"BAAAAL4UAAAAAAAAvxQAAAAAAAAAAAAAvxQAAAAAAADAFAAAAAAAAAAAAADAFAAAAAAAAMEUAAAAAAAAAAAAAMEUAAAAAAAAwhQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvhQAAAAAAAC+FAAAAAAAAAAAAAAAAPC/"
				],
				[
					1458,
					1,
					"insert",
					{
						"characters": " e"
					},
					"AgAAAMIUAAAAAAAAwxQAAAAAAAAAAAAAwxQAAAAAAADEFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwhQAAAAAAADCFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1459,
					1,
					"insert",
					{
						"characters": " contengono"
					},
					"CwAAAMQUAAAAAAAAxRQAAAAAAAAAAAAAxRQAAAAAAADGFAAAAAAAAAAAAADGFAAAAAAAAMcUAAAAAAAAAAAAAMcUAAAAAAAAyBQAAAAAAAAAAAAAyBQAAAAAAADJFAAAAAAAAAAAAADJFAAAAAAAAMoUAAAAAAAAAAAAAMoUAAAAAAAAyxQAAAAAAAAAAAAAyxQAAAAAAADMFAAAAAAAAAAAAADMFAAAAAAAAM0UAAAAAAAAAAAAAM0UAAAAAAAAzhQAAAAAAAAAAAAAzhQAAAAAAADPFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxBQAAAAAAADEFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1460,
					1,
					"insert",
					{
						"characters": " tuple"
					},
					"BgAAAM8UAAAAAAAA0BQAAAAAAAAAAAAA0BQAAAAAAADRFAAAAAAAAAAAAADRFAAAAAAAANIUAAAAAAAAAAAAANIUAAAAAAAA0xQAAAAAAAAAAAAA0xQAAAAAAADUFAAAAAAAAAAAAADUFAAAAAAAANUUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzxQAAAAAAADPFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1461,
					1,
					"insert",
					{
						"characters": " uguali"
					},
					"BwAAANUUAAAAAAAA1hQAAAAAAAAAAAAA1hQAAAAAAADXFAAAAAAAAAAAAADXFAAAAAAAANgUAAAAAAAAAAAAANgUAAAAAAAA2RQAAAAAAAAAAAAA2RQAAAAAAADaFAAAAAAAAAAAAADaFAAAAAAAANsUAAAAAAAAAAAAANsUAAAAAAAA3BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1RQAAAAAAADVFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1462,
					1,
					"insert",
					{
						"characters": " s"
					},
					"AgAAANwUAAAAAAAA3RQAAAAAAAAAAAAA3RQAAAAAAADeFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3BQAAAAAAADcFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1463,
					1,
					"insert",
					{
						"characters": " A"
					},
					"AgAAAN4UAAAAAAAA3xQAAAAAAAAAAAAA3xQAAAAAAADgFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3hQAAAAAAADeFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1464,
					1,
					"insert",
					{
						"characters": " e"
					},
					"AgAAAOAUAAAAAAAA4RQAAAAAAAAAAAAA4RQAAAAAAADiFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4BQAAAAAAADgFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1465,
					1,
					"insert",
					{
						"characters": " diverse"
					},
					"CAAAAOIUAAAAAAAA4xQAAAAAAAAAAAAA4xQAAAAAAADkFAAAAAAAAAAAAADkFAAAAAAAAOUUAAAAAAAAAAAAAOUUAAAAAAAA5hQAAAAAAAAAAAAA5hQAAAAAAADnFAAAAAAAAAAAAADnFAAAAAAAAOgUAAAAAAAAAAAAAOgUAAAAAAAA6RQAAAAAAAAAAAAA6RQAAAAAAADqFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4hQAAAAAAADiFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1466,
					1,
					"insert",
					{
						"characters": " su"
					},
					"AwAAAOoUAAAAAAAA6xQAAAAAAAAAAAAA6xQAAAAAAADsFAAAAAAAAAAAAADsFAAAAAAAAO0UAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6hQAAAAAAADqFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1467,
					1,
					"insert",
					{
						"characters": " B"
					},
					"AgAAAO0UAAAAAAAA7hQAAAAAAAAAAAAA7hQAAAAAAADvFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7RQAAAAAAADtFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1468,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAO8UAAAAAAAA8BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7xQAAAAAAADvFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1469,
					1,
					"insert",
					{
						"characters": "\n\nCalcolo"
					},
					"CQAAAPAUAAAAAAAA8RQAAAAAAAAAAAAA8RQAAAAAAADyFAAAAAAAAAAAAADyFAAAAAAAAPMUAAAAAAAAAAAAAPMUAAAAAAAA9BQAAAAAAAAAAAAA9BQAAAAAAAD1FAAAAAAAAAAAAAD1FAAAAAAAAPYUAAAAAAAAAAAAAPYUAAAAAAAA9xQAAAAAAAAAAAAA9xQAAAAAAAD4FAAAAAAAAAAAAAD4FAAAAAAAAPkUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8BQAAAAAAADwFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1470,
					1,
					"insert",
					{
						"characters": " relazion"
					},
					"CQAAAPkUAAAAAAAA+hQAAAAAAAAAAAAA+hQAAAAAAAD7FAAAAAAAAAAAAAD7FAAAAAAAAPwUAAAAAAAAAAAAAPwUAAAAAAAA/RQAAAAAAAAAAAAA/RQAAAAAAAD+FAAAAAAAAAAAAAD+FAAAAAAAAP8UAAAAAAAAAAAAAP8UAAAAAAAAABUAAAAAAAAAAAAAABUAAAAAAAABFQAAAAAAAAAAAAABFQAAAAAAAAIVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+RQAAAAAAAD5FAAAAAAAAAAAAAAAAPC/"
				],
				[
					1471,
					1,
					"insert",
					{
						"characters": "ale"
					},
					"AwAAAAIVAAAAAAAAAxUAAAAAAAAAAAAAAxUAAAAAAAAEFQAAAAAAAAAAAAAEFQAAAAAAAAUVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAhUAAAAAAAACFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1472,
					1,
					"insert",
					{
						"characters": " Ã¨"
					},
					"AgAAAAUVAAAAAAAABhUAAAAAAAAAAAAABhUAAAAAAAAHFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABRUAAAAAAAAFFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1473,
					1,
					"insert",
					{
						"characters": " un"
					},
					"AwAAAAcVAAAAAAAACBUAAAAAAAAAAAAACBUAAAAAAAAJFQAAAAAAAAAAAAAJFQAAAAAAAAoVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABxUAAAAAAAAHFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1474,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAoVAAAAAAAACxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAChUAAAAAAAAKFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1480,
					1,
					"insert",
					{
						"characters": "Il"
					},
					"AgAAAPIUAAAAAAAA8xQAAAAAAAAAAAAA8xQAAAAAAAD0FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8hQAAAAAAADyFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1481,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPQUAAAAAAAA9RQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9BQAAAAAAAD0FAAAAAAAAAAAAAAAAPC/"
				],
				[
					1484,
					1,
					"insert",
					{
						"characters": "lingug"
					},
					"BgAAAA4VAAAAAAAADxUAAAAAAAAAAAAADxUAAAAAAAAQFQAAAAAAAAAAAAAQFQAAAAAAABEVAAAAAAAAAAAAABEVAAAAAAAAEhUAAAAAAAAAAAAAEhUAAAAAAAATFQAAAAAAAAAAAAATFQAAAAAAABQVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADhUAAAAAAAAOFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1485,
					1,
					"left_delete",
					null,
					"AQAAABMVAAAAAAAAExUAAAAAAAABAAAAZw",
					"AQAAAAAAAAABAAAAFBUAAAAAAAAUFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1486,
					1,
					"insert",
					{
						"characters": "aggio"
					},
					"BQAAABMVAAAAAAAAFBUAAAAAAAAAAAAAFBUAAAAAAAAVFQAAAAAAAAAAAAAVFQAAAAAAABYVAAAAAAAAAAAAABYVAAAAAAAAFxUAAAAAAAAAAAAAFxUAAAAAAAAYFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAExUAAAAAAAATFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1487,
					1,
					"insert",
					{
						"characters": " che"
					},
					"BAAAABgVAAAAAAAAGRUAAAAAAAAAAAAAGRUAAAAAAAAaFQAAAAAAAAAAAAAaFQAAAAAAABsVAAAAAAAAAAAAABsVAAAAAAAAHBUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGBUAAAAAAAAYFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1488,
					1,
					"insert",
					{
						"characters": " permette"
					},
					"CQAAABwVAAAAAAAAHRUAAAAAAAAAAAAAHRUAAAAAAAAeFQAAAAAAAAAAAAAeFQAAAAAAAB8VAAAAAAAAAAAAAB8VAAAAAAAAIBUAAAAAAAAAAAAAIBUAAAAAAAAhFQAAAAAAAAAAAAAhFQAAAAAAACIVAAAAAAAAAAAAACIVAAAAAAAAIxUAAAAAAAAAAAAAIxUAAAAAAAAkFQAAAAAAAAAAAAAkFQAAAAAAACUVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHBUAAAAAAAAcFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1489,
					1,
					"insert",
					{
						"characters": " di"
					},
					"AwAAACUVAAAAAAAAJhUAAAAAAAAAAAAAJhUAAAAAAAAnFQAAAAAAAAAAAAAnFQAAAAAAACgVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJRUAAAAAAAAlFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1490,
					1,
					"insert",
					{
						"characters": " definire"
					},
					"CQAAACgVAAAAAAAAKRUAAAAAAAAAAAAAKRUAAAAAAAAqFQAAAAAAAAAAAAAqFQAAAAAAACsVAAAAAAAAAAAAACsVAAAAAAAALBUAAAAAAAAAAAAALBUAAAAAAAAtFQAAAAAAAAAAAAAtFQAAAAAAAC4VAAAAAAAAAAAAAC4VAAAAAAAALxUAAAAAAAAAAAAALxUAAAAAAAAwFQAAAAAAAAAAAAAwFQAAAAAAADEVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKBUAAAAAAAAoFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1491,
					1,
					"insert",
					{
						"characters": " il"
					},
					"AwAAADEVAAAAAAAAMhUAAAAAAAAAAAAAMhUAAAAAAAAzFQAAAAAAAAAAAAAzFQAAAAAAADQVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMRUAAAAAAAAxFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1492,
					1,
					"insert",
					{
						"characters": " risultato"
					},
					"CgAAADQVAAAAAAAANRUAAAAAAAAAAAAANRUAAAAAAAA2FQAAAAAAAAAAAAA2FQAAAAAAADcVAAAAAAAAAAAAADcVAAAAAAAAOBUAAAAAAAAAAAAAOBUAAAAAAAA5FQAAAAAAAAAAAAA5FQAAAAAAADoVAAAAAAAAAAAAADoVAAAAAAAAOxUAAAAAAAAAAAAAOxUAAAAAAAA8FQAAAAAAAAAAAAA8FQAAAAAAAD0VAAAAAAAAAAAAAD0VAAAAAAAAPhUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANBUAAAAAAAA0FQAAAAAAAAAAAAAAAPC/"
				],
				[
					1493,
					1,
					"insert",
					{
						"characters": " di"
					},
					"AwAAAD4VAAAAAAAAPxUAAAAAAAAAAAAAPxUAAAAAAABAFQAAAAAAAAAAAABAFQAAAAAAAEEVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPhUAAAAAAAA+FQAAAAAAAAAAAAAAAPC/"
				],
				[
					1494,
					1,
					"insert",
					{
						"characters": " un'interroga"
					},
					"DQAAAEEVAAAAAAAAQhUAAAAAAAAAAAAAQhUAAAAAAABDFQAAAAAAAAAAAABDFQAAAAAAAEQVAAAAAAAAAAAAAEQVAAAAAAAARRUAAAAAAAAAAAAARRUAAAAAAABGFQAAAAAAAAAAAABGFQAAAAAAAEcVAAAAAAAAAAAAAEcVAAAAAAAASBUAAAAAAAAAAAAASBUAAAAAAABJFQAAAAAAAAAAAABJFQAAAAAAAEoVAAAAAAAAAAAAAEoVAAAAAAAASxUAAAAAAAAAAAAASxUAAAAAAABMFQAAAAAAAAAAAABMFQAAAAAAAE0VAAAAAAAAAAAAAE0VAAAAAAAAThUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQRUAAAAAAABBFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1495,
					1,
					"insert",
					{
						"characters": "zione"
					},
					"BQAAAE4VAAAAAAAATxUAAAAAAAAAAAAATxUAAAAAAABQFQAAAAAAAAAAAABQFQAAAAAAAFEVAAAAAAAAAAAAAFEVAAAAAAAAUhUAAAAAAAAAAAAAUhUAAAAAAABTFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAThUAAAAAAABOFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1496,
					1,
					"insert",
					{
						"characters": " come"
					},
					"BQAAAFMVAAAAAAAAVBUAAAAAAAAAAAAAVBUAAAAAAABVFQAAAAAAAAAAAABVFQAAAAAAAFYVAAAAAAAAAAAAAFYVAAAAAAAAVxUAAAAAAAAAAAAAVxUAAAAAAABYFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUxUAAAAAAABTFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1497,
					1,
					"insert",
					{
						"characters": " l'insieme"
					},
					"CgAAAFgVAAAAAAAAWRUAAAAAAAAAAAAAWRUAAAAAAABaFQAAAAAAAAAAAABaFQAAAAAAAFsVAAAAAAAAAAAAAFsVAAAAAAAAXBUAAAAAAAAAAAAAXBUAAAAAAABdFQAAAAAAAAAAAABdFQAAAAAAAF4VAAAAAAAAAAAAAF4VAAAAAAAAXxUAAAAAAAAAAAAAXxUAAAAAAABgFQAAAAAAAAAAAABgFQAAAAAAAGEVAAAAAAAAAAAAAGEVAAAAAAAAYhUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWBUAAAAAAABYFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1498,
					1,
					"insert",
					{
						"characters": " di"
					},
					"AwAAAGIVAAAAAAAAYxUAAAAAAAAAAAAAYxUAAAAAAABkFQAAAAAAAAAAAABkFQAAAAAAAGUVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYhUAAAAAAABiFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1499,
					1,
					"insert",
					{
						"characters": " quelle"
					},
					"BwAAAGUVAAAAAAAAZhUAAAAAAAAAAAAAZhUAAAAAAABnFQAAAAAAAAAAAABnFQAAAAAAAGgVAAAAAAAAAAAAAGgVAAAAAAAAaRUAAAAAAAAAAAAAaRUAAAAAAABqFQAAAAAAAAAAAABqFQAAAAAAAGsVAAAAAAAAAAAAAGsVAAAAAAAAbBUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZRUAAAAAAABlFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1500,
					1,
					"insert",
					{
						"characters": " ennuple"
					},
					"CAAAAGwVAAAAAAAAbRUAAAAAAAAAAAAAbRUAAAAAAABuFQAAAAAAAAAAAABuFQAAAAAAAG8VAAAAAAAAAAAAAG8VAAAAAAAAcBUAAAAAAAAAAAAAcBUAAAAAAABxFQAAAAAAAAAAAABxFQAAAAAAAHIVAAAAAAAAAAAAAHIVAAAAAAAAcxUAAAAAAAAAAAAAcxUAAAAAAAB0FQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbBUAAAAAAABsFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1501,
					1,
					"insert",
					{
						"characters": " che"
					},
					"BAAAAHQVAAAAAAAAdRUAAAAAAAAAAAAAdRUAAAAAAAB2FQAAAAAAAAAAAAB2FQAAAAAAAHcVAAAAAAAAAAAAAHcVAAAAAAAAeBUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdBUAAAAAAAB0FQAAAAAAAAAAAAAAAPC/"
				],
				[
					1502,
					1,
					"insert",
					{
						"characters": " sod"
					},
					"BAAAAHgVAAAAAAAAeRUAAAAAAAAAAAAAeRUAAAAAAAB6FQAAAAAAAAAAAAB6FQAAAAAAAHsVAAAAAAAAAAAAAHsVAAAAAAAAfBUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeBUAAAAAAAB4FQAAAAAAAAAAAAAAAPC/"
				],
				[
					1503,
					1,
					"insert",
					{
						"characters": "disfano"
					},
					"BwAAAHwVAAAAAAAAfRUAAAAAAAAAAAAAfRUAAAAAAAB+FQAAAAAAAAAAAAB+FQAAAAAAAH8VAAAAAAAAAAAAAH8VAAAAAAAAgBUAAAAAAAAAAAAAgBUAAAAAAACBFQAAAAAAAAAAAACBFQAAAAAAAIIVAAAAAAAAAAAAAIIVAAAAAAAAgxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfBUAAAAAAAB8FQAAAAAAAAAAAAAAAPC/"
				],
				[
					1504,
					1,
					"insert",
					{
						"characters": " una"
					},
					"BAAAAIMVAAAAAAAAhBUAAAAAAAAAAAAAhBUAAAAAAACFFQAAAAAAAAAAAACFFQAAAAAAAIYVAAAAAAAAAAAAAIYVAAAAAAAAhxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgxUAAAAAAACDFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1505,
					1,
					"insert",
					{
						"characters": " certa"
					},
					"BgAAAIcVAAAAAAAAiBUAAAAAAAAAAAAAiBUAAAAAAACJFQAAAAAAAAAAAACJFQAAAAAAAIoVAAAAAAAAAAAAAIoVAAAAAAAAixUAAAAAAAAAAAAAixUAAAAAAACMFQAAAAAAAAAAAACMFQAAAAAAAI0VAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhxUAAAAAAACHFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1506,
					1,
					"insert",
					{
						"characters": " coni"
					},
					"BQAAAI0VAAAAAAAAjhUAAAAAAAAAAAAAjhUAAAAAAACPFQAAAAAAAAAAAACPFQAAAAAAAJAVAAAAAAAAAAAAAJAVAAAAAAAAkRUAAAAAAAAAAAAAkRUAAAAAAACSFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjRUAAAAAAACNFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1507,
					2,
					"left_delete",
					null,
					"AgAAAJEVAAAAAAAAkRUAAAAAAAABAAAAaZAVAAAAAAAAkBUAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAkhUAAAAAAACSFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1508,
					1,
					"insert",
					{
						"characters": "ndizone"
					},
					"BwAAAJAVAAAAAAAAkRUAAAAAAAAAAAAAkRUAAAAAAACSFQAAAAAAAAAAAACSFQAAAAAAAJMVAAAAAAAAAAAAAJMVAAAAAAAAlBUAAAAAAAAAAAAAlBUAAAAAAACVFQAAAAAAAAAAAACVFQAAAAAAAJYVAAAAAAAAAAAAAJYVAAAAAAAAlxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkBUAAAAAAACQFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1509,
					1,
					"insert",
					{
						"characters": " phi"
					},
					"BAAAAJcVAAAAAAAAmBUAAAAAAAAAAAAAmBUAAAAAAACZFQAAAAAAAAAAAACZFQAAAAAAAJoVAAAAAAAAAAAAAJoVAAAAAAAAmxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlxUAAAAAAACXFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1510,
					1,
					"replace_view_content",
					{
						"content": "# Basi di Dati Capitolo 4\n\n[Link alle slides](https://elearning.di.unipi.it/pluginfile.php/77038/mod_resource/content/2/4b.ModelloRel_AlgebraRelazionale_Parte_I.pdf)\n\n## Algebra relazionale\n\n_Operazioni sullo schema_\n\n- **DDL: Data Definition Language**\n  Operazioni di creazione, cancellazione e modifica di schemi di tabelle, creazioni viste, creazione indici.\n\n_Operazioni sui dati_\n\n- **DML: Data Manipulation language**\n  - _data query language:_ Query o interrogazione della base di dati\n  - _Aggiornamento dati:_ Inserimento, cancellazione e modifica di dati\n\n### Linguaggi Relazionali\n\n- Algebra relazionale: insieme di operatori su relazioni che danno come risultato relazioni.\n\n- Non si usa come linguaggio di interrogazione dei DBMS ma come rappresentazione interna delle interrogazioni.\n\n- Calcolo relazionale: linguaggio dichiarativo di tipo logico dal quale Ã¨ stato derivato l'SQL\n\n### Gli operatori dell'algebra relazionale\n\n- unione, intersezione, differenza\n- ridenominazione\n- selezione\n- proiezione\n- join (join naturale, prodotto cartesiano, theta-join)\n\n### Operatori Insiemistici\n\n- le relazioni sono insiemi\n- i risultati devono essere relazioni\n- Ã¨ possibile applicare unione, intersezione, differenza solo a relazioni definite sugli stessi attributi (nome e tipo), cioÃ¨ possono operare solo su tuple uniformi.\n\nâ¢ Unione: R U S\nâ¢ Differenza: R â S\nâ¢ Qual Ã¨ il tipo del risultato? Se R e S hanno n elementi, quanti ne ha\nil risultato?\nâ¢ Se t1 Ã¨ un'ennupla non in R , allora:\nâ¢ R = (R U {t_1}) â {t_1}\nâ¢ operatore monadico (con un argomento)\nâ¢ \"modifica lo schema\" lasciando inalterata l'istanza dell'operando\nâ¢ Ã indicato con la lettera rho\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-1.png\" alt=\"is\" />\n</p>\n\n### Selezione (Restrizione)\n\n- operatore monadico\n- produce un risultato che:\n  - ha lo stesso schema dell'operando\n  - contiene un sottoinsieme delle ennuple dell'operando\n  - quelle che soddisfano una condizione espressa combinando, con i connettivi logici and, or, not, condizioni atomiche del tipo A theta B oppure A theta C dove theta Ã¨ un oepratore di confronto. A e B sono atributi su cui l'operatore theta abbai senso, c una costante compatibile col dominio di A.\n    Ã denotata con sigma, con la condizione messa a pedice.\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-2.png\" alt=\"is\" />\n</p>\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-3.png\" alt=\"is\" />\n</p>\n\n_Selezione e proiezione_: combinando selezione e proiezione, possiamo estrarre interessanti informazioni da una relazione.\n\n_Combinando selezione e proiezione_, possiamo estrarre informazioni da una relazione, ma non possiamo perÃ² correlare informazioni presenti in relazioni diverse.\n\nIl join Ã¨ l'operatore piÃ¹ interessante dell'algebra relazionale poichÃ¨ permette di correlare dati in relazioni diverse.\n\n**Join Naturale**\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-4.png\" alt=\"is\" />\n</p>\n\nÃ un operatore binario che correla dati in relazioni diverse, sulla base di valori uguali in attributi con lo stesso nome.\n\n- Produce un risultato:\n- sull'unione degli attributi degli operandi\n- con ennuple che sono ottenute combinando le ennuple degli operandi con valori uguali sugli attributi in comune.\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-5.png\" alt=\"is\" />\n</p>\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-6.png\" alt=\"is\" />\n</p>\n\n### Join esterno, interno, sinistro, destro, completo\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-7.png\" alt=\"is\" />\n</p>\n\n**Il prodotto cartesiano:** Ã¨ un join naturale senza attributi in comune e contiene sempre un numero di ennuple pari al prodotto dlle cardinalitÃ  degli operandi (le ennuple sono tutte comabinabili)\n\n**Theta-join ed equi-join**\n\n- Prodotto cartesiano: concatena tuple non necessariamente correlate dal punto di vista semantico.\n\nÃ¨ piÃ¹ utile se fatto seguire da una selezione.\nProdotto cartesiano seguito dalla selezione che mantiene solo le tuple con valori uguali sull'attributo:\nReparto di Impiegati e codice di reparti.\n\n### Theta-join\n\n- Il prodotto cartesiano, in pratica, ha senso solo se seguito da selezione:\n  sigma_condizione (R_1 |><| R_2)\n\n- L'operazione viene chiamata theta-join e puÃ² essere sintatticamente indicata con\n  R_1 |><|\\_condizione R_2\n\n#### PerchÃ¨ theta-join?\n\nLa condizione C Ã¨ spesso una congiunzione di atomi di confronto A_1 theta-join A_2 dove theta_join Ã¨ uno degli operatori di confronto (=, >,<,...)\n\n- se l'operatore Ã¨ sempre l'uguaglianza (=) allora si parla di equi-join\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-8.png\" alt=\"is\" />\n</p>\n\n### Self Join\n\nSupponiamo di considerare la seguente relazione.\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-9.png\" alt=\"is\" />\n</p>\n\ne di voler ottenere una relazione Nonno-Nipote.\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-10.png\" alt=\"is\" />\n</p>\n\nUna selezione congiuntiva puÃ² essere sostituita da una cascata di selezioni atomiche.\n\nUna proiezione puÃ² essere trasformata in una cascata di proiezioni che eliminano i vari attributi in fasi diverse se E Ã¨ definita su un insieme di attributi che contiene Y oltre che X.\n\npi*X(E) = pi_X(pi*{XY}(E))\n\nAnticipazione della proiezione rispetto al join (Pushing projections down):\nNon ha effetto sull'efficienza ma sulla leggibilitÃ .\n\nIn generale se R_1 ed R_2 sono definite sll'insieme di attributi X = AB, e contengono tuple uguali s A e diverse su B.\n\nIl Calcolo relazionale Ã¨ un linguaggio che permette di definire il risultato di un'interrogazione come l'insieme di quelle ennuple che soddisfano una certa condizone phi\n"
					},
					"AQAAAAAAAAAAAAAAnBUAAAAAAADKFQAAIyBCYXNpIGRpIERhdGkgQ2FwaXRvbG8gNAoKW0xpbmsgYWxsZSBzbGlkZXNdKGh0dHBzOi8vZWxlYXJuaW5nLmRpLnVuaXBpLml0L3BsdWdpbmZpbGUucGhwLzc3MDM4L21vZF9yZXNvdXJjZS9jb250ZW50LzIvNGIuTW9kZWxsb1JlbF9BbGdlYnJhUmVsYXppb25hbGVfUGFydGVfSS5wZGYpCgojIyBBbGdlYnJhIHJlbGF6aW9uYWxlCgpfT3BlcmF6aW9uaSBzdWxsbyBzY2hlbWFfCgotICoqRERMOiBEYXRhIERlZmluaXRpb24gTGFuZ3VhZ2UqKgogIE9wZXJhemlvbmkgZGkgY3JlYXppb25lLCBjYW5jZWxsYXppb25lIGUgbW9kaWZpY2EgZGkgc2NoZW1pIGRpIHRhYmVsbGUsIGNyZWF6aW9uaSB2aXN0ZSwgY3JlYXppb25lIGluZGljaS4KCl9PcGVyYXppb25pIHN1aSBkYXRpXwoKLSAqKkRNTDogRGF0YSBNYW5pcHVsYXRpb24gbGFuZ3VhZ2UqKgogIC0gX2RhdGEgcXVlcnkgbGFuZ3VhZ2U6XyBRdWVyeSBvIGludGVycm9nYXppb25lIGRlbGxhIGJhc2UgZGkgZGF0aQogIC0gX0FnZ2lvcm5hbWVudG8gZGF0aTpfIEluc2VyaW1lbnRvLCBjYW5jZWxsYXppb25lIGUgbW9kaWZpY2EgZGkgZGF0aQoKIyMjIExpbmd1YWdnaSBSZWxhemlvbmFsaQoKLSBBbGdlYnJhIHJlbGF6aW9uYWxlOiBpbnNpZW1lIGRpIG9wZXJhdG9yaSBzdSByZWxhemlvbmkgY2hlIGRhbm5vIGNvbWUgcmlzdWx0YXRvIHJlbGF6aW9uaS4KCi0gTm9uIHNpIHVzYSBjb21lIGxpbmd1YWdnaW8gZGkgaW50ZXJyb2dhemlvbmUgZGVpIERCTVMgbWEgY29tZSByYXBwcmVzZW50YXppb25lIGludGVybmEgZGVsbGUgaW50ZXJyb2dhemlvbmkuCgotIENhbGNvbG8gcmVsYXppb25hbGU6IGxpbmd1YWdnaW8gZGljaGlhcmF0aXZvIGRpIHRpcG8gbG9naWNvIGRhbCBxdWFsZSDDqCBzdGF0byBkZXJpdmF0byBsJ1NRTAoKIyMjIEdsaSBvcGVyYXRvcmkgZGVsbCdhbGdlYnJhIHJlbGF6aW9uYWxlCgotIHVuaW9uZSwgaW50ZXJzZXppb25lLCBkaWZmZXJlbnphCi0gcmlkZW5vbWluYXppb25lCi0gc2VsZXppb25lCi0gcHJvaWV6aW9uZQotIGpvaW4gKGpvaW4gbmF0dXJhbGUsIHByb2RvdHRvIGNhcnRlc2lhbm8sIHRoZXRhLWpvaW4pCgojIyMgT3BlcmF0b3JpIEluc2llbWlzdGljaQoKLSBsZSByZWxhemlvbmkgc29ubyBpbnNpZW1pCi0gaSByaXN1bHRhdGkgZGV2b25vIGVzc2VyZSByZWxhemlvbmkKLSDDqCBwb3NzaWJpbGUgYXBwbGljYXJlIHVuaW9uZSwgaW50ZXJzZXppb25lLCBkaWZmZXJlbnphIHNvbG8gYSByZWxhemlvbmkgZGVmaW5pdGUgc3VnbGkgc3Rlc3NpIGF0dHJpYnV0aSAobm9tZSBlIHRpcG8pLCBjaW/DqCBwb3Nzb25vIG9wZXJhcmUgc29sbyBzdSB0dXBsZSB1bmlmb3JtaS4KCuKAoiBVbmlvbmU6IFIgVSBTCuKAoiBEaWZmZXJlbnphOiBSIOKAkyBTCuKAoiBRdWFsIMOoIGlsIHRpcG8gZGVsIHJpc3VsdGF0bz8gU2UgUiBlIFMgaGFubm8gbiBlbGVtZW50aSwgcXVhbnRpIG5lIGhhCmlsIHJpc3VsdGF0bz8K4oCiIFNlIHQxIMOoIHVuJ2VubnVwbGEgbm9uIGluIFIgLCBhbGxvcmE6CuKAoiBSID0gKFIgVSB7dF8xfSkg4oCTIHt0XzF9CuKAoiBvcGVyYXRvcmUgbW9uYWRpY28gKGNvbiB1biBhcmdvbWVudG8pCuKAoiAibW9kaWZpY2EgbG8gc2NoZW1hIiBsYXNjaWFuZG8gaW5hbHRlcmF0YSBsJ2lzdGFuemEgZGVsbCdvcGVyYW5kbwrigKIgw4ggaW5kaWNhdG8gY29uIGxhIGxldHRlcmEgcmhvCgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iLi9hc3NldHMvYmQtNC0xLnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoKIyMjIFNlbGV6aW9uZSAoUmVzdHJpemlvbmUpCgotIG9wZXJhdG9yZSBtb25hZGljbwotIHByb2R1Y2UgdW4gcmlzdWx0YXRvIGNoZToKICAtIGhhIGxvIHN0ZXNzbyBzY2hlbWEgZGVsbCdvcGVyYW5kbwogIC0gY29udGllbmUgdW4gc290dG9pbnNpZW1lIGRlbGxlIGVubnVwbGUgZGVsbCdvcGVyYW5kbwogIC0gcXVlbGxlIGNoZSBzb2RkaXNmYW5vIHVuYSBjb25kaXppb25lIGVzcHJlc3NhIGNvbWJpbmFuZG8sIGNvbiBpIGNvbm5ldHRpdmkgbG9naWNpIGFuZCwgb3IsIG5vdCwgY29uZGl6aW9uaSBhdG9taWNoZSBkZWwgdGlwbyBBIHRoZXRhIEIgb3BwdXJlIEEgdGhldGEgQyBkb3ZlIHRoZXRhIMOoIHVuIG9lcHJhdG9yZSBkaSBjb25mcm9udG8uIEEgZSBCIHNvbm8gYXRyaWJ1dGkgc3UgY3VpIGwnb3BlcmF0b3JlIHRoZXRhIGFiYmFpIHNlbnNvLCBjIHVuYSBjb3N0YW50ZSBjb21wYXRpYmlsZSBjb2wgZG9taW5pbyBkaSBBLgogICAgw4ggZGVub3RhdGEgY29uIHNpZ21hLCBjb24gbGEgY29uZGl6aW9uZSBtZXNzYSBhIHBlZGljZS4KCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTIucG5nIiBhbHQ9ImlzIiAvPgo8L3A+Cgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iLi9hc3NldHMvYmQtNC0zLnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoKX1NlbGV6aW9uZSBlIHByb2llemlvbmVfOiBjb21iaW5hbmRvIHNlbGV6aW9uZSBlIHByb2llemlvbmUsIHBvc3NpYW1vIGVzdHJhcnJlIGludGVyZXNzYW50aSBpbmZvcm1hemlvbmkgZGEgdW5hIHJlbGF6aW9uZS4KCl9Db21iaW5hbmRvIHNlbGV6aW9uZSBlIHByb2llemlvbmVfLCBwb3NzaWFtbyBlc3RyYXJyZSBpbmZvcm1hemlvbmkgZGEgdW5hIHJlbGF6aW9uZSwgbWEgbm9uIHBvc3NpYW1vIHBlcsOyIGNvcnJlbGFyZSBpbmZvcm1hemlvbmkgcHJlc2VudGkgaW4gcmVsYXppb25pIGRpdmVyc2UuCgpJbCBqb2luIMOoIGwnb3BlcmF0b3JlIHBpw7kgaW50ZXJlc3NhbnRlIGRlbGwnYWxnZWJyYSByZWxhemlvbmFsZSBwb2ljaMOoIHBlcm1ldHRlIGRpIGNvcnJlbGFyZSBkYXRpIGluIHJlbGF6aW9uaSBkaXZlcnNlLgoKKipKb2luIE5hdHVyYWxlKioKCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTQucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgrDiCB1biBvcGVyYXRvcmUgYmluYXJpbyBjaGUgY29ycmVsYSBkYXRpIGluIHJlbGF6aW9uaSBkaXZlcnNlLCBzdWxsYSBiYXNlIGRpIHZhbG9yaSB1Z3VhbGkgaW4gYXR0cmlidXRpIGNvbiBsbyBzdGVzc28gbm9tZS4KCi0gUHJvZHVjZSB1biByaXN1bHRhdG86Ci0gc3VsbCd1bmlvbmUgZGVnbGkgYXR0cmlidXRpIGRlZ2xpIG9wZXJhbmRpCi0gY29uIGVubnVwbGUgY2hlIHNvbm8gb3R0ZW51dGUgY29tYmluYW5kbyBsZSBlbm51cGxlIGRlZ2xpIG9wZXJhbmRpIGNvbiB2YWxvcmkgdWd1YWxpIHN1Z2xpIGF0dHJpYnV0aSBpbiBjb211bmUuCgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iLi9hc3NldHMvYmQtNC01LnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoKPHAgYWxpZ249ImNlbnRlciI+CiAgPGltZyBzcmM9Ii4vYXNzZXRzL2JkLTQtNi5wbmciIGFsdD0iaXMiIC8+CjwvcD4KCiMjIyBKb2luIGVzdGVybm8sIGludGVybm8sIHNpbmlzdHJvLCBkZXN0cm8sIGNvbXBsZXRvCgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iLi9hc3NldHMvYmQtNC03LnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoKKipJbCBwcm9kb3R0byBjYXJ0ZXNpYW5vOioqIMOoIHVuIGpvaW4gbmF0dXJhbGUgc2VuemEgYXR0cmlidXRpIGluIGNvbXVuZSBlIGNvbnRpZW5lIHNlbXByZSB1biBudW1lcm8gZGkgZW5udXBsZSBwYXJpIGFsIHByb2RvdHRvIGRsbGUgY2FyZGluYWxpdMOgIGRlZ2xpIG9wZXJhbmRpIChsZSBlbm51cGxlIHNvbm8gdHV0dGUgY29tYWJpbmFiaWxpKQoKKipUaGV0YS1qb2luIGVkIGVxdWktam9pbioqCgotIFByb2RvdHRvIGNhcnRlc2lhbm86IGNvbmNhdGVuYSB0dXBsZSBub24gbmVjZXNzYXJpYW1lbnRlIGNvcnJlbGF0ZSBkYWwgcHVudG8gZGkgdmlzdGEgc2VtYW50aWNvLgoKw6ggcGnDuSB1dGlsZSBzZSBmYXR0byBzZWd1aXJlIGRhIHVuYSBzZWxlemlvbmUuClByb2RvdHRvIGNhcnRlc2lhbm8gc2VndWl0byBkYWxsYSBzZWxlemlvbmUgY2hlIG1hbnRpZW5lIHNvbG8gbGUgdHVwbGUgY29uIHZhbG9yaSB1Z3VhbGkgc3VsbCdhdHRyaWJ1dG86ClJlcGFydG8gZGkgSW1waWVnYXRpIGUgY29kaWNlIGRpIHJlcGFydGkuCgojIyMgVGhldGEtam9pbgoKLSBJbCBwcm9kb3R0byBjYXJ0ZXNpYW5vLCBpbiBwcmF0aWNhLCBoYSBzZW5zbyBzb2xvIHNlIHNlZ3VpdG8gZGEgc2VsZXppb25lOgogIHNpZ21hX2NvbmRpemlvbmUgKFJfMSB8Pjx8IFJfMikKCi0gTCdvcGVyYXppb25lIHZpZW5lIGNoaWFtYXRhIHRoZXRhLWpvaW4gZSBwdcOyIGVzc2VyZSBzaW50YXR0aWNhbWVudGUgaW5kaWNhdGEgY29uCiAgUl8xIHw+PHxcX2NvbmRpemlvbmUgUl8yCgojIyMjIFBlcmNow6ggdGhldGEtam9pbj8KCkxhIGNvbmRpemlvbmUgQyDDqCBzcGVzc28gdW5hIGNvbmdpdW56aW9uZSBkaSBhdG9taSBkaSBjb25mcm9udG8gQV8xIHRoZXRhLWpvaW4gQV8yIGRvdmUgdGhldGFfam9pbiDDqCB1bm8gZGVnbGkgb3BlcmF0b3JpIGRpIGNvbmZyb250byAoPSwgPiw8LC4uLikKCi0gc2UgbCdvcGVyYXRvcmUgw6ggc2VtcHJlIGwndWd1YWdsaWFuemEgKD0pIGFsbG9yYSBzaSBwYXJsYSBkaSBlcXVpLWpvaW4KCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTgucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgojIyMgU2VsZiBKb2luCgpTdXBwb25pYW1vIGRpIGNvbnNpZGVyYXJlIGxhIHNlZ3VlbnRlIHJlbGF6aW9uZS4KCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTkucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgplIGRpIHZvbGVyIG90dGVuZXJlIHVuYSByZWxhemlvbmUgTm9ubm8tTmlwb3RlLgoKPHAgYWxpZ249ImNlbnRlciI+CiAgPGltZyBzcmM9Ii4vYXNzZXRzL2JkLTQtMTAucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgpVbmEgc2VsZXppb25lIGNvbmdpdW50aXZhIHB1w7IgZXNzZXJlIHNvc3RpdHVpdGEgZGEgdW5hIGNhc2NhdGEgZGkgc2VsZXppb25pIGF0b21pY2hlLgoKVW5hIHByb2llemlvbmUgcHXDsiBlc3NlcmUgdHJhc2Zvcm1hdGEgaW4gdW5hIGNhc2NhdGEgZGkgcHJvaWV6aW9uaSBjaGUgZWxpbWluYW5vIGkgdmFyaSBhdHRyaWJ1dGkgaW4gZmFzaSBkaXZlcnNlIHNlIEUgw6ggZGVmaW5pdGEgc3UgdW4gaW5zaWVtZSBkaSBhdHRyaWJ1dGkgY2hlIGNvbnRpZW5lIFkgb2x0cmUgY2hlIFguCgpwaSpYKEUpID0gcGlfWChwaSp7WFl9KEUpKQoKQW50aWNpcGF6aW9uZSBkZWxsYSBwcm9pZXppb25lIHJpc3BldHRvIGFsIGpvaW4gKFB1c2hpbmcgcHJvamVjdGlvbnMgZG93bik6Ck5vbiBoYSBlZmZldHRvIHN1bGwnZWZmaWNpZW56YSBtYSBzdWxsYSBsZWdnaWJpbGl0w6AuCgpJbiBnZW5lcmFsZSBzZSBSXzEgZWQgUl8yIHNvbm8gZGVmaW5pdGUgc2xsJ2luc2llbWUgZGkgYXR0cmlidXRpIFggPSBBQiwgZSBjb250ZW5nb25vIHR1cGxlIHVndWFsaSBzIEEgZSBkaXZlcnNlIHN1IEIuCgpJbCBDYWxjb2xvIHJlbGF6aW9uYWxlIMOoIHVuIGxpbmd1YWdnaW8gY2hlIHBlcm1ldHRlIGRpIGRlZmluaXJlIGlsIHJpc3VsdGF0byBkaSB1bidpbnRlcnJvZ2F6aW9uZSBjb21lIGwnaW5zaWVtZSBkaSBxdWVsbGUgZW5udXBsZSBjaGUgc29kZGlzZmFubyB1bmEgY2VydGEgY29uZGl6b25lIHBoaQ",
					"AQAAAAAAAAABAAAAmxUAAAAAAACbFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1511,
					1,
					"insert",
					{
						"characters": "\n-"
					},
					"AgAAAJwVAAAAAAAAnRUAAAAAAAAAAAAAnRUAAAAAAACeFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnBUAAAAAAACcFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1512,
					1,
					"insert",
					{
						"characters": " L'insieme"
					},
					"CgAAAJ4VAAAAAAAAnxUAAAAAAAAAAAAAnxUAAAAAAACgFQAAAAAAAAAAAACgFQAAAAAAAKEVAAAAAAAAAAAAAKEVAAAAAAAAohUAAAAAAAAAAAAAohUAAAAAAACjFQAAAAAAAAAAAACjFQAAAAAAAKQVAAAAAAAAAAAAAKQVAAAAAAAApRUAAAAAAAAAAAAApRUAAAAAAACmFQAAAAAAAAAAAACmFQAAAAAAAKcVAAAAAAAAAAAAAKcVAAAAAAAAqBUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnhUAAAAAAACeFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1513,
					1,
					"insert",
					{
						"characters": " delle"
					},
					"BgAAAKgVAAAAAAAAqRUAAAAAAAAAAAAAqRUAAAAAAACqFQAAAAAAAAAAAACqFQAAAAAAAKsVAAAAAAAAAAAAAKsVAAAAAAAArBUAAAAAAAAAAAAArBUAAAAAAACtFQAAAAAAAAAAAACtFQAAAAAAAK4VAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqBUAAAAAAACoFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1514,
					1,
					"insert",
					{
						"characters": " matricole"
					},
					"CgAAAK4VAAAAAAAArxUAAAAAAAAAAAAArxUAAAAAAACwFQAAAAAAAAAAAACwFQAAAAAAALEVAAAAAAAAAAAAALEVAAAAAAAAshUAAAAAAAAAAAAAshUAAAAAAACzFQAAAAAAAAAAAACzFQAAAAAAALQVAAAAAAAAAAAAALQVAAAAAAAAtRUAAAAAAAAAAAAAtRUAAAAAAAC2FQAAAAAAAAAAAAC2FQAAAAAAALcVAAAAAAAAAAAAALcVAAAAAAAAuBUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArhUAAAAAAACuFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1515,
					1,
					"insert",
					{
						"characters": " degli"
					},
					"BgAAALgVAAAAAAAAuRUAAAAAAAAAAAAAuRUAAAAAAAC6FQAAAAAAAAAAAAC6FQAAAAAAALsVAAAAAAAAAAAAALsVAAAAAAAAvBUAAAAAAAAAAAAAvBUAAAAAAAC9FQAAAAAAAAAAAAC9FQAAAAAAAL4VAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuBUAAAAAAAC4FQAAAAAAAAAAAAAAAPC/"
				],
				[
					1516,
					1,
					"insert",
					{
						"characters": " studenti"
					},
					"CQAAAL4VAAAAAAAAvxUAAAAAAAAAAAAAvxUAAAAAAADAFQAAAAAAAAAAAADAFQAAAAAAAMEVAAAAAAAAAAAAAMEVAAAAAAAAwhUAAAAAAAAAAAAAwhUAAAAAAADDFQAAAAAAAAAAAADDFQAAAAAAAMQVAAAAAAAAAAAAAMQVAAAAAAAAxRUAAAAAAAAAAAAAxRUAAAAAAADGFQAAAAAAAAAAAADGFQAAAAAAAMcVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvhUAAAAAAAC+FQAAAAAAAAAAAAAAAPC/"
				],
				[
					1517,
					1,
					"insert",
					{
						"characters": " che"
					},
					"BAAAAMcVAAAAAAAAyBUAAAAAAAAAAAAAyBUAAAAAAADJFQAAAAAAAAAAAADJFQAAAAAAAMoVAAAAAAAAAAAAAMoVAAAAAAAAyxUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxxUAAAAAAADHFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1518,
					1,
					"insert",
					{
						"characters": " hanno"
					},
					"BgAAAMsVAAAAAAAAzBUAAAAAAAAAAAAAzBUAAAAAAADNFQAAAAAAAAAAAADNFQAAAAAAAM4VAAAAAAAAAAAAAM4VAAAAAAAAzxUAAAAAAAAAAAAAzxUAAAAAAADQFQAAAAAAAAAAAADQFQAAAAAAANEVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyxUAAAAAAADLFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1519,
					1,
					"insert",
					{
						"characters": " superato"
					},
					"CQAAANEVAAAAAAAA0hUAAAAAAAAAAAAA0hUAAAAAAADTFQAAAAAAAAAAAADTFQAAAAAAANQVAAAAAAAAAAAAANQVAAAAAAAA1RUAAAAAAAAAAAAA1RUAAAAAAADWFQAAAAAAAAAAAADWFQAAAAAAANcVAAAAAAAAAAAAANcVAAAAAAAA2BUAAAAAAAAAAAAA2BUAAAAAAADZFQAAAAAAAAAAAADZFQAAAAAAANoVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0RUAAAAAAADRFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1520,
					1,
					"insert",
					{
						"characters": " wu"
					},
					"AwAAANoVAAAAAAAA2xUAAAAAAAAAAAAA2xUAAAAAAADcFQAAAAAAAAAAAADcFQAAAAAAAN0VAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2hUAAAAAAADaFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1521,
					2,
					"left_delete",
					null,
					"AgAAANwVAAAAAAAA3BUAAAAAAAABAAAAddsVAAAAAAAA2xUAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAA3RUAAAAAAADdFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1522,
					1,
					"insert",
					{
						"characters": "qualcuno"
					},
					"CAAAANsVAAAAAAAA3BUAAAAAAAAAAAAA3BUAAAAAAADdFQAAAAAAAAAAAADdFQAAAAAAAN4VAAAAAAAAAAAAAN4VAAAAAAAA3xUAAAAAAAAAAAAA3xUAAAAAAADgFQAAAAAAAAAAAADgFQAAAAAAAOEVAAAAAAAAAAAAAOEVAAAAAAAA4hUAAAAAAAAAAAAA4hUAAAAAAADjFQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2xUAAAAAAADbFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1523,
					1,
					"insert",
					{
						"characters": " degli"
					},
					"BgAAAOMVAAAAAAAA5BUAAAAAAAAAAAAA5BUAAAAAAADlFQAAAAAAAAAAAADlFQAAAAAAAOYVAAAAAAAAAAAAAOYVAAAAAAAA5xUAAAAAAAAAAAAA5xUAAAAAAADoFQAAAAAAAAAAAADoFQAAAAAAAOkVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4xUAAAAAAADjFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1524,
					1,
					"insert",
					{
						"characters": " esami"
					},
					"BgAAAOkVAAAAAAAA6hUAAAAAAAAAAAAA6hUAAAAAAADrFQAAAAAAAAAAAADrFQAAAAAAAOwVAAAAAAAAAAAAAOwVAAAAAAAA7RUAAAAAAAAAAAAA7RUAAAAAAADuFQAAAAAAAAAAAADuFQAAAAAAAO8VAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6RUAAAAAAADpFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1525,
					1,
					"insert",
					{
						"characters": " elencati"
					},
					"CQAAAO8VAAAAAAAA8BUAAAAAAAAAAAAA8BUAAAAAAADxFQAAAAAAAAAAAADxFQAAAAAAAPIVAAAAAAAAAAAAAPIVAAAAAAAA8xUAAAAAAAAAAAAA8xUAAAAAAAD0FQAAAAAAAAAAAAD0FQAAAAAAAPUVAAAAAAAAAAAAAPUVAAAAAAAA9hUAAAAAAAAAAAAA9hUAAAAAAAD3FQAAAAAAAAAAAAD3FQAAAAAAAPgVAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7xUAAAAAAADvFQAAAAAAAAAAAAAAAPC/"
				],
				[
					1526,
					1,
					"insert",
					{
						"characters": " nella"
					},
					"BgAAAPgVAAAAAAAA+RUAAAAAAAAAAAAA+RUAAAAAAAD6FQAAAAAAAAAAAAD6FQAAAAAAAPsVAAAAAAAAAAAAAPsVAAAAAAAA/BUAAAAAAAAAAAAA/BUAAAAAAAD9FQAAAAAAAAAAAAD9FQAAAAAAAP4VAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+BUAAAAAAAD4FQAAAAAAAAAAAAAAAPC/"
				],
				[
					1527,
					1,
					"insert",
					{
						"characters": " relazione"
					},
					"CgAAAP4VAAAAAAAA/xUAAAAAAAAAAAAA/xUAAAAAAAAAFgAAAAAAAAAAAAAAFgAAAAAAAAEWAAAAAAAAAAAAAAEWAAAAAAAAAhYAAAAAAAAAAAAAAhYAAAAAAAADFgAAAAAAAAAAAAADFgAAAAAAAAQWAAAAAAAAAAAAAAQWAAAAAAAABRYAAAAAAAAAAAAABRYAAAAAAAAGFgAAAAAAAAAAAAAGFgAAAAAAAAcWAAAAAAAAAAAAAAcWAAAAAAAACBYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/hUAAAAAAAD+FQAAAAAAAAAAAAAAAPC/"
				],
				[
					1528,
					1,
					"insert",
					{
						"characters": " Materi"
					},
					"BwAAAAgWAAAAAAAACRYAAAAAAAAAAAAACRYAAAAAAAAKFgAAAAAAAAAAAAAKFgAAAAAAAAsWAAAAAAAAAAAAAAsWAAAAAAAADBYAAAAAAAAAAAAADBYAAAAAAAANFgAAAAAAAAAAAAANFgAAAAAAAA4WAAAAAAAAAAAAAA4WAAAAAAAADxYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACBYAAAAAAAAIFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1529,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAA8WAAAAAAAAEBYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADxYAAAAAAAAPFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1530,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABAWAAAAAAAAEhYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEBYAAAAAAAAQFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1533,
					1,
					"insert",
					{
						"characters": "Materia"
					},
					"BwAAABEWAAAAAAAAEhYAAAAAAAAAAAAAEhYAAAAAAAATFgAAAAAAAAAAAAATFgAAAAAAABQWAAAAAAAAAAAAABQWAAAAAAAAFRYAAAAAAAAAAAAAFRYAAAAAAAAWFgAAAAAAAAAAAAAWFgAAAAAAABcWAAAAAAAAAAAAABcWAAAAAAAAGBYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAERYAAAAAAAARFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1535,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAABkWAAAAAAAAGhYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGRYAAAAAAAAZFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1536,
					1,
					"insert",
					{
						"characters": " si"
					},
					"AwAAABoWAAAAAAAAGxYAAAAAAAAAAAAAGxYAAAAAAAAcFgAAAAAAAAAAAAAcFgAAAAAAAB0WAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGhYAAAAAAAAaFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1537,
					1,
					"insert",
					{
						"characters": " puÃ²"
					},
					"BAAAAB0WAAAAAAAAHhYAAAAAAAAAAAAAHhYAAAAAAAAfFgAAAAAAAAAAAAAfFgAAAAAAACAWAAAAAAAAAAAAACAWAAAAAAAAIRYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHRYAAAAAAAAdFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1538,
					1,
					"insert",
					{
						"characters": " definire"
					},
					"CQAAACEWAAAAAAAAIhYAAAAAAAAAAAAAIhYAAAAAAAAjFgAAAAAAAAAAAAAjFgAAAAAAACQWAAAAAAAAAAAAACQWAAAAAAAAJRYAAAAAAAAAAAAAJRYAAAAAAAAmFgAAAAAAAAAAAAAmFgAAAAAAACcWAAAAAAAAAAAAACcWAAAAAAAAKBYAAAAAAAAAAAAAKBYAAAAAAAApFgAAAAAAAAAAAAApFgAAAAAAACoWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIRYAAAAAAAAhFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1539,
					1,
					"insert",
					{
						"characters": " come:"
					},
					"BgAAACoWAAAAAAAAKxYAAAAAAAAAAAAAKxYAAAAAAAAsFgAAAAAAAAAAAAAsFgAAAAAAAC0WAAAAAAAAAAAAAC0WAAAAAAAALhYAAAAAAAAAAAAALhYAAAAAAAAvFgAAAAAAAAAAAAAvFgAAAAAAADAWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKhYAAAAAAAAqFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1540,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAADAWAAAAAAAAMRYAAAAAAAAAAAAAMRYAAAAAAAAyFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMBYAAAAAAAAwFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1541,
					1,
					"paste",
					null,
					"AQAAADIWAAAAAAAAdxYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMhYAAAAAAAAyFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1542,
					1,
					"replace_view_content",
					{
						"content": "# Basi di Dati Capitolo 4\n\n[Link alle slides](https://elearning.di.unipi.it/pluginfile.php/77038/mod_resource/content/2/4b.ModelloRel_AlgebraRelazionale_Parte_I.pdf)\n\n## Algebra relazionale\n\n_Operazioni sullo schema_\n\n- **DDL: Data Definition Language**\n  Operazioni di creazione, cancellazione e modifica di schemi di tabelle, creazioni viste, creazione indici.\n\n_Operazioni sui dati_\n\n- **DML: Data Manipulation language**\n  - _data query language:_ Query o interrogazione della base di dati\n  - _Aggiornamento dati:_ Inserimento, cancellazione e modifica di dati\n\n### Linguaggi Relazionali\n\n- Algebra relazionale: insieme di operatori su relazioni che danno come risultato relazioni.\n\n- Non si usa come linguaggio di interrogazione dei DBMS ma come rappresentazione interna delle interrogazioni.\n\n- Calcolo relazionale: linguaggio dichiarativo di tipo logico dal quale Ã¨ stato derivato l'SQL\n\n### Gli operatori dell'algebra relazionale\n\n- unione, intersezione, differenza\n- ridenominazione\n- selezione\n- proiezione\n- join (join naturale, prodotto cartesiano, theta-join)\n\n### Operatori Insiemistici\n\n- le relazioni sono insiemi\n- i risultati devono essere relazioni\n- Ã¨ possibile applicare unione, intersezione, differenza solo a relazioni definite sugli stessi attributi (nome e tipo), cioÃ¨ possono operare solo su tuple uniformi.\n\nâ¢ Unione: R U S\nâ¢ Differenza: R â S\nâ¢ Qual Ã¨ il tipo del risultato? Se R e S hanno n elementi, quanti ne ha\nil risultato?\nâ¢ Se t1 Ã¨ un'ennupla non in R , allora:\nâ¢ R = (R U {t_1}) â {t_1}\nâ¢ operatore monadico (con un argomento)\nâ¢ \"modifica lo schema\" lasciando inalterata l'istanza dell'operando\nâ¢ Ã indicato con la lettera rho\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-1.png\" alt=\"is\" />\n</p>\n\n### Selezione (Restrizione)\n\n- operatore monadico\n- produce un risultato che:\n  - ha lo stesso schema dell'operando\n  - contiene un sottoinsieme delle ennuple dell'operando\n  - quelle che soddisfano una condizione espressa combinando, con i connettivi logici and, or, not, condizioni atomiche del tipo A theta B oppure A theta C dove theta Ã¨ un oepratore di confronto. A e B sono atributi su cui l'operatore theta abbai senso, c una costante compatibile col dominio di A.\n    Ã denotata con sigma, con la condizione messa a pedice.\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-2.png\" alt=\"is\" />\n</p>\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-3.png\" alt=\"is\" />\n</p>\n\n_Selezione e proiezione_: combinando selezione e proiezione, possiamo estrarre interessanti informazioni da una relazione.\n\n_Combinando selezione e proiezione_, possiamo estrarre informazioni da una relazione, ma non possiamo perÃ² correlare informazioni presenti in relazioni diverse.\n\nIl join Ã¨ l'operatore piÃ¹ interessante dell'algebra relazionale poichÃ¨ permette di correlare dati in relazioni diverse.\n\n**Join Naturale**\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-4.png\" alt=\"is\" />\n</p>\n\nÃ un operatore binario che correla dati in relazioni diverse, sulla base di valori uguali in attributi con lo stesso nome.\n\n- Produce un risultato:\n- sull'unione degli attributi degli operandi\n- con ennuple che sono ottenute combinando le ennuple degli operandi con valori uguali sugli attributi in comune.\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-5.png\" alt=\"is\" />\n</p>\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-6.png\" alt=\"is\" />\n</p>\n\n### Join esterno, interno, sinistro, destro, completo\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-7.png\" alt=\"is\" />\n</p>\n\n**Il prodotto cartesiano:** Ã¨ un join naturale senza attributi in comune e contiene sempre un numero di ennuple pari al prodotto dlle cardinalitÃ  degli operandi (le ennuple sono tutte comabinabili)\n\n**Theta-join ed equi-join**\n\n- Prodotto cartesiano: concatena tuple non necessariamente correlate dal punto di vista semantico.\n\nÃ¨ piÃ¹ utile se fatto seguire da una selezione.\nProdotto cartesiano seguito dalla selezione che mantiene solo le tuple con valori uguali sull'attributo:\nReparto di Impiegati e codice di reparti.\n\n### Theta-join\n\n- Il prodotto cartesiano, in pratica, ha senso solo se seguito da selezione:\n  sigma_condizione (R_1 |><| R_2)\n\n- L'operazione viene chiamata theta-join e puÃ² essere sintatticamente indicata con\n  R_1 |><|\\_condizione R_2\n\n#### PerchÃ¨ theta-join?\n\nLa condizione C Ã¨ spesso una congiunzione di atomi di confronto A_1 theta-join A_2 dove theta_join Ã¨ uno degli operatori di confronto (=, >,<,...)\n\n- se l'operatore Ã¨ sempre l'uguaglianza (=) allora si parla di equi-join\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-8.png\" alt=\"is\" />\n</p>\n\n### Self Join\n\nSupponiamo di considerare la seguente relazione.\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-9.png\" alt=\"is\" />\n</p>\n\ne di voler ottenere una relazione Nonno-Nipote.\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-10.png\" alt=\"is\" />\n</p>\n\nUna selezione congiuntiva puÃ² essere sostituita da una cascata di selezioni atomiche.\n\nUna proiezione puÃ² essere trasformata in una cascata di proiezioni che eliminano i vari attributi in fasi diverse se E Ã¨ definita su un insieme di attributi che contiene Y oltre che X.\n\npi*X(E) = pi_X(pi*{XY}(E))\n\nAnticipazione della proiezione rispetto al join (Pushing projections down):\nNon ha effetto sull'efficienza ma sulla leggibilitÃ .\n\nIn generale se R_1 ed R_2 sono definite sll'insieme di attributi X = AB, e contengono tuple uguali s A e diverse su B.\n\nIl Calcolo relazionale Ã¨ un linguaggio che permette di definire il risultato di un'interrogazione come l'insieme di quelle ennuple che soddisfano una certa condizone phi\n\n- L'insieme delle matricole degli studenti che hanno superato qualcuno degli esami elencati nella relazione Materie(Materia), si puÃ² definire come:\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-7.png\" alt=\"is\" />\n</p>\n"
					},
					"AQAAAAAAAAAAAAAAdxYAAAAAAACnFgAAIyBCYXNpIGRpIERhdGkgQ2FwaXRvbG8gNAoKW0xpbmsgYWxsZSBzbGlkZXNdKGh0dHBzOi8vZWxlYXJuaW5nLmRpLnVuaXBpLml0L3BsdWdpbmZpbGUucGhwLzc3MDM4L21vZF9yZXNvdXJjZS9jb250ZW50LzIvNGIuTW9kZWxsb1JlbF9BbGdlYnJhUmVsYXppb25hbGVfUGFydGVfSS5wZGYpCgojIyBBbGdlYnJhIHJlbGF6aW9uYWxlCgpfT3BlcmF6aW9uaSBzdWxsbyBzY2hlbWFfCgotICoqRERMOiBEYXRhIERlZmluaXRpb24gTGFuZ3VhZ2UqKgogIE9wZXJhemlvbmkgZGkgY3JlYXppb25lLCBjYW5jZWxsYXppb25lIGUgbW9kaWZpY2EgZGkgc2NoZW1pIGRpIHRhYmVsbGUsIGNyZWF6aW9uaSB2aXN0ZSwgY3JlYXppb25lIGluZGljaS4KCl9PcGVyYXppb25pIHN1aSBkYXRpXwoKLSAqKkRNTDogRGF0YSBNYW5pcHVsYXRpb24gbGFuZ3VhZ2UqKgogIC0gX2RhdGEgcXVlcnkgbGFuZ3VhZ2U6XyBRdWVyeSBvIGludGVycm9nYXppb25lIGRlbGxhIGJhc2UgZGkgZGF0aQogIC0gX0FnZ2lvcm5hbWVudG8gZGF0aTpfIEluc2VyaW1lbnRvLCBjYW5jZWxsYXppb25lIGUgbW9kaWZpY2EgZGkgZGF0aQoKIyMjIExpbmd1YWdnaSBSZWxhemlvbmFsaQoKLSBBbGdlYnJhIHJlbGF6aW9uYWxlOiBpbnNpZW1lIGRpIG9wZXJhdG9yaSBzdSByZWxhemlvbmkgY2hlIGRhbm5vIGNvbWUgcmlzdWx0YXRvIHJlbGF6aW9uaS4KCi0gTm9uIHNpIHVzYSBjb21lIGxpbmd1YWdnaW8gZGkgaW50ZXJyb2dhemlvbmUgZGVpIERCTVMgbWEgY29tZSByYXBwcmVzZW50YXppb25lIGludGVybmEgZGVsbGUgaW50ZXJyb2dhemlvbmkuCgotIENhbGNvbG8gcmVsYXppb25hbGU6IGxpbmd1YWdnaW8gZGljaGlhcmF0aXZvIGRpIHRpcG8gbG9naWNvIGRhbCBxdWFsZSDDqCBzdGF0byBkZXJpdmF0byBsJ1NRTAoKIyMjIEdsaSBvcGVyYXRvcmkgZGVsbCdhbGdlYnJhIHJlbGF6aW9uYWxlCgotIHVuaW9uZSwgaW50ZXJzZXppb25lLCBkaWZmZXJlbnphCi0gcmlkZW5vbWluYXppb25lCi0gc2VsZXppb25lCi0gcHJvaWV6aW9uZQotIGpvaW4gKGpvaW4gbmF0dXJhbGUsIHByb2RvdHRvIGNhcnRlc2lhbm8sIHRoZXRhLWpvaW4pCgojIyMgT3BlcmF0b3JpIEluc2llbWlzdGljaQoKLSBsZSByZWxhemlvbmkgc29ubyBpbnNpZW1pCi0gaSByaXN1bHRhdGkgZGV2b25vIGVzc2VyZSByZWxhemlvbmkKLSDDqCBwb3NzaWJpbGUgYXBwbGljYXJlIHVuaW9uZSwgaW50ZXJzZXppb25lLCBkaWZmZXJlbnphIHNvbG8gYSByZWxhemlvbmkgZGVmaW5pdGUgc3VnbGkgc3Rlc3NpIGF0dHJpYnV0aSAobm9tZSBlIHRpcG8pLCBjaW/DqCBwb3Nzb25vIG9wZXJhcmUgc29sbyBzdSB0dXBsZSB1bmlmb3JtaS4KCuKAoiBVbmlvbmU6IFIgVSBTCuKAoiBEaWZmZXJlbnphOiBSIOKAkyBTCuKAoiBRdWFsIMOoIGlsIHRpcG8gZGVsIHJpc3VsdGF0bz8gU2UgUiBlIFMgaGFubm8gbiBlbGVtZW50aSwgcXVhbnRpIG5lIGhhCmlsIHJpc3VsdGF0bz8K4oCiIFNlIHQxIMOoIHVuJ2VubnVwbGEgbm9uIGluIFIgLCBhbGxvcmE6CuKAoiBSID0gKFIgVSB7dF8xfSkg4oCTIHt0XzF9CuKAoiBvcGVyYXRvcmUgbW9uYWRpY28gKGNvbiB1biBhcmdvbWVudG8pCuKAoiAibW9kaWZpY2EgbG8gc2NoZW1hIiBsYXNjaWFuZG8gaW5hbHRlcmF0YSBsJ2lzdGFuemEgZGVsbCdvcGVyYW5kbwrigKIgw4ggaW5kaWNhdG8gY29uIGxhIGxldHRlcmEgcmhvCgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iLi9hc3NldHMvYmQtNC0xLnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoKIyMjIFNlbGV6aW9uZSAoUmVzdHJpemlvbmUpCgotIG9wZXJhdG9yZSBtb25hZGljbwotIHByb2R1Y2UgdW4gcmlzdWx0YXRvIGNoZToKICAtIGhhIGxvIHN0ZXNzbyBzY2hlbWEgZGVsbCdvcGVyYW5kbwogIC0gY29udGllbmUgdW4gc290dG9pbnNpZW1lIGRlbGxlIGVubnVwbGUgZGVsbCdvcGVyYW5kbwogIC0gcXVlbGxlIGNoZSBzb2RkaXNmYW5vIHVuYSBjb25kaXppb25lIGVzcHJlc3NhIGNvbWJpbmFuZG8sIGNvbiBpIGNvbm5ldHRpdmkgbG9naWNpIGFuZCwgb3IsIG5vdCwgY29uZGl6aW9uaSBhdG9taWNoZSBkZWwgdGlwbyBBIHRoZXRhIEIgb3BwdXJlIEEgdGhldGEgQyBkb3ZlIHRoZXRhIMOoIHVuIG9lcHJhdG9yZSBkaSBjb25mcm9udG8uIEEgZSBCIHNvbm8gYXRyaWJ1dGkgc3UgY3VpIGwnb3BlcmF0b3JlIHRoZXRhIGFiYmFpIHNlbnNvLCBjIHVuYSBjb3N0YW50ZSBjb21wYXRpYmlsZSBjb2wgZG9taW5pbyBkaSBBLgogICAgw4ggZGVub3RhdGEgY29uIHNpZ21hLCBjb24gbGEgY29uZGl6aW9uZSBtZXNzYSBhIHBlZGljZS4KCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTIucG5nIiBhbHQ9ImlzIiAvPgo8L3A+Cgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iLi9hc3NldHMvYmQtNC0zLnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoKX1NlbGV6aW9uZSBlIHByb2llemlvbmVfOiBjb21iaW5hbmRvIHNlbGV6aW9uZSBlIHByb2llemlvbmUsIHBvc3NpYW1vIGVzdHJhcnJlIGludGVyZXNzYW50aSBpbmZvcm1hemlvbmkgZGEgdW5hIHJlbGF6aW9uZS4KCl9Db21iaW5hbmRvIHNlbGV6aW9uZSBlIHByb2llemlvbmVfLCBwb3NzaWFtbyBlc3RyYXJyZSBpbmZvcm1hemlvbmkgZGEgdW5hIHJlbGF6aW9uZSwgbWEgbm9uIHBvc3NpYW1vIHBlcsOyIGNvcnJlbGFyZSBpbmZvcm1hemlvbmkgcHJlc2VudGkgaW4gcmVsYXppb25pIGRpdmVyc2UuCgpJbCBqb2luIMOoIGwnb3BlcmF0b3JlIHBpw7kgaW50ZXJlc3NhbnRlIGRlbGwnYWxnZWJyYSByZWxhemlvbmFsZSBwb2ljaMOoIHBlcm1ldHRlIGRpIGNvcnJlbGFyZSBkYXRpIGluIHJlbGF6aW9uaSBkaXZlcnNlLgoKKipKb2luIE5hdHVyYWxlKioKCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTQucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgrDiCB1biBvcGVyYXRvcmUgYmluYXJpbyBjaGUgY29ycmVsYSBkYXRpIGluIHJlbGF6aW9uaSBkaXZlcnNlLCBzdWxsYSBiYXNlIGRpIHZhbG9yaSB1Z3VhbGkgaW4gYXR0cmlidXRpIGNvbiBsbyBzdGVzc28gbm9tZS4KCi0gUHJvZHVjZSB1biByaXN1bHRhdG86Ci0gc3VsbCd1bmlvbmUgZGVnbGkgYXR0cmlidXRpIGRlZ2xpIG9wZXJhbmRpCi0gY29uIGVubnVwbGUgY2hlIHNvbm8gb3R0ZW51dGUgY29tYmluYW5kbyBsZSBlbm51cGxlIGRlZ2xpIG9wZXJhbmRpIGNvbiB2YWxvcmkgdWd1YWxpIHN1Z2xpIGF0dHJpYnV0aSBpbiBjb211bmUuCgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iLi9hc3NldHMvYmQtNC01LnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoKPHAgYWxpZ249ImNlbnRlciI+CiAgPGltZyBzcmM9Ii4vYXNzZXRzL2JkLTQtNi5wbmciIGFsdD0iaXMiIC8+CjwvcD4KCiMjIyBKb2luIGVzdGVybm8sIGludGVybm8sIHNpbmlzdHJvLCBkZXN0cm8sIGNvbXBsZXRvCgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iLi9hc3NldHMvYmQtNC03LnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoKKipJbCBwcm9kb3R0byBjYXJ0ZXNpYW5vOioqIMOoIHVuIGpvaW4gbmF0dXJhbGUgc2VuemEgYXR0cmlidXRpIGluIGNvbXVuZSBlIGNvbnRpZW5lIHNlbXByZSB1biBudW1lcm8gZGkgZW5udXBsZSBwYXJpIGFsIHByb2RvdHRvIGRsbGUgY2FyZGluYWxpdMOgIGRlZ2xpIG9wZXJhbmRpIChsZSBlbm51cGxlIHNvbm8gdHV0dGUgY29tYWJpbmFiaWxpKQoKKipUaGV0YS1qb2luIGVkIGVxdWktam9pbioqCgotIFByb2RvdHRvIGNhcnRlc2lhbm86IGNvbmNhdGVuYSB0dXBsZSBub24gbmVjZXNzYXJpYW1lbnRlIGNvcnJlbGF0ZSBkYWwgcHVudG8gZGkgdmlzdGEgc2VtYW50aWNvLgoKw6ggcGnDuSB1dGlsZSBzZSBmYXR0byBzZWd1aXJlIGRhIHVuYSBzZWxlemlvbmUuClByb2RvdHRvIGNhcnRlc2lhbm8gc2VndWl0byBkYWxsYSBzZWxlemlvbmUgY2hlIG1hbnRpZW5lIHNvbG8gbGUgdHVwbGUgY29uIHZhbG9yaSB1Z3VhbGkgc3VsbCdhdHRyaWJ1dG86ClJlcGFydG8gZGkgSW1waWVnYXRpIGUgY29kaWNlIGRpIHJlcGFydGkuCgojIyMgVGhldGEtam9pbgoKLSBJbCBwcm9kb3R0byBjYXJ0ZXNpYW5vLCBpbiBwcmF0aWNhLCBoYSBzZW5zbyBzb2xvIHNlIHNlZ3VpdG8gZGEgc2VsZXppb25lOgogIHNpZ21hX2NvbmRpemlvbmUgKFJfMSB8Pjx8IFJfMikKCi0gTCdvcGVyYXppb25lIHZpZW5lIGNoaWFtYXRhIHRoZXRhLWpvaW4gZSBwdcOyIGVzc2VyZSBzaW50YXR0aWNhbWVudGUgaW5kaWNhdGEgY29uCiAgUl8xIHw+PHxcX2NvbmRpemlvbmUgUl8yCgojIyMjIFBlcmNow6ggdGhldGEtam9pbj8KCkxhIGNvbmRpemlvbmUgQyDDqCBzcGVzc28gdW5hIGNvbmdpdW56aW9uZSBkaSBhdG9taSBkaSBjb25mcm9udG8gQV8xIHRoZXRhLWpvaW4gQV8yIGRvdmUgdGhldGFfam9pbiDDqCB1bm8gZGVnbGkgb3BlcmF0b3JpIGRpIGNvbmZyb250byAoPSwgPiw8LC4uLikKCi0gc2UgbCdvcGVyYXRvcmUgw6ggc2VtcHJlIGwndWd1YWdsaWFuemEgKD0pIGFsbG9yYSBzaSBwYXJsYSBkaSBlcXVpLWpvaW4KCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTgucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgojIyMgU2VsZiBKb2luCgpTdXBwb25pYW1vIGRpIGNvbnNpZGVyYXJlIGxhIHNlZ3VlbnRlIHJlbGF6aW9uZS4KCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTkucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgplIGRpIHZvbGVyIG90dGVuZXJlIHVuYSByZWxhemlvbmUgTm9ubm8tTmlwb3RlLgoKPHAgYWxpZ249ImNlbnRlciI+CiAgPGltZyBzcmM9Ii4vYXNzZXRzL2JkLTQtMTAucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgpVbmEgc2VsZXppb25lIGNvbmdpdW50aXZhIHB1w7IgZXNzZXJlIHNvc3RpdHVpdGEgZGEgdW5hIGNhc2NhdGEgZGkgc2VsZXppb25pIGF0b21pY2hlLgoKVW5hIHByb2llemlvbmUgcHXDsiBlc3NlcmUgdHJhc2Zvcm1hdGEgaW4gdW5hIGNhc2NhdGEgZGkgcHJvaWV6aW9uaSBjaGUgZWxpbWluYW5vIGkgdmFyaSBhdHRyaWJ1dGkgaW4gZmFzaSBkaXZlcnNlIHNlIEUgw6ggZGVmaW5pdGEgc3UgdW4gaW5zaWVtZSBkaSBhdHRyaWJ1dGkgY2hlIGNvbnRpZW5lIFkgb2x0cmUgY2hlIFguCgpwaSpYKEUpID0gcGlfWChwaSp7WFl9KEUpKQoKQW50aWNpcGF6aW9uZSBkZWxsYSBwcm9pZXppb25lIHJpc3BldHRvIGFsIGpvaW4gKFB1c2hpbmcgcHJvamVjdGlvbnMgZG93bik6Ck5vbiBoYSBlZmZldHRvIHN1bGwnZWZmaWNpZW56YSBtYSBzdWxsYSBsZWdnaWJpbGl0w6AuCgpJbiBnZW5lcmFsZSBzZSBSXzEgZWQgUl8yIHNvbm8gZGVmaW5pdGUgc2xsJ2luc2llbWUgZGkgYXR0cmlidXRpIFggPSBBQiwgZSBjb250ZW5nb25vIHR1cGxlIHVndWFsaSBzIEEgZSBkaXZlcnNlIHN1IEIuCgpJbCBDYWxjb2xvIHJlbGF6aW9uYWxlIMOoIHVuIGxpbmd1YWdnaW8gY2hlIHBlcm1ldHRlIGRpIGRlZmluaXJlIGlsIHJpc3VsdGF0byBkaSB1bidpbnRlcnJvZ2F6aW9uZSBjb21lIGwnaW5zaWVtZSBkaSBxdWVsbGUgZW5udXBsZSBjaGUgc29kZGlzZmFubyB1bmEgY2VydGEgY29uZGl6b25lIHBoaQoKLSBMJ2luc2llbWUgZGVsbGUgbWF0cmljb2xlIGRlZ2xpIHN0dWRlbnRpIGNoZSBoYW5ubyBzdXBlcmF0byBxdWFsY3VubyBkZWdsaSBlc2FtaSBlbGVuY2F0aSBuZWxsYSByZWxhemlvbmUgTWF0ZXJpZShNYXRlcmlhKSwgc2kgcHXDsiBkZWZpbmlyZSBjb21lOgoKPHAgYWxpZ249ImNlbnRlciI+CiAgPGltZyBzcmM9Ii4vYXNzZXRzL2JkLTQtNy5wbmciIGFsdD0iaXMiIC8+CjwvcD4K",
					"AQAAAAAAAAABAAAAdxYAAAAAAAB3FgAAAAAAAAAAAAAAAPC/"
				],
				[
					1545,
					1,
					"left_delete",
					null,
					"AQAAAF4WAAAAAAAAXhYAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAXxYAAAAAAABfFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1546,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAAF4WAAAAAAAAXxYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXhYAAAAAAABeFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1548,
					1,
					"left_delete",
					null,
					"AQAAAF8WAAAAAAAAXxYAAAAAAAABAAAANw",
					"AQAAAAAAAAABAAAAYBYAAAAAAABgFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1549,
					1,
					"insert",
					{
						"characters": "11"
					},
					"AgAAAF8WAAAAAAAAYBYAAAAAAAAAAAAAYBYAAAAAAABhFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXxYAAAAAAABfFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1550,
					1,
					"replace_view_content",
					{
						"content": "# Basi di Dati Capitolo 4\n\n[Link alle slides](https://elearning.di.unipi.it/pluginfile.php/77038/mod_resource/content/2/4b.ModelloRel_AlgebraRelazionale_Parte_I.pdf)\n\n## Algebra relazionale\n\n_Operazioni sullo schema_\n\n- **DDL: Data Definition Language**\n  Operazioni di creazione, cancellazione e modifica di schemi di tabelle, creazioni viste, creazione indici.\n\n_Operazioni sui dati_\n\n- **DML: Data Manipulation language**\n  - _data query language:_ Query o interrogazione della base di dati\n  - _Aggiornamento dati:_ Inserimento, cancellazione e modifica di dati\n\n### Linguaggi Relazionali\n\n- Algebra relazionale: insieme di operatori su relazioni che danno come risultato relazioni.\n\n- Non si usa come linguaggio di interrogazione dei DBMS ma come rappresentazione interna delle interrogazioni.\n\n- Calcolo relazionale: linguaggio dichiarativo di tipo logico dal quale Ã¨ stato derivato l'SQL\n\n### Gli operatori dell'algebra relazionale\n\n- unione, intersezione, differenza\n- ridenominazione\n- selezione\n- proiezione\n- join (join naturale, prodotto cartesiano, theta-join)\n\n### Operatori Insiemistici\n\n- le relazioni sono insiemi\n- i risultati devono essere relazioni\n- Ã¨ possibile applicare unione, intersezione, differenza solo a relazioni definite sugli stessi attributi (nome e tipo), cioÃ¨ possono operare solo su tuple uniformi.\n\nâ¢ Unione: R U S\nâ¢ Differenza: R â S\nâ¢ Qual Ã¨ il tipo del risultato? Se R e S hanno n elementi, quanti ne ha\nil risultato?\nâ¢ Se t1 Ã¨ un'ennupla non in R , allora:\nâ¢ R = (R U {t_1}) â {t_1}\nâ¢ operatore monadico (con un argomento)\nâ¢ \"modifica lo schema\" lasciando inalterata l'istanza dell'operando\nâ¢ Ã indicato con la lettera rho\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-1.png\" alt=\"is\" />\n</p>\n\n### Selezione (Restrizione)\n\n- operatore monadico\n- produce un risultato che:\n  - ha lo stesso schema dell'operando\n  - contiene un sottoinsieme delle ennuple dell'operando\n  - quelle che soddisfano una condizione espressa combinando, con i connettivi logici and, or, not, condizioni atomiche del tipo A theta B oppure A theta C dove theta Ã¨ un oepratore di confronto. A e B sono atributi su cui l'operatore theta abbai senso, c una costante compatibile col dominio di A.\n    Ã denotata con sigma, con la condizione messa a pedice.\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-2.png\" alt=\"is\" />\n</p>\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-3.png\" alt=\"is\" />\n</p>\n\n_Selezione e proiezione_: combinando selezione e proiezione, possiamo estrarre interessanti informazioni da una relazione.\n\n_Combinando selezione e proiezione_, possiamo estrarre informazioni da una relazione, ma non possiamo perÃ² correlare informazioni presenti in relazioni diverse.\n\nIl join Ã¨ l'operatore piÃ¹ interessante dell'algebra relazionale poichÃ¨ permette di correlare dati in relazioni diverse.\n\n**Join Naturale**\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-4.png\" alt=\"is\" />\n</p>\n\nÃ un operatore binario che correla dati in relazioni diverse, sulla base di valori uguali in attributi con lo stesso nome.\n\n- Produce un risultato:\n- sull'unione degli attributi degli operandi\n- con ennuple che sono ottenute combinando le ennuple degli operandi con valori uguali sugli attributi in comune.\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-5.png\" alt=\"is\" />\n</p>\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-6.png\" alt=\"is\" />\n</p>\n\n### Join esterno, interno, sinistro, destro, completo\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-7.png\" alt=\"is\" />\n</p>\n\n**Il prodotto cartesiano:** Ã¨ un join naturale senza attributi in comune e contiene sempre un numero di ennuple pari al prodotto dlle cardinalitÃ  degli operandi (le ennuple sono tutte comabinabili)\n\n**Theta-join ed equi-join**\n\n- Prodotto cartesiano: concatena tuple non necessariamente correlate dal punto di vista semantico.\n\nÃ¨ piÃ¹ utile se fatto seguire da una selezione.\nProdotto cartesiano seguito dalla selezione che mantiene solo le tuple con valori uguali sull'attributo:\nReparto di Impiegati e codice di reparti.\n\n### Theta-join\n\n- Il prodotto cartesiano, in pratica, ha senso solo se seguito da selezione:\n  sigma_condizione (R_1 |><| R_2)\n\n- L'operazione viene chiamata theta-join e puÃ² essere sintatticamente indicata con\n  R_1 |><|\\_condizione R_2\n\n#### PerchÃ¨ theta-join?\n\nLa condizione C Ã¨ spesso una congiunzione di atomi di confronto A_1 theta-join A_2 dove theta_join Ã¨ uno degli operatori di confronto (=, >,<,...)\n\n- se l'operatore Ã¨ sempre l'uguaglianza (=) allora si parla di equi-join\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-8.png\" alt=\"is\" />\n</p>\n\n### Self Join\n\nSupponiamo di considerare la seguente relazione.\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-9.png\" alt=\"is\" />\n</p>\n\ne di voler ottenere una relazione Nonno-Nipote.\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-10.png\" alt=\"is\" />\n</p>\n\nUna selezione congiuntiva puÃ² essere sostituita da una cascata di selezioni atomiche.\n\nUna proiezione puÃ² essere trasformata in una cascata di proiezioni che eliminano i vari attributi in fasi diverse se E Ã¨ definita su un insieme di attributi che contiene Y oltre che X.\n\npi*X(E) = pi_X(pi*{XY}(E))\n\nAnticipazione della proiezione rispetto al join (Pushing projections down):\nNon ha effetto sull'efficienza ma sulla leggibilitÃ .\n\nIn generale se R_1 ed R_2 sono definite sll'insieme di attributi X = AB, e contengono tuple uguali s A e diverse su B.\n\nIl Calcolo relazionale Ã¨ un linguaggio che permette di definire il risultato di un'interrogazione come l'insieme di quelle ennuple che soddisfano una certa condizone phi\n\n- L'insieme delle matricole degli studenti che hanno superato qualcuno degli esami elencati nella relazione Materie(Materia), si puÃ² definire come:\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-11.png\" alt=\"is\" />\n</p>\n"
					},
					"AQAAAAAAAAAAAAAAeBYAAAAAAACoFgAAIyBCYXNpIGRpIERhdGkgQ2FwaXRvbG8gNAoKW0xpbmsgYWxsZSBzbGlkZXNdKGh0dHBzOi8vZWxlYXJuaW5nLmRpLnVuaXBpLml0L3BsdWdpbmZpbGUucGhwLzc3MDM4L21vZF9yZXNvdXJjZS9jb250ZW50LzIvNGIuTW9kZWxsb1JlbF9BbGdlYnJhUmVsYXppb25hbGVfUGFydGVfSS5wZGYpCgojIyBBbGdlYnJhIHJlbGF6aW9uYWxlCgpfT3BlcmF6aW9uaSBzdWxsbyBzY2hlbWFfCgotICoqRERMOiBEYXRhIERlZmluaXRpb24gTGFuZ3VhZ2UqKgogIE9wZXJhemlvbmkgZGkgY3JlYXppb25lLCBjYW5jZWxsYXppb25lIGUgbW9kaWZpY2EgZGkgc2NoZW1pIGRpIHRhYmVsbGUsIGNyZWF6aW9uaSB2aXN0ZSwgY3JlYXppb25lIGluZGljaS4KCl9PcGVyYXppb25pIHN1aSBkYXRpXwoKLSAqKkRNTDogRGF0YSBNYW5pcHVsYXRpb24gbGFuZ3VhZ2UqKgogIC0gX2RhdGEgcXVlcnkgbGFuZ3VhZ2U6XyBRdWVyeSBvIGludGVycm9nYXppb25lIGRlbGxhIGJhc2UgZGkgZGF0aQogIC0gX0FnZ2lvcm5hbWVudG8gZGF0aTpfIEluc2VyaW1lbnRvLCBjYW5jZWxsYXppb25lIGUgbW9kaWZpY2EgZGkgZGF0aQoKIyMjIExpbmd1YWdnaSBSZWxhemlvbmFsaQoKLSBBbGdlYnJhIHJlbGF6aW9uYWxlOiBpbnNpZW1lIGRpIG9wZXJhdG9yaSBzdSByZWxhemlvbmkgY2hlIGRhbm5vIGNvbWUgcmlzdWx0YXRvIHJlbGF6aW9uaS4KCi0gTm9uIHNpIHVzYSBjb21lIGxpbmd1YWdnaW8gZGkgaW50ZXJyb2dhemlvbmUgZGVpIERCTVMgbWEgY29tZSByYXBwcmVzZW50YXppb25lIGludGVybmEgZGVsbGUgaW50ZXJyb2dhemlvbmkuCgotIENhbGNvbG8gcmVsYXppb25hbGU6IGxpbmd1YWdnaW8gZGljaGlhcmF0aXZvIGRpIHRpcG8gbG9naWNvIGRhbCBxdWFsZSDDqCBzdGF0byBkZXJpdmF0byBsJ1NRTAoKIyMjIEdsaSBvcGVyYXRvcmkgZGVsbCdhbGdlYnJhIHJlbGF6aW9uYWxlCgotIHVuaW9uZSwgaW50ZXJzZXppb25lLCBkaWZmZXJlbnphCi0gcmlkZW5vbWluYXppb25lCi0gc2VsZXppb25lCi0gcHJvaWV6aW9uZQotIGpvaW4gKGpvaW4gbmF0dXJhbGUsIHByb2RvdHRvIGNhcnRlc2lhbm8sIHRoZXRhLWpvaW4pCgojIyMgT3BlcmF0b3JpIEluc2llbWlzdGljaQoKLSBsZSByZWxhemlvbmkgc29ubyBpbnNpZW1pCi0gaSByaXN1bHRhdGkgZGV2b25vIGVzc2VyZSByZWxhemlvbmkKLSDDqCBwb3NzaWJpbGUgYXBwbGljYXJlIHVuaW9uZSwgaW50ZXJzZXppb25lLCBkaWZmZXJlbnphIHNvbG8gYSByZWxhemlvbmkgZGVmaW5pdGUgc3VnbGkgc3Rlc3NpIGF0dHJpYnV0aSAobm9tZSBlIHRpcG8pLCBjaW/DqCBwb3Nzb25vIG9wZXJhcmUgc29sbyBzdSB0dXBsZSB1bmlmb3JtaS4KCuKAoiBVbmlvbmU6IFIgVSBTCuKAoiBEaWZmZXJlbnphOiBSIOKAkyBTCuKAoiBRdWFsIMOoIGlsIHRpcG8gZGVsIHJpc3VsdGF0bz8gU2UgUiBlIFMgaGFubm8gbiBlbGVtZW50aSwgcXVhbnRpIG5lIGhhCmlsIHJpc3VsdGF0bz8K4oCiIFNlIHQxIMOoIHVuJ2VubnVwbGEgbm9uIGluIFIgLCBhbGxvcmE6CuKAoiBSID0gKFIgVSB7dF8xfSkg4oCTIHt0XzF9CuKAoiBvcGVyYXRvcmUgbW9uYWRpY28gKGNvbiB1biBhcmdvbWVudG8pCuKAoiAibW9kaWZpY2EgbG8gc2NoZW1hIiBsYXNjaWFuZG8gaW5hbHRlcmF0YSBsJ2lzdGFuemEgZGVsbCdvcGVyYW5kbwrigKIgw4ggaW5kaWNhdG8gY29uIGxhIGxldHRlcmEgcmhvCgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iLi9hc3NldHMvYmQtNC0xLnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoKIyMjIFNlbGV6aW9uZSAoUmVzdHJpemlvbmUpCgotIG9wZXJhdG9yZSBtb25hZGljbwotIHByb2R1Y2UgdW4gcmlzdWx0YXRvIGNoZToKICAtIGhhIGxvIHN0ZXNzbyBzY2hlbWEgZGVsbCdvcGVyYW5kbwogIC0gY29udGllbmUgdW4gc290dG9pbnNpZW1lIGRlbGxlIGVubnVwbGUgZGVsbCdvcGVyYW5kbwogIC0gcXVlbGxlIGNoZSBzb2RkaXNmYW5vIHVuYSBjb25kaXppb25lIGVzcHJlc3NhIGNvbWJpbmFuZG8sIGNvbiBpIGNvbm5ldHRpdmkgbG9naWNpIGFuZCwgb3IsIG5vdCwgY29uZGl6aW9uaSBhdG9taWNoZSBkZWwgdGlwbyBBIHRoZXRhIEIgb3BwdXJlIEEgdGhldGEgQyBkb3ZlIHRoZXRhIMOoIHVuIG9lcHJhdG9yZSBkaSBjb25mcm9udG8uIEEgZSBCIHNvbm8gYXRyaWJ1dGkgc3UgY3VpIGwnb3BlcmF0b3JlIHRoZXRhIGFiYmFpIHNlbnNvLCBjIHVuYSBjb3N0YW50ZSBjb21wYXRpYmlsZSBjb2wgZG9taW5pbyBkaSBBLgogICAgw4ggZGVub3RhdGEgY29uIHNpZ21hLCBjb24gbGEgY29uZGl6aW9uZSBtZXNzYSBhIHBlZGljZS4KCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTIucG5nIiBhbHQ9ImlzIiAvPgo8L3A+Cgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iLi9hc3NldHMvYmQtNC0zLnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoKX1NlbGV6aW9uZSBlIHByb2llemlvbmVfOiBjb21iaW5hbmRvIHNlbGV6aW9uZSBlIHByb2llemlvbmUsIHBvc3NpYW1vIGVzdHJhcnJlIGludGVyZXNzYW50aSBpbmZvcm1hemlvbmkgZGEgdW5hIHJlbGF6aW9uZS4KCl9Db21iaW5hbmRvIHNlbGV6aW9uZSBlIHByb2llemlvbmVfLCBwb3NzaWFtbyBlc3RyYXJyZSBpbmZvcm1hemlvbmkgZGEgdW5hIHJlbGF6aW9uZSwgbWEgbm9uIHBvc3NpYW1vIHBlcsOyIGNvcnJlbGFyZSBpbmZvcm1hemlvbmkgcHJlc2VudGkgaW4gcmVsYXppb25pIGRpdmVyc2UuCgpJbCBqb2luIMOoIGwnb3BlcmF0b3JlIHBpw7kgaW50ZXJlc3NhbnRlIGRlbGwnYWxnZWJyYSByZWxhemlvbmFsZSBwb2ljaMOoIHBlcm1ldHRlIGRpIGNvcnJlbGFyZSBkYXRpIGluIHJlbGF6aW9uaSBkaXZlcnNlLgoKKipKb2luIE5hdHVyYWxlKioKCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTQucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgrDiCB1biBvcGVyYXRvcmUgYmluYXJpbyBjaGUgY29ycmVsYSBkYXRpIGluIHJlbGF6aW9uaSBkaXZlcnNlLCBzdWxsYSBiYXNlIGRpIHZhbG9yaSB1Z3VhbGkgaW4gYXR0cmlidXRpIGNvbiBsbyBzdGVzc28gbm9tZS4KCi0gUHJvZHVjZSB1biByaXN1bHRhdG86Ci0gc3VsbCd1bmlvbmUgZGVnbGkgYXR0cmlidXRpIGRlZ2xpIG9wZXJhbmRpCi0gY29uIGVubnVwbGUgY2hlIHNvbm8gb3R0ZW51dGUgY29tYmluYW5kbyBsZSBlbm51cGxlIGRlZ2xpIG9wZXJhbmRpIGNvbiB2YWxvcmkgdWd1YWxpIHN1Z2xpIGF0dHJpYnV0aSBpbiBjb211bmUuCgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iLi9hc3NldHMvYmQtNC01LnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoKPHAgYWxpZ249ImNlbnRlciI+CiAgPGltZyBzcmM9Ii4vYXNzZXRzL2JkLTQtNi5wbmciIGFsdD0iaXMiIC8+CjwvcD4KCiMjIyBKb2luIGVzdGVybm8sIGludGVybm8sIHNpbmlzdHJvLCBkZXN0cm8sIGNvbXBsZXRvCgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iLi9hc3NldHMvYmQtNC03LnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoKKipJbCBwcm9kb3R0byBjYXJ0ZXNpYW5vOioqIMOoIHVuIGpvaW4gbmF0dXJhbGUgc2VuemEgYXR0cmlidXRpIGluIGNvbXVuZSBlIGNvbnRpZW5lIHNlbXByZSB1biBudW1lcm8gZGkgZW5udXBsZSBwYXJpIGFsIHByb2RvdHRvIGRsbGUgY2FyZGluYWxpdMOgIGRlZ2xpIG9wZXJhbmRpIChsZSBlbm51cGxlIHNvbm8gdHV0dGUgY29tYWJpbmFiaWxpKQoKKipUaGV0YS1qb2luIGVkIGVxdWktam9pbioqCgotIFByb2RvdHRvIGNhcnRlc2lhbm86IGNvbmNhdGVuYSB0dXBsZSBub24gbmVjZXNzYXJpYW1lbnRlIGNvcnJlbGF0ZSBkYWwgcHVudG8gZGkgdmlzdGEgc2VtYW50aWNvLgoKw6ggcGnDuSB1dGlsZSBzZSBmYXR0byBzZWd1aXJlIGRhIHVuYSBzZWxlemlvbmUuClByb2RvdHRvIGNhcnRlc2lhbm8gc2VndWl0byBkYWxsYSBzZWxlemlvbmUgY2hlIG1hbnRpZW5lIHNvbG8gbGUgdHVwbGUgY29uIHZhbG9yaSB1Z3VhbGkgc3VsbCdhdHRyaWJ1dG86ClJlcGFydG8gZGkgSW1waWVnYXRpIGUgY29kaWNlIGRpIHJlcGFydGkuCgojIyMgVGhldGEtam9pbgoKLSBJbCBwcm9kb3R0byBjYXJ0ZXNpYW5vLCBpbiBwcmF0aWNhLCBoYSBzZW5zbyBzb2xvIHNlIHNlZ3VpdG8gZGEgc2VsZXppb25lOgogIHNpZ21hX2NvbmRpemlvbmUgKFJfMSB8Pjx8IFJfMikKCi0gTCdvcGVyYXppb25lIHZpZW5lIGNoaWFtYXRhIHRoZXRhLWpvaW4gZSBwdcOyIGVzc2VyZSBzaW50YXR0aWNhbWVudGUgaW5kaWNhdGEgY29uCiAgUl8xIHw+PHxcX2NvbmRpemlvbmUgUl8yCgojIyMjIFBlcmNow6ggdGhldGEtam9pbj8KCkxhIGNvbmRpemlvbmUgQyDDqCBzcGVzc28gdW5hIGNvbmdpdW56aW9uZSBkaSBhdG9taSBkaSBjb25mcm9udG8gQV8xIHRoZXRhLWpvaW4gQV8yIGRvdmUgdGhldGFfam9pbiDDqCB1bm8gZGVnbGkgb3BlcmF0b3JpIGRpIGNvbmZyb250byAoPSwgPiw8LC4uLikKCi0gc2UgbCdvcGVyYXRvcmUgw6ggc2VtcHJlIGwndWd1YWdsaWFuemEgKD0pIGFsbG9yYSBzaSBwYXJsYSBkaSBlcXVpLWpvaW4KCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTgucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgojIyMgU2VsZiBKb2luCgpTdXBwb25pYW1vIGRpIGNvbnNpZGVyYXJlIGxhIHNlZ3VlbnRlIHJlbGF6aW9uZS4KCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTkucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgplIGRpIHZvbGVyIG90dGVuZXJlIHVuYSByZWxhemlvbmUgTm9ubm8tTmlwb3RlLgoKPHAgYWxpZ249ImNlbnRlciI+CiAgPGltZyBzcmM9Ii4vYXNzZXRzL2JkLTQtMTAucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgpVbmEgc2VsZXppb25lIGNvbmdpdW50aXZhIHB1w7IgZXNzZXJlIHNvc3RpdHVpdGEgZGEgdW5hIGNhc2NhdGEgZGkgc2VsZXppb25pIGF0b21pY2hlLgoKVW5hIHByb2llemlvbmUgcHXDsiBlc3NlcmUgdHJhc2Zvcm1hdGEgaW4gdW5hIGNhc2NhdGEgZGkgcHJvaWV6aW9uaSBjaGUgZWxpbWluYW5vIGkgdmFyaSBhdHRyaWJ1dGkgaW4gZmFzaSBkaXZlcnNlIHNlIEUgw6ggZGVmaW5pdGEgc3UgdW4gaW5zaWVtZSBkaSBhdHRyaWJ1dGkgY2hlIGNvbnRpZW5lIFkgb2x0cmUgY2hlIFguCgpwaSpYKEUpID0gcGlfWChwaSp7WFl9KEUpKQoKQW50aWNpcGF6aW9uZSBkZWxsYSBwcm9pZXppb25lIHJpc3BldHRvIGFsIGpvaW4gKFB1c2hpbmcgcHJvamVjdGlvbnMgZG93bik6Ck5vbiBoYSBlZmZldHRvIHN1bGwnZWZmaWNpZW56YSBtYSBzdWxsYSBsZWdnaWJpbGl0w6AuCgpJbiBnZW5lcmFsZSBzZSBSXzEgZWQgUl8yIHNvbm8gZGVmaW5pdGUgc2xsJ2luc2llbWUgZGkgYXR0cmlidXRpIFggPSBBQiwgZSBjb250ZW5nb25vIHR1cGxlIHVndWFsaSBzIEEgZSBkaXZlcnNlIHN1IEIuCgpJbCBDYWxjb2xvIHJlbGF6aW9uYWxlIMOoIHVuIGxpbmd1YWdnaW8gY2hlIHBlcm1ldHRlIGRpIGRlZmluaXJlIGlsIHJpc3VsdGF0byBkaSB1bidpbnRlcnJvZ2F6aW9uZSBjb21lIGwnaW5zaWVtZSBkaSBxdWVsbGUgZW5udXBsZSBjaGUgc29kZGlzZmFubyB1bmEgY2VydGEgY29uZGl6b25lIHBoaQoKLSBMJ2luc2llbWUgZGVsbGUgbWF0cmljb2xlIGRlZ2xpIHN0dWRlbnRpIGNoZSBoYW5ubyBzdXBlcmF0byBxdWFsY3VubyBkZWdsaSBlc2FtaSBlbGVuY2F0aSBuZWxsYSByZWxhemlvbmUgTWF0ZXJpZShNYXRlcmlhKSwgc2kgcHXDsiBkZWZpbmlyZSBjb21lOgoKPHAgYWxpZ249ImNlbnRlciI+CiAgPGltZyBzcmM9Ii4vYXNzZXRzL2JkLTQtMTEucG5nIiBhbHQ9ImlzIiAvPgo8L3A+Cg",
					"AQAAAAAAAAABAAAAYRYAAAAAAABhFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1553,
					1,
					"insert",
					{
						"characters": "\n\nCh"
					},
					"BAAAAHcWAAAAAAAAeBYAAAAAAAAAAAAAeBYAAAAAAAB5FgAAAAAAAAAAAAB5FgAAAAAAAHoWAAAAAAAAAAAAAHoWAAAAAAAAexYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdxYAAAAAAAB3FgAAAAAAAAAAAAAAAPC/"
				],
				[
					1554,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAHsWAAAAAAAAfBYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAexYAAAAAAAB7FgAAAAAAAAAAAAAAAPC/"
				],
				[
					1555,
					1,
					"insert",
					{
						"characters": " Ã¨"
					},
					"AgAAAHwWAAAAAAAAfRYAAAAAAAAAAAAAfRYAAAAAAAB+FgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfBYAAAAAAAB8FgAAAAAAAAAAAAAAAPC/"
				],
				[
					1556,
					1,
					"insert",
					{
						"characters": " equivalente"
					},
					"DAAAAH4WAAAAAAAAfxYAAAAAAAAAAAAAfxYAAAAAAACAFgAAAAAAAAAAAACAFgAAAAAAAIEWAAAAAAAAAAAAAIEWAAAAAAAAghYAAAAAAAAAAAAAghYAAAAAAACDFgAAAAAAAAAAAACDFgAAAAAAAIQWAAAAAAAAAAAAAIQWAAAAAAAAhRYAAAAAAAAAAAAAhRYAAAAAAACGFgAAAAAAAAAAAACGFgAAAAAAAIcWAAAAAAAAAAAAAIcWAAAAAAAAiBYAAAAAAAAAAAAAiBYAAAAAAACJFgAAAAAAAAAAAACJFgAAAAAAAIoWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfhYAAAAAAAB+FgAAAAAAAAAAAAAAAPC/"
				],
				[
					1557,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAAIoWAAAAAAAAixYAAAAAAAAAAAAAixYAAAAAAACMFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAihYAAAAAAACKFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1558,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIwWAAAAAAAAjRYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjBYAAAAAAACMFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1559,
					1,
					"left_delete",
					null,
					"AQAAAIwWAAAAAAAAjBYAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAjRYAAAAAAACNFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1560,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAIwWAAAAAAAAjRYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjBYAAAAAAACMFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1561,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAI0WAAAAAAAAjhYAAAAAAAAAAAAAjhYAAAAAAACPFgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjRYAAAAAAACNFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1562,
					1,
					"paste",
					null,
					"AQAAAI8WAAAAAAAA1BYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjxYAAAAAAACPFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1563,
					1,
					"replace_view_content",
					{
						"content": "# Basi di Dati Capitolo 4\n\n[Link alle slides](https://elearning.di.unipi.it/pluginfile.php/77038/mod_resource/content/2/4b.ModelloRel_AlgebraRelazionale_Parte_I.pdf)\n\n## Algebra relazionale\n\n_Operazioni sullo schema_\n\n- **DDL: Data Definition Language**\n  Operazioni di creazione, cancellazione e modifica di schemi di tabelle, creazioni viste, creazione indici.\n\n_Operazioni sui dati_\n\n- **DML: Data Manipulation language**\n  - _data query language:_ Query o interrogazione della base di dati\n  - _Aggiornamento dati:_ Inserimento, cancellazione e modifica di dati\n\n### Linguaggi Relazionali\n\n- Algebra relazionale: insieme di operatori su relazioni che danno come risultato relazioni.\n\n- Non si usa come linguaggio di interrogazione dei DBMS ma come rappresentazione interna delle interrogazioni.\n\n- Calcolo relazionale: linguaggio dichiarativo di tipo logico dal quale Ã¨ stato derivato l'SQL\n\n### Gli operatori dell'algebra relazionale\n\n- unione, intersezione, differenza\n- ridenominazione\n- selezione\n- proiezione\n- join (join naturale, prodotto cartesiano, theta-join)\n\n### Operatori Insiemistici\n\n- le relazioni sono insiemi\n- i risultati devono essere relazioni\n- Ã¨ possibile applicare unione, intersezione, differenza solo a relazioni definite sugli stessi attributi (nome e tipo), cioÃ¨ possono operare solo su tuple uniformi.\n\nâ¢ Unione: R U S\nâ¢ Differenza: R â S\nâ¢ Qual Ã¨ il tipo del risultato? Se R e S hanno n elementi, quanti ne ha\nil risultato?\nâ¢ Se t1 Ã¨ un'ennupla non in R , allora:\nâ¢ R = (R U {t_1}) â {t_1}\nâ¢ operatore monadico (con un argomento)\nâ¢ \"modifica lo schema\" lasciando inalterata l'istanza dell'operando\nâ¢ Ã indicato con la lettera rho\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-1.png\" alt=\"is\" />\n</p>\n\n### Selezione (Restrizione)\n\n- operatore monadico\n- produce un risultato che:\n  - ha lo stesso schema dell'operando\n  - contiene un sottoinsieme delle ennuple dell'operando\n  - quelle che soddisfano una condizione espressa combinando, con i connettivi logici and, or, not, condizioni atomiche del tipo A theta B oppure A theta C dove theta Ã¨ un oepratore di confronto. A e B sono atributi su cui l'operatore theta abbai senso, c una costante compatibile col dominio di A.\n    Ã denotata con sigma, con la condizione messa a pedice.\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-2.png\" alt=\"is\" />\n</p>\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-3.png\" alt=\"is\" />\n</p>\n\n_Selezione e proiezione_: combinando selezione e proiezione, possiamo estrarre interessanti informazioni da una relazione.\n\n_Combinando selezione e proiezione_, possiamo estrarre informazioni da una relazione, ma non possiamo perÃ² correlare informazioni presenti in relazioni diverse.\n\nIl join Ã¨ l'operatore piÃ¹ interessante dell'algebra relazionale poichÃ¨ permette di correlare dati in relazioni diverse.\n\n**Join Naturale**\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-4.png\" alt=\"is\" />\n</p>\n\nÃ un operatore binario che correla dati in relazioni diverse, sulla base di valori uguali in attributi con lo stesso nome.\n\n- Produce un risultato:\n- sull'unione degli attributi degli operandi\n- con ennuple che sono ottenute combinando le ennuple degli operandi con valori uguali sugli attributi in comune.\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-5.png\" alt=\"is\" />\n</p>\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-6.png\" alt=\"is\" />\n</p>\n\n### Join esterno, interno, sinistro, destro, completo\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-7.png\" alt=\"is\" />\n</p>\n\n**Il prodotto cartesiano:** Ã¨ un join naturale senza attributi in comune e contiene sempre un numero di ennuple pari al prodotto dlle cardinalitÃ  degli operandi (le ennuple sono tutte comabinabili)\n\n**Theta-join ed equi-join**\n\n- Prodotto cartesiano: concatena tuple non necessariamente correlate dal punto di vista semantico.\n\nÃ¨ piÃ¹ utile se fatto seguire da una selezione.\nProdotto cartesiano seguito dalla selezione che mantiene solo le tuple con valori uguali sull'attributo:\nReparto di Impiegati e codice di reparti.\n\n### Theta-join\n\n- Il prodotto cartesiano, in pratica, ha senso solo se seguito da selezione:\n  sigma_condizione (R_1 |><| R_2)\n\n- L'operazione viene chiamata theta-join e puÃ² essere sintatticamente indicata con\n  R_1 |><|\\_condizione R_2\n\n#### PerchÃ¨ theta-join?\n\nLa condizione C Ã¨ spesso una congiunzione di atomi di confronto A_1 theta-join A_2 dove theta_join Ã¨ uno degli operatori di confronto (=, >,<,...)\n\n- se l'operatore Ã¨ sempre l'uguaglianza (=) allora si parla di equi-join\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-8.png\" alt=\"is\" />\n</p>\n\n### Self Join\n\nSupponiamo di considerare la seguente relazione.\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-9.png\" alt=\"is\" />\n</p>\n\ne di voler ottenere una relazione Nonno-Nipote.\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-10.png\" alt=\"is\" />\n</p>\n\nUna selezione congiuntiva puÃ² essere sostituita da una cascata di selezioni atomiche.\n\nUna proiezione puÃ² essere trasformata in una cascata di proiezioni che eliminano i vari attributi in fasi diverse se E Ã¨ definita su un insieme di attributi che contiene Y oltre che X.\n\npi*X(E) = pi_X(pi*{XY}(E))\n\nAnticipazione della proiezione rispetto al join (Pushing projections down):\nNon ha effetto sull'efficienza ma sulla leggibilitÃ .\n\nIn generale se R_1 ed R_2 sono definite sll'insieme di attributi X = AB, e contengono tuple uguali s A e diverse su B.\n\nIl Calcolo relazionale Ã¨ un linguaggio che permette di definire il risultato di un'interrogazione come l'insieme di quelle ennuple che soddisfano una certa condizone phi\n\n- L'insieme delle matricole degli studenti che hanno superato qualcuno degli esami elencati nella relazione Materie(Materia), si puÃ² definire come:\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-11.png\" alt=\"is\" />\n</p>\n\nChe Ã¨ equivalente a:\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-7.png\" alt=\"is\" />\n</p>\n"
					},
					"AQAAAAAAAAAAAAAA1BYAAAAAAAAGFwAAIyBCYXNpIGRpIERhdGkgQ2FwaXRvbG8gNAoKW0xpbmsgYWxsZSBzbGlkZXNdKGh0dHBzOi8vZWxlYXJuaW5nLmRpLnVuaXBpLml0L3BsdWdpbmZpbGUucGhwLzc3MDM4L21vZF9yZXNvdXJjZS9jb250ZW50LzIvNGIuTW9kZWxsb1JlbF9BbGdlYnJhUmVsYXppb25hbGVfUGFydGVfSS5wZGYpCgojIyBBbGdlYnJhIHJlbGF6aW9uYWxlCgpfT3BlcmF6aW9uaSBzdWxsbyBzY2hlbWFfCgotICoqRERMOiBEYXRhIERlZmluaXRpb24gTGFuZ3VhZ2UqKgogIE9wZXJhemlvbmkgZGkgY3JlYXppb25lLCBjYW5jZWxsYXppb25lIGUgbW9kaWZpY2EgZGkgc2NoZW1pIGRpIHRhYmVsbGUsIGNyZWF6aW9uaSB2aXN0ZSwgY3JlYXppb25lIGluZGljaS4KCl9PcGVyYXppb25pIHN1aSBkYXRpXwoKLSAqKkRNTDogRGF0YSBNYW5pcHVsYXRpb24gbGFuZ3VhZ2UqKgogIC0gX2RhdGEgcXVlcnkgbGFuZ3VhZ2U6XyBRdWVyeSBvIGludGVycm9nYXppb25lIGRlbGxhIGJhc2UgZGkgZGF0aQogIC0gX0FnZ2lvcm5hbWVudG8gZGF0aTpfIEluc2VyaW1lbnRvLCBjYW5jZWxsYXppb25lIGUgbW9kaWZpY2EgZGkgZGF0aQoKIyMjIExpbmd1YWdnaSBSZWxhemlvbmFsaQoKLSBBbGdlYnJhIHJlbGF6aW9uYWxlOiBpbnNpZW1lIGRpIG9wZXJhdG9yaSBzdSByZWxhemlvbmkgY2hlIGRhbm5vIGNvbWUgcmlzdWx0YXRvIHJlbGF6aW9uaS4KCi0gTm9uIHNpIHVzYSBjb21lIGxpbmd1YWdnaW8gZGkgaW50ZXJyb2dhemlvbmUgZGVpIERCTVMgbWEgY29tZSByYXBwcmVzZW50YXppb25lIGludGVybmEgZGVsbGUgaW50ZXJyb2dhemlvbmkuCgotIENhbGNvbG8gcmVsYXppb25hbGU6IGxpbmd1YWdnaW8gZGljaGlhcmF0aXZvIGRpIHRpcG8gbG9naWNvIGRhbCBxdWFsZSDDqCBzdGF0byBkZXJpdmF0byBsJ1NRTAoKIyMjIEdsaSBvcGVyYXRvcmkgZGVsbCdhbGdlYnJhIHJlbGF6aW9uYWxlCgotIHVuaW9uZSwgaW50ZXJzZXppb25lLCBkaWZmZXJlbnphCi0gcmlkZW5vbWluYXppb25lCi0gc2VsZXppb25lCi0gcHJvaWV6aW9uZQotIGpvaW4gKGpvaW4gbmF0dXJhbGUsIHByb2RvdHRvIGNhcnRlc2lhbm8sIHRoZXRhLWpvaW4pCgojIyMgT3BlcmF0b3JpIEluc2llbWlzdGljaQoKLSBsZSByZWxhemlvbmkgc29ubyBpbnNpZW1pCi0gaSByaXN1bHRhdGkgZGV2b25vIGVzc2VyZSByZWxhemlvbmkKLSDDqCBwb3NzaWJpbGUgYXBwbGljYXJlIHVuaW9uZSwgaW50ZXJzZXppb25lLCBkaWZmZXJlbnphIHNvbG8gYSByZWxhemlvbmkgZGVmaW5pdGUgc3VnbGkgc3Rlc3NpIGF0dHJpYnV0aSAobm9tZSBlIHRpcG8pLCBjaW/DqCBwb3Nzb25vIG9wZXJhcmUgc29sbyBzdSB0dXBsZSB1bmlmb3JtaS4KCuKAoiBVbmlvbmU6IFIgVSBTCuKAoiBEaWZmZXJlbnphOiBSIOKAkyBTCuKAoiBRdWFsIMOoIGlsIHRpcG8gZGVsIHJpc3VsdGF0bz8gU2UgUiBlIFMgaGFubm8gbiBlbGVtZW50aSwgcXVhbnRpIG5lIGhhCmlsIHJpc3VsdGF0bz8K4oCiIFNlIHQxIMOoIHVuJ2VubnVwbGEgbm9uIGluIFIgLCBhbGxvcmE6CuKAoiBSID0gKFIgVSB7dF8xfSkg4oCTIHt0XzF9CuKAoiBvcGVyYXRvcmUgbW9uYWRpY28gKGNvbiB1biBhcmdvbWVudG8pCuKAoiAibW9kaWZpY2EgbG8gc2NoZW1hIiBsYXNjaWFuZG8gaW5hbHRlcmF0YSBsJ2lzdGFuemEgZGVsbCdvcGVyYW5kbwrigKIgw4ggaW5kaWNhdG8gY29uIGxhIGxldHRlcmEgcmhvCgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iLi9hc3NldHMvYmQtNC0xLnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoKIyMjIFNlbGV6aW9uZSAoUmVzdHJpemlvbmUpCgotIG9wZXJhdG9yZSBtb25hZGljbwotIHByb2R1Y2UgdW4gcmlzdWx0YXRvIGNoZToKICAtIGhhIGxvIHN0ZXNzbyBzY2hlbWEgZGVsbCdvcGVyYW5kbwogIC0gY29udGllbmUgdW4gc290dG9pbnNpZW1lIGRlbGxlIGVubnVwbGUgZGVsbCdvcGVyYW5kbwogIC0gcXVlbGxlIGNoZSBzb2RkaXNmYW5vIHVuYSBjb25kaXppb25lIGVzcHJlc3NhIGNvbWJpbmFuZG8sIGNvbiBpIGNvbm5ldHRpdmkgbG9naWNpIGFuZCwgb3IsIG5vdCwgY29uZGl6aW9uaSBhdG9taWNoZSBkZWwgdGlwbyBBIHRoZXRhIEIgb3BwdXJlIEEgdGhldGEgQyBkb3ZlIHRoZXRhIMOoIHVuIG9lcHJhdG9yZSBkaSBjb25mcm9udG8uIEEgZSBCIHNvbm8gYXRyaWJ1dGkgc3UgY3VpIGwnb3BlcmF0b3JlIHRoZXRhIGFiYmFpIHNlbnNvLCBjIHVuYSBjb3N0YW50ZSBjb21wYXRpYmlsZSBjb2wgZG9taW5pbyBkaSBBLgogICAgw4ggZGVub3RhdGEgY29uIHNpZ21hLCBjb24gbGEgY29uZGl6aW9uZSBtZXNzYSBhIHBlZGljZS4KCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTIucG5nIiBhbHQ9ImlzIiAvPgo8L3A+Cgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iLi9hc3NldHMvYmQtNC0zLnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoKX1NlbGV6aW9uZSBlIHByb2llemlvbmVfOiBjb21iaW5hbmRvIHNlbGV6aW9uZSBlIHByb2llemlvbmUsIHBvc3NpYW1vIGVzdHJhcnJlIGludGVyZXNzYW50aSBpbmZvcm1hemlvbmkgZGEgdW5hIHJlbGF6aW9uZS4KCl9Db21iaW5hbmRvIHNlbGV6aW9uZSBlIHByb2llemlvbmVfLCBwb3NzaWFtbyBlc3RyYXJyZSBpbmZvcm1hemlvbmkgZGEgdW5hIHJlbGF6aW9uZSwgbWEgbm9uIHBvc3NpYW1vIHBlcsOyIGNvcnJlbGFyZSBpbmZvcm1hemlvbmkgcHJlc2VudGkgaW4gcmVsYXppb25pIGRpdmVyc2UuCgpJbCBqb2luIMOoIGwnb3BlcmF0b3JlIHBpw7kgaW50ZXJlc3NhbnRlIGRlbGwnYWxnZWJyYSByZWxhemlvbmFsZSBwb2ljaMOoIHBlcm1ldHRlIGRpIGNvcnJlbGFyZSBkYXRpIGluIHJlbGF6aW9uaSBkaXZlcnNlLgoKKipKb2luIE5hdHVyYWxlKioKCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTQucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgrDiCB1biBvcGVyYXRvcmUgYmluYXJpbyBjaGUgY29ycmVsYSBkYXRpIGluIHJlbGF6aW9uaSBkaXZlcnNlLCBzdWxsYSBiYXNlIGRpIHZhbG9yaSB1Z3VhbGkgaW4gYXR0cmlidXRpIGNvbiBsbyBzdGVzc28gbm9tZS4KCi0gUHJvZHVjZSB1biByaXN1bHRhdG86Ci0gc3VsbCd1bmlvbmUgZGVnbGkgYXR0cmlidXRpIGRlZ2xpIG9wZXJhbmRpCi0gY29uIGVubnVwbGUgY2hlIHNvbm8gb3R0ZW51dGUgY29tYmluYW5kbyBsZSBlbm51cGxlIGRlZ2xpIG9wZXJhbmRpIGNvbiB2YWxvcmkgdWd1YWxpIHN1Z2xpIGF0dHJpYnV0aSBpbiBjb211bmUuCgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iLi9hc3NldHMvYmQtNC01LnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoKPHAgYWxpZ249ImNlbnRlciI+CiAgPGltZyBzcmM9Ii4vYXNzZXRzL2JkLTQtNi5wbmciIGFsdD0iaXMiIC8+CjwvcD4KCiMjIyBKb2luIGVzdGVybm8sIGludGVybm8sIHNpbmlzdHJvLCBkZXN0cm8sIGNvbXBsZXRvCgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iLi9hc3NldHMvYmQtNC03LnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoKKipJbCBwcm9kb3R0byBjYXJ0ZXNpYW5vOioqIMOoIHVuIGpvaW4gbmF0dXJhbGUgc2VuemEgYXR0cmlidXRpIGluIGNvbXVuZSBlIGNvbnRpZW5lIHNlbXByZSB1biBudW1lcm8gZGkgZW5udXBsZSBwYXJpIGFsIHByb2RvdHRvIGRsbGUgY2FyZGluYWxpdMOgIGRlZ2xpIG9wZXJhbmRpIChsZSBlbm51cGxlIHNvbm8gdHV0dGUgY29tYWJpbmFiaWxpKQoKKipUaGV0YS1qb2luIGVkIGVxdWktam9pbioqCgotIFByb2RvdHRvIGNhcnRlc2lhbm86IGNvbmNhdGVuYSB0dXBsZSBub24gbmVjZXNzYXJpYW1lbnRlIGNvcnJlbGF0ZSBkYWwgcHVudG8gZGkgdmlzdGEgc2VtYW50aWNvLgoKw6ggcGnDuSB1dGlsZSBzZSBmYXR0byBzZWd1aXJlIGRhIHVuYSBzZWxlemlvbmUuClByb2RvdHRvIGNhcnRlc2lhbm8gc2VndWl0byBkYWxsYSBzZWxlemlvbmUgY2hlIG1hbnRpZW5lIHNvbG8gbGUgdHVwbGUgY29uIHZhbG9yaSB1Z3VhbGkgc3VsbCdhdHRyaWJ1dG86ClJlcGFydG8gZGkgSW1waWVnYXRpIGUgY29kaWNlIGRpIHJlcGFydGkuCgojIyMgVGhldGEtam9pbgoKLSBJbCBwcm9kb3R0byBjYXJ0ZXNpYW5vLCBpbiBwcmF0aWNhLCBoYSBzZW5zbyBzb2xvIHNlIHNlZ3VpdG8gZGEgc2VsZXppb25lOgogIHNpZ21hX2NvbmRpemlvbmUgKFJfMSB8Pjx8IFJfMikKCi0gTCdvcGVyYXppb25lIHZpZW5lIGNoaWFtYXRhIHRoZXRhLWpvaW4gZSBwdcOyIGVzc2VyZSBzaW50YXR0aWNhbWVudGUgaW5kaWNhdGEgY29uCiAgUl8xIHw+PHxcX2NvbmRpemlvbmUgUl8yCgojIyMjIFBlcmNow6ggdGhldGEtam9pbj8KCkxhIGNvbmRpemlvbmUgQyDDqCBzcGVzc28gdW5hIGNvbmdpdW56aW9uZSBkaSBhdG9taSBkaSBjb25mcm9udG8gQV8xIHRoZXRhLWpvaW4gQV8yIGRvdmUgdGhldGFfam9pbiDDqCB1bm8gZGVnbGkgb3BlcmF0b3JpIGRpIGNvbmZyb250byAoPSwgPiw8LC4uLikKCi0gc2UgbCdvcGVyYXRvcmUgw6ggc2VtcHJlIGwndWd1YWdsaWFuemEgKD0pIGFsbG9yYSBzaSBwYXJsYSBkaSBlcXVpLWpvaW4KCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTgucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgojIyMgU2VsZiBKb2luCgpTdXBwb25pYW1vIGRpIGNvbnNpZGVyYXJlIGxhIHNlZ3VlbnRlIHJlbGF6aW9uZS4KCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTkucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgplIGRpIHZvbGVyIG90dGVuZXJlIHVuYSByZWxhemlvbmUgTm9ubm8tTmlwb3RlLgoKPHAgYWxpZ249ImNlbnRlciI+CiAgPGltZyBzcmM9Ii4vYXNzZXRzL2JkLTQtMTAucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgpVbmEgc2VsZXppb25lIGNvbmdpdW50aXZhIHB1w7IgZXNzZXJlIHNvc3RpdHVpdGEgZGEgdW5hIGNhc2NhdGEgZGkgc2VsZXppb25pIGF0b21pY2hlLgoKVW5hIHByb2llemlvbmUgcHXDsiBlc3NlcmUgdHJhc2Zvcm1hdGEgaW4gdW5hIGNhc2NhdGEgZGkgcHJvaWV6aW9uaSBjaGUgZWxpbWluYW5vIGkgdmFyaSBhdHRyaWJ1dGkgaW4gZmFzaSBkaXZlcnNlIHNlIEUgw6ggZGVmaW5pdGEgc3UgdW4gaW5zaWVtZSBkaSBhdHRyaWJ1dGkgY2hlIGNvbnRpZW5lIFkgb2x0cmUgY2hlIFguCgpwaSpYKEUpID0gcGlfWChwaSp7WFl9KEUpKQoKQW50aWNpcGF6aW9uZSBkZWxsYSBwcm9pZXppb25lIHJpc3BldHRvIGFsIGpvaW4gKFB1c2hpbmcgcHJvamVjdGlvbnMgZG93bik6Ck5vbiBoYSBlZmZldHRvIHN1bGwnZWZmaWNpZW56YSBtYSBzdWxsYSBsZWdnaWJpbGl0w6AuCgpJbiBnZW5lcmFsZSBzZSBSXzEgZWQgUl8yIHNvbm8gZGVmaW5pdGUgc2xsJ2luc2llbWUgZGkgYXR0cmlidXRpIFggPSBBQiwgZSBjb250ZW5nb25vIHR1cGxlIHVndWFsaSBzIEEgZSBkaXZlcnNlIHN1IEIuCgpJbCBDYWxjb2xvIHJlbGF6aW9uYWxlIMOoIHVuIGxpbmd1YWdnaW8gY2hlIHBlcm1ldHRlIGRpIGRlZmluaXJlIGlsIHJpc3VsdGF0byBkaSB1bidpbnRlcnJvZ2F6aW9uZSBjb21lIGwnaW5zaWVtZSBkaSBxdWVsbGUgZW5udXBsZSBjaGUgc29kZGlzZmFubyB1bmEgY2VydGEgY29uZGl6b25lIHBoaQoKLSBMJ2luc2llbWUgZGVsbGUgbWF0cmljb2xlIGRlZ2xpIHN0dWRlbnRpIGNoZSBoYW5ubyBzdXBlcmF0byBxdWFsY3VubyBkZWdsaSBlc2FtaSBlbGVuY2F0aSBuZWxsYSByZWxhemlvbmUgTWF0ZXJpZShNYXRlcmlhKSwgc2kgcHXDsiBkZWZpbmlyZSBjb21lOgoKPHAgYWxpZ249ImNlbnRlciI+CiAgPGltZyBzcmM9Ii4vYXNzZXRzL2JkLTQtMTEucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgpDaGUgw6ggZXF1aXZhbGVudGUgYToKCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTcucG5nIiBhbHQ9ImlzIiAvPgo8L3A+Cgo",
					"AQAAAAAAAAABAAAA1BYAAAAAAADUFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1566,
					1,
					"left_delete",
					null,
					"AQAAALwWAAAAAAAAvBYAAAAAAAABAAAANw",
					"AQAAAAAAAAABAAAAvRYAAAAAAAC9FgAAAAAAAAAAAAAAAPC/"
				],
				[
					1567,
					1,
					"insert",
					{
						"characters": "12"
					},
					"AgAAALwWAAAAAAAAvRYAAAAAAAAAAAAAvRYAAAAAAAC+FgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvBYAAAAAAAC8FgAAAAAAAAAAAAAAAPC/"
				],
				[
					1568,
					1,
					"replace_view_content",
					{
						"content": "# Basi di Dati Capitolo 4\n\n[Link alle slides](https://elearning.di.unipi.it/pluginfile.php/77038/mod_resource/content/2/4b.ModelloRel_AlgebraRelazionale_Parte_I.pdf)\n\n## Algebra relazionale\n\n_Operazioni sullo schema_\n\n- **DDL: Data Definition Language**\n  Operazioni di creazione, cancellazione e modifica di schemi di tabelle, creazioni viste, creazione indici.\n\n_Operazioni sui dati_\n\n- **DML: Data Manipulation language**\n  - _data query language:_ Query o interrogazione della base di dati\n  - _Aggiornamento dati:_ Inserimento, cancellazione e modifica di dati\n\n### Linguaggi Relazionali\n\n- Algebra relazionale: insieme di operatori su relazioni che danno come risultato relazioni.\n\n- Non si usa come linguaggio di interrogazione dei DBMS ma come rappresentazione interna delle interrogazioni.\n\n- Calcolo relazionale: linguaggio dichiarativo di tipo logico dal quale Ã¨ stato derivato l'SQL\n\n### Gli operatori dell'algebra relazionale\n\n- unione, intersezione, differenza\n- ridenominazione\n- selezione\n- proiezione\n- join (join naturale, prodotto cartesiano, theta-join)\n\n### Operatori Insiemistici\n\n- le relazioni sono insiemi\n- i risultati devono essere relazioni\n- Ã¨ possibile applicare unione, intersezione, differenza solo a relazioni definite sugli stessi attributi (nome e tipo), cioÃ¨ possono operare solo su tuple uniformi.\n\nâ¢ Unione: R U S\nâ¢ Differenza: R â S\nâ¢ Qual Ã¨ il tipo del risultato? Se R e S hanno n elementi, quanti ne ha\nil risultato?\nâ¢ Se t1 Ã¨ un'ennupla non in R , allora:\nâ¢ R = (R U {t_1}) â {t_1}\nâ¢ operatore monadico (con un argomento)\nâ¢ \"modifica lo schema\" lasciando inalterata l'istanza dell'operando\nâ¢ Ã indicato con la lettera rho\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-1.png\" alt=\"is\" />\n</p>\n\n### Selezione (Restrizione)\n\n- operatore monadico\n- produce un risultato che:\n  - ha lo stesso schema dell'operando\n  - contiene un sottoinsieme delle ennuple dell'operando\n  - quelle che soddisfano una condizione espressa combinando, con i connettivi logici and, or, not, condizioni atomiche del tipo A theta B oppure A theta C dove theta Ã¨ un oepratore di confronto. A e B sono atributi su cui l'operatore theta abbai senso, c una costante compatibile col dominio di A.\n    Ã denotata con sigma, con la condizione messa a pedice.\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-2.png\" alt=\"is\" />\n</p>\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-3.png\" alt=\"is\" />\n</p>\n\n_Selezione e proiezione_: combinando selezione e proiezione, possiamo estrarre interessanti informazioni da una relazione.\n\n_Combinando selezione e proiezione_, possiamo estrarre informazioni da una relazione, ma non possiamo perÃ² correlare informazioni presenti in relazioni diverse.\n\nIl join Ã¨ l'operatore piÃ¹ interessante dell'algebra relazionale poichÃ¨ permette di correlare dati in relazioni diverse.\n\n**Join Naturale**\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-4.png\" alt=\"is\" />\n</p>\n\nÃ un operatore binario che correla dati in relazioni diverse, sulla base di valori uguali in attributi con lo stesso nome.\n\n- Produce un risultato:\n- sull'unione degli attributi degli operandi\n- con ennuple che sono ottenute combinando le ennuple degli operandi con valori uguali sugli attributi in comune.\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-5.png\" alt=\"is\" />\n</p>\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-6.png\" alt=\"is\" />\n</p>\n\n### Join esterno, interno, sinistro, destro, completo\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-7.png\" alt=\"is\" />\n</p>\n\n**Il prodotto cartesiano:** Ã¨ un join naturale senza attributi in comune e contiene sempre un numero di ennuple pari al prodotto dlle cardinalitÃ  degli operandi (le ennuple sono tutte comabinabili)\n\n**Theta-join ed equi-join**\n\n- Prodotto cartesiano: concatena tuple non necessariamente correlate dal punto di vista semantico.\n\nÃ¨ piÃ¹ utile se fatto seguire da una selezione.\nProdotto cartesiano seguito dalla selezione che mantiene solo le tuple con valori uguali sull'attributo:\nReparto di Impiegati e codice di reparti.\n\n### Theta-join\n\n- Il prodotto cartesiano, in pratica, ha senso solo se seguito da selezione:\n  sigma_condizione (R_1 |><| R_2)\n\n- L'operazione viene chiamata theta-join e puÃ² essere sintatticamente indicata con\n  R_1 |><|\\_condizione R_2\n\n#### PerchÃ¨ theta-join?\n\nLa condizione C Ã¨ spesso una congiunzione di atomi di confronto A_1 theta-join A_2 dove theta_join Ã¨ uno degli operatori di confronto (=, >,<,...)\n\n- se l'operatore Ã¨ sempre l'uguaglianza (=) allora si parla di equi-join\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-8.png\" alt=\"is\" />\n</p>\n\n### Self Join\n\nSupponiamo di considerare la seguente relazione.\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-9.png\" alt=\"is\" />\n</p>\n\ne di voler ottenere una relazione Nonno-Nipote.\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-10.png\" alt=\"is\" />\n</p>\n\nUna selezione congiuntiva puÃ² essere sostituita da una cascata di selezioni atomiche.\n\nUna proiezione puÃ² essere trasformata in una cascata di proiezioni che eliminano i vari attributi in fasi diverse se E Ã¨ definita su un insieme di attributi che contiene Y oltre che X.\n\npi*X(E) = pi_X(pi*{XY}(E))\n\nAnticipazione della proiezione rispetto al join (Pushing projections down):\nNon ha effetto sull'efficienza ma sulla leggibilitÃ .\n\nIn generale se R_1 ed R_2 sono definite sll'insieme di attributi X = AB, e contengono tuple uguali s A e diverse su B.\n\nIl Calcolo relazionale Ã¨ un linguaggio che permette di definire il risultato di un'interrogazione come l'insieme di quelle ennuple che soddisfano una certa condizone phi\n\n- L'insieme delle matricole degli studenti che hanno superato qualcuno degli esami elencati nella relazione Materie(Materia), si puÃ² definire come:\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-11.png\" alt=\"is\" />\n</p>\n\nChe Ã¨ equivalente a:\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-12.png\" alt=\"is\" />\n</p>\n"
					},
					"AQAAAAAAAAAAAAAA1RYAAAAAAAAGFwAAIyBCYXNpIGRpIERhdGkgQ2FwaXRvbG8gNAoKW0xpbmsgYWxsZSBzbGlkZXNdKGh0dHBzOi8vZWxlYXJuaW5nLmRpLnVuaXBpLml0L3BsdWdpbmZpbGUucGhwLzc3MDM4L21vZF9yZXNvdXJjZS9jb250ZW50LzIvNGIuTW9kZWxsb1JlbF9BbGdlYnJhUmVsYXppb25hbGVfUGFydGVfSS5wZGYpCgojIyBBbGdlYnJhIHJlbGF6aW9uYWxlCgpfT3BlcmF6aW9uaSBzdWxsbyBzY2hlbWFfCgotICoqRERMOiBEYXRhIERlZmluaXRpb24gTGFuZ3VhZ2UqKgogIE9wZXJhemlvbmkgZGkgY3JlYXppb25lLCBjYW5jZWxsYXppb25lIGUgbW9kaWZpY2EgZGkgc2NoZW1pIGRpIHRhYmVsbGUsIGNyZWF6aW9uaSB2aXN0ZSwgY3JlYXppb25lIGluZGljaS4KCl9PcGVyYXppb25pIHN1aSBkYXRpXwoKLSAqKkRNTDogRGF0YSBNYW5pcHVsYXRpb24gbGFuZ3VhZ2UqKgogIC0gX2RhdGEgcXVlcnkgbGFuZ3VhZ2U6XyBRdWVyeSBvIGludGVycm9nYXppb25lIGRlbGxhIGJhc2UgZGkgZGF0aQogIC0gX0FnZ2lvcm5hbWVudG8gZGF0aTpfIEluc2VyaW1lbnRvLCBjYW5jZWxsYXppb25lIGUgbW9kaWZpY2EgZGkgZGF0aQoKIyMjIExpbmd1YWdnaSBSZWxhemlvbmFsaQoKLSBBbGdlYnJhIHJlbGF6aW9uYWxlOiBpbnNpZW1lIGRpIG9wZXJhdG9yaSBzdSByZWxhemlvbmkgY2hlIGRhbm5vIGNvbWUgcmlzdWx0YXRvIHJlbGF6aW9uaS4KCi0gTm9uIHNpIHVzYSBjb21lIGxpbmd1YWdnaW8gZGkgaW50ZXJyb2dhemlvbmUgZGVpIERCTVMgbWEgY29tZSByYXBwcmVzZW50YXppb25lIGludGVybmEgZGVsbGUgaW50ZXJyb2dhemlvbmkuCgotIENhbGNvbG8gcmVsYXppb25hbGU6IGxpbmd1YWdnaW8gZGljaGlhcmF0aXZvIGRpIHRpcG8gbG9naWNvIGRhbCBxdWFsZSDDqCBzdGF0byBkZXJpdmF0byBsJ1NRTAoKIyMjIEdsaSBvcGVyYXRvcmkgZGVsbCdhbGdlYnJhIHJlbGF6aW9uYWxlCgotIHVuaW9uZSwgaW50ZXJzZXppb25lLCBkaWZmZXJlbnphCi0gcmlkZW5vbWluYXppb25lCi0gc2VsZXppb25lCi0gcHJvaWV6aW9uZQotIGpvaW4gKGpvaW4gbmF0dXJhbGUsIHByb2RvdHRvIGNhcnRlc2lhbm8sIHRoZXRhLWpvaW4pCgojIyMgT3BlcmF0b3JpIEluc2llbWlzdGljaQoKLSBsZSByZWxhemlvbmkgc29ubyBpbnNpZW1pCi0gaSByaXN1bHRhdGkgZGV2b25vIGVzc2VyZSByZWxhemlvbmkKLSDDqCBwb3NzaWJpbGUgYXBwbGljYXJlIHVuaW9uZSwgaW50ZXJzZXppb25lLCBkaWZmZXJlbnphIHNvbG8gYSByZWxhemlvbmkgZGVmaW5pdGUgc3VnbGkgc3Rlc3NpIGF0dHJpYnV0aSAobm9tZSBlIHRpcG8pLCBjaW/DqCBwb3Nzb25vIG9wZXJhcmUgc29sbyBzdSB0dXBsZSB1bmlmb3JtaS4KCuKAoiBVbmlvbmU6IFIgVSBTCuKAoiBEaWZmZXJlbnphOiBSIOKAkyBTCuKAoiBRdWFsIMOoIGlsIHRpcG8gZGVsIHJpc3VsdGF0bz8gU2UgUiBlIFMgaGFubm8gbiBlbGVtZW50aSwgcXVhbnRpIG5lIGhhCmlsIHJpc3VsdGF0bz8K4oCiIFNlIHQxIMOoIHVuJ2VubnVwbGEgbm9uIGluIFIgLCBhbGxvcmE6CuKAoiBSID0gKFIgVSB7dF8xfSkg4oCTIHt0XzF9CuKAoiBvcGVyYXRvcmUgbW9uYWRpY28gKGNvbiB1biBhcmdvbWVudG8pCuKAoiAibW9kaWZpY2EgbG8gc2NoZW1hIiBsYXNjaWFuZG8gaW5hbHRlcmF0YSBsJ2lzdGFuemEgZGVsbCdvcGVyYW5kbwrigKIgw4ggaW5kaWNhdG8gY29uIGxhIGxldHRlcmEgcmhvCgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iLi9hc3NldHMvYmQtNC0xLnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoKIyMjIFNlbGV6aW9uZSAoUmVzdHJpemlvbmUpCgotIG9wZXJhdG9yZSBtb25hZGljbwotIHByb2R1Y2UgdW4gcmlzdWx0YXRvIGNoZToKICAtIGhhIGxvIHN0ZXNzbyBzY2hlbWEgZGVsbCdvcGVyYW5kbwogIC0gY29udGllbmUgdW4gc290dG9pbnNpZW1lIGRlbGxlIGVubnVwbGUgZGVsbCdvcGVyYW5kbwogIC0gcXVlbGxlIGNoZSBzb2RkaXNmYW5vIHVuYSBjb25kaXppb25lIGVzcHJlc3NhIGNvbWJpbmFuZG8sIGNvbiBpIGNvbm5ldHRpdmkgbG9naWNpIGFuZCwgb3IsIG5vdCwgY29uZGl6aW9uaSBhdG9taWNoZSBkZWwgdGlwbyBBIHRoZXRhIEIgb3BwdXJlIEEgdGhldGEgQyBkb3ZlIHRoZXRhIMOoIHVuIG9lcHJhdG9yZSBkaSBjb25mcm9udG8uIEEgZSBCIHNvbm8gYXRyaWJ1dGkgc3UgY3VpIGwnb3BlcmF0b3JlIHRoZXRhIGFiYmFpIHNlbnNvLCBjIHVuYSBjb3N0YW50ZSBjb21wYXRpYmlsZSBjb2wgZG9taW5pbyBkaSBBLgogICAgw4ggZGVub3RhdGEgY29uIHNpZ21hLCBjb24gbGEgY29uZGl6aW9uZSBtZXNzYSBhIHBlZGljZS4KCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTIucG5nIiBhbHQ9ImlzIiAvPgo8L3A+Cgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iLi9hc3NldHMvYmQtNC0zLnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoKX1NlbGV6aW9uZSBlIHByb2llemlvbmVfOiBjb21iaW5hbmRvIHNlbGV6aW9uZSBlIHByb2llemlvbmUsIHBvc3NpYW1vIGVzdHJhcnJlIGludGVyZXNzYW50aSBpbmZvcm1hemlvbmkgZGEgdW5hIHJlbGF6aW9uZS4KCl9Db21iaW5hbmRvIHNlbGV6aW9uZSBlIHByb2llemlvbmVfLCBwb3NzaWFtbyBlc3RyYXJyZSBpbmZvcm1hemlvbmkgZGEgdW5hIHJlbGF6aW9uZSwgbWEgbm9uIHBvc3NpYW1vIHBlcsOyIGNvcnJlbGFyZSBpbmZvcm1hemlvbmkgcHJlc2VudGkgaW4gcmVsYXppb25pIGRpdmVyc2UuCgpJbCBqb2luIMOoIGwnb3BlcmF0b3JlIHBpw7kgaW50ZXJlc3NhbnRlIGRlbGwnYWxnZWJyYSByZWxhemlvbmFsZSBwb2ljaMOoIHBlcm1ldHRlIGRpIGNvcnJlbGFyZSBkYXRpIGluIHJlbGF6aW9uaSBkaXZlcnNlLgoKKipKb2luIE5hdHVyYWxlKioKCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTQucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgrDiCB1biBvcGVyYXRvcmUgYmluYXJpbyBjaGUgY29ycmVsYSBkYXRpIGluIHJlbGF6aW9uaSBkaXZlcnNlLCBzdWxsYSBiYXNlIGRpIHZhbG9yaSB1Z3VhbGkgaW4gYXR0cmlidXRpIGNvbiBsbyBzdGVzc28gbm9tZS4KCi0gUHJvZHVjZSB1biByaXN1bHRhdG86Ci0gc3VsbCd1bmlvbmUgZGVnbGkgYXR0cmlidXRpIGRlZ2xpIG9wZXJhbmRpCi0gY29uIGVubnVwbGUgY2hlIHNvbm8gb3R0ZW51dGUgY29tYmluYW5kbyBsZSBlbm51cGxlIGRlZ2xpIG9wZXJhbmRpIGNvbiB2YWxvcmkgdWd1YWxpIHN1Z2xpIGF0dHJpYnV0aSBpbiBjb211bmUuCgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iLi9hc3NldHMvYmQtNC01LnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoKPHAgYWxpZ249ImNlbnRlciI+CiAgPGltZyBzcmM9Ii4vYXNzZXRzL2JkLTQtNi5wbmciIGFsdD0iaXMiIC8+CjwvcD4KCiMjIyBKb2luIGVzdGVybm8sIGludGVybm8sIHNpbmlzdHJvLCBkZXN0cm8sIGNvbXBsZXRvCgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iLi9hc3NldHMvYmQtNC03LnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoKKipJbCBwcm9kb3R0byBjYXJ0ZXNpYW5vOioqIMOoIHVuIGpvaW4gbmF0dXJhbGUgc2VuemEgYXR0cmlidXRpIGluIGNvbXVuZSBlIGNvbnRpZW5lIHNlbXByZSB1biBudW1lcm8gZGkgZW5udXBsZSBwYXJpIGFsIHByb2RvdHRvIGRsbGUgY2FyZGluYWxpdMOgIGRlZ2xpIG9wZXJhbmRpIChsZSBlbm51cGxlIHNvbm8gdHV0dGUgY29tYWJpbmFiaWxpKQoKKipUaGV0YS1qb2luIGVkIGVxdWktam9pbioqCgotIFByb2RvdHRvIGNhcnRlc2lhbm86IGNvbmNhdGVuYSB0dXBsZSBub24gbmVjZXNzYXJpYW1lbnRlIGNvcnJlbGF0ZSBkYWwgcHVudG8gZGkgdmlzdGEgc2VtYW50aWNvLgoKw6ggcGnDuSB1dGlsZSBzZSBmYXR0byBzZWd1aXJlIGRhIHVuYSBzZWxlemlvbmUuClByb2RvdHRvIGNhcnRlc2lhbm8gc2VndWl0byBkYWxsYSBzZWxlemlvbmUgY2hlIG1hbnRpZW5lIHNvbG8gbGUgdHVwbGUgY29uIHZhbG9yaSB1Z3VhbGkgc3VsbCdhdHRyaWJ1dG86ClJlcGFydG8gZGkgSW1waWVnYXRpIGUgY29kaWNlIGRpIHJlcGFydGkuCgojIyMgVGhldGEtam9pbgoKLSBJbCBwcm9kb3R0byBjYXJ0ZXNpYW5vLCBpbiBwcmF0aWNhLCBoYSBzZW5zbyBzb2xvIHNlIHNlZ3VpdG8gZGEgc2VsZXppb25lOgogIHNpZ21hX2NvbmRpemlvbmUgKFJfMSB8Pjx8IFJfMikKCi0gTCdvcGVyYXppb25lIHZpZW5lIGNoaWFtYXRhIHRoZXRhLWpvaW4gZSBwdcOyIGVzc2VyZSBzaW50YXR0aWNhbWVudGUgaW5kaWNhdGEgY29uCiAgUl8xIHw+PHxcX2NvbmRpemlvbmUgUl8yCgojIyMjIFBlcmNow6ggdGhldGEtam9pbj8KCkxhIGNvbmRpemlvbmUgQyDDqCBzcGVzc28gdW5hIGNvbmdpdW56aW9uZSBkaSBhdG9taSBkaSBjb25mcm9udG8gQV8xIHRoZXRhLWpvaW4gQV8yIGRvdmUgdGhldGFfam9pbiDDqCB1bm8gZGVnbGkgb3BlcmF0b3JpIGRpIGNvbmZyb250byAoPSwgPiw8LC4uLikKCi0gc2UgbCdvcGVyYXRvcmUgw6ggc2VtcHJlIGwndWd1YWdsaWFuemEgKD0pIGFsbG9yYSBzaSBwYXJsYSBkaSBlcXVpLWpvaW4KCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTgucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgojIyMgU2VsZiBKb2luCgpTdXBwb25pYW1vIGRpIGNvbnNpZGVyYXJlIGxhIHNlZ3VlbnRlIHJlbGF6aW9uZS4KCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTkucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgplIGRpIHZvbGVyIG90dGVuZXJlIHVuYSByZWxhemlvbmUgTm9ubm8tTmlwb3RlLgoKPHAgYWxpZ249ImNlbnRlciI+CiAgPGltZyBzcmM9Ii4vYXNzZXRzL2JkLTQtMTAucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgpVbmEgc2VsZXppb25lIGNvbmdpdW50aXZhIHB1w7IgZXNzZXJlIHNvc3RpdHVpdGEgZGEgdW5hIGNhc2NhdGEgZGkgc2VsZXppb25pIGF0b21pY2hlLgoKVW5hIHByb2llemlvbmUgcHXDsiBlc3NlcmUgdHJhc2Zvcm1hdGEgaW4gdW5hIGNhc2NhdGEgZGkgcHJvaWV6aW9uaSBjaGUgZWxpbWluYW5vIGkgdmFyaSBhdHRyaWJ1dGkgaW4gZmFzaSBkaXZlcnNlIHNlIEUgw6ggZGVmaW5pdGEgc3UgdW4gaW5zaWVtZSBkaSBhdHRyaWJ1dGkgY2hlIGNvbnRpZW5lIFkgb2x0cmUgY2hlIFguCgpwaSpYKEUpID0gcGlfWChwaSp7WFl9KEUpKQoKQW50aWNpcGF6aW9uZSBkZWxsYSBwcm9pZXppb25lIHJpc3BldHRvIGFsIGpvaW4gKFB1c2hpbmcgcHJvamVjdGlvbnMgZG93bik6Ck5vbiBoYSBlZmZldHRvIHN1bGwnZWZmaWNpZW56YSBtYSBzdWxsYSBsZWdnaWJpbGl0w6AuCgpJbiBnZW5lcmFsZSBzZSBSXzEgZWQgUl8yIHNvbm8gZGVmaW5pdGUgc2xsJ2luc2llbWUgZGkgYXR0cmlidXRpIFggPSBBQiwgZSBjb250ZW5nb25vIHR1cGxlIHVndWFsaSBzIEEgZSBkaXZlcnNlIHN1IEIuCgpJbCBDYWxjb2xvIHJlbGF6aW9uYWxlIMOoIHVuIGxpbmd1YWdnaW8gY2hlIHBlcm1ldHRlIGRpIGRlZmluaXJlIGlsIHJpc3VsdGF0byBkaSB1bidpbnRlcnJvZ2F6aW9uZSBjb21lIGwnaW5zaWVtZSBkaSBxdWVsbGUgZW5udXBsZSBjaGUgc29kZGlzZmFubyB1bmEgY2VydGEgY29uZGl6b25lIHBoaQoKLSBMJ2luc2llbWUgZGVsbGUgbWF0cmljb2xlIGRlZ2xpIHN0dWRlbnRpIGNoZSBoYW5ubyBzdXBlcmF0byBxdWFsY3VubyBkZWdsaSBlc2FtaSBlbGVuY2F0aSBuZWxsYSByZWxhemlvbmUgTWF0ZXJpZShNYXRlcmlhKSwgc2kgcHXDsiBkZWZpbmlyZSBjb21lOgoKPHAgYWxpZ249ImNlbnRlciI+CiAgPGltZyBzcmM9Ii4vYXNzZXRzL2JkLTQtMTEucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgpDaGUgw6ggZXF1aXZhbGVudGUgYToKCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTEyLnBuZyIgYWx0PSJpcyIgLz4KPC9wPgo",
					"AQAAAAAAAAABAAAAvhYAAAAAAAC+FgAAAAAAAAAAAAAAAPC/"
				],
				[
					1571,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANUWAAAAAAAA1hYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1RYAAAAAAADVFgAAAAAAAAAAAAAAAPC/"
				],
				[
					1574,
					1,
					"replace_view_content",
					{
						"content": "# Basi di Dati Capitolo 4\n\n[Link alle slides](https://elearning.di.unipi.it/pluginfile.php/77038/mod_resource/content/2/4b.ModelloRel_AlgebraRelazionale_Parte_I.pdf)\n\n## Algebra relazionale\n\n_Operazioni sullo schema_\n\n- **DDL: Data Definition Language**\n  Operazioni di creazione, cancellazione e modifica di schemi di tabelle, creazioni viste, creazione indici.\n\n_Operazioni sui dati_\n\n- **DML: Data Manipulation language**\n  - _data query language:_ Query o interrogazione della base di dati\n  - _Aggiornamento dati:_ Inserimento, cancellazione e modifica di dati\n\n### Linguaggi Relazionali\n\n- Algebra relazionale: insieme di operatori su relazioni che danno come risultato relazioni.\n\n- Non si usa come linguaggio di interrogazione dei DBMS ma come rappresentazione interna delle interrogazioni.\n\n- Calcolo relazionale: linguaggio dichiarativo di tipo logico dal quale Ã¨ stato derivato l'SQL\n\n### Gli operatori dell'algebra relazionale\n\n- unione, intersezione, differenza\n- ridenominazione\n- selezione\n- proiezione\n- join (join naturale, prodotto cartesiano, theta-join)\n\n### Operatori Insiemistici\n\n- le relazioni sono insiemi\n- i risultati devono essere relazioni\n- Ã¨ possibile applicare unione, intersezione, differenza solo a relazioni definite sugli stessi attributi (nome e tipo), cioÃ¨ possono operare solo su tuple uniformi.\n\nâ¢ Unione: R U S\nâ¢ Differenza: R â S\nâ¢ Qual Ã¨ il tipo del risultato? Se R e S hanno n elementi, quanti ne ha\nil risultato?\nâ¢ Se t1 Ã¨ un'ennupla non in R , allora:\nâ¢ R = (R U {t_1}) â {t_1}\nâ¢ operatore monadico (con un argomento)\nâ¢ \"modifica lo schema\" lasciando inalterata l'istanza dell'operando\nâ¢ Ã indicato con la lettera rho\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-1.png\" alt=\"is\" />\n</p>\n\n### Selezione (Restrizione)\n\n- operatore monadico\n- produce un risultato che:\n  - ha lo stesso schema dell'operando\n  - contiene un sottoinsieme delle ennuple dell'operando\n  - quelle che soddisfano una condizione espressa combinando, con i connettivi logici and, or, not, condizioni atomiche del tipo A theta B oppure A theta C dove theta Ã¨ un oepratore di confronto. A e B sono atributi su cui l'operatore theta abbai senso, c una costante compatibile col dominio di A.\n    Ã denotata con sigma, con la condizione messa a pedice.\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-2.png\" alt=\"is\" />\n</p>\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-3.png\" alt=\"is\" />\n</p>\n\n_Selezione e proiezione_: combinando selezione e proiezione, possiamo estrarre interessanti informazioni da una relazione.\n\n_Combinando selezione e proiezione_, possiamo estrarre informazioni da una relazione, ma non possiamo perÃ² correlare informazioni presenti in relazioni diverse.\n\nIl join Ã¨ l'operatore piÃ¹ interessante dell'algebra relazionale poichÃ¨ permette di correlare dati in relazioni diverse.\n\n**Join Naturale**\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-4.png\" alt=\"is\" />\n</p>\n\nÃ un operatore binario che correla dati in relazioni diverse, sulla base di valori uguali in attributi con lo stesso nome.\n\n- Produce un risultato:\n- sull'unione degli attributi degli operandi\n- con ennuple che sono ottenute combinando le ennuple degli operandi con valori uguali sugli attributi in comune.\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-5.png\" alt=\"is\" />\n</p>\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-6.png\" alt=\"is\" />\n</p>\n\n### Join esterno, interno, sinistro, destro, completo\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-7.png\" alt=\"is\" />\n</p>\n\n**Il prodotto cartesiano:** Ã¨ un join naturale senza attributi in comune e contiene sempre un numero di ennuple pari al prodotto dlle cardinalitÃ  degli operandi (le ennuple sono tutte comabinabili)\n\n**Theta-join ed equi-join**\n\n- Prodotto cartesiano: concatena tuple non necessariamente correlate dal punto di vista semantico.\n\nÃ¨ piÃ¹ utile se fatto seguire da una selezione.\nProdotto cartesiano seguito dalla selezione che mantiene solo le tuple con valori uguali sull'attributo:\nReparto di Impiegati e codice di reparti.\n\n### Theta-join\n\n- Il prodotto cartesiano, in pratica, ha senso solo se seguito da selezione:\n  sigma_condizione (R_1 |><| R_2)\n\n- L'operazione viene chiamata theta-join e puÃ² essere sintatticamente indicata con\n  R_1 |><|\\_condizione R_2\n\n#### PerchÃ¨ theta-join?\n\nLa condizione C Ã¨ spesso una congiunzione di atomi di confronto A_1 theta-join A_2 dove theta_join Ã¨ uno degli operatori di confronto (=, >,<,...)\n\n- se l'operatore Ã¨ sempre l'uguaglianza (=) allora si parla di equi-join\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-8.png\" alt=\"is\" />\n</p>\n\n### Self Join\n\nSupponiamo di considerare la seguente relazione.\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-9.png\" alt=\"is\" />\n</p>\n\ne di voler ottenere una relazione Nonno-Nipote.\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-10.png\" alt=\"is\" />\n</p>\n\nUna selezione congiuntiva puÃ² essere sostituita da una cascata di selezioni atomiche.\n\nUna proiezione puÃ² essere trasformata in una cascata di proiezioni che eliminano i vari attributi in fasi diverse se E Ã¨ definita su un insieme di attributi che contiene Y oltre che X.\n\npi*X(E) = pi_X(pi*{XY}(E))\n\nAnticipazione della proiezione rispetto al join (Pushing projections down):\nNon ha effetto sull'efficienza ma sulla leggibilitÃ .\n\nIn generale se R_1 ed R_2 sono definite sll'insieme di attributi X = AB, e contengono tuple uguali s A e diverse su B.\n\nIl Calcolo relazionale Ã¨ un linguaggio che permette di definire il risultato di un'interrogazione come l'insieme di quelle ennuple che soddisfano una certa condizone phi\n\n- L'insieme delle matricole degli studenti che hanno superato qualcuno degli esami elencati nella relazione Materie(Materia), si puÃ² definire come:\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-11.png\" alt=\"is\" />\n</p>\n\nChe Ã¨ equivalente a:\n\n<p align=\"center\">\n  <img src=\"./assets/bd-4-12.png\" alt=\"is\" />\n</p>\n"
					},
					"AQAAAAAAAAAAAAAA1RYAAAAAAAAHFwAAIyBCYXNpIGRpIERhdGkgQ2FwaXRvbG8gNAoKW0xpbmsgYWxsZSBzbGlkZXNdKGh0dHBzOi8vZWxlYXJuaW5nLmRpLnVuaXBpLml0L3BsdWdpbmZpbGUucGhwLzc3MDM4L21vZF9yZXNvdXJjZS9jb250ZW50LzIvNGIuTW9kZWxsb1JlbF9BbGdlYnJhUmVsYXppb25hbGVfUGFydGVfSS5wZGYpCgojIyBBbGdlYnJhIHJlbGF6aW9uYWxlCgpfT3BlcmF6aW9uaSBzdWxsbyBzY2hlbWFfCgotICoqRERMOiBEYXRhIERlZmluaXRpb24gTGFuZ3VhZ2UqKgogIE9wZXJhemlvbmkgZGkgY3JlYXppb25lLCBjYW5jZWxsYXppb25lIGUgbW9kaWZpY2EgZGkgc2NoZW1pIGRpIHRhYmVsbGUsIGNyZWF6aW9uaSB2aXN0ZSwgY3JlYXppb25lIGluZGljaS4KCl9PcGVyYXppb25pIHN1aSBkYXRpXwoKLSAqKkRNTDogRGF0YSBNYW5pcHVsYXRpb24gbGFuZ3VhZ2UqKgogIC0gX2RhdGEgcXVlcnkgbGFuZ3VhZ2U6XyBRdWVyeSBvIGludGVycm9nYXppb25lIGRlbGxhIGJhc2UgZGkgZGF0aQogIC0gX0FnZ2lvcm5hbWVudG8gZGF0aTpfIEluc2VyaW1lbnRvLCBjYW5jZWxsYXppb25lIGUgbW9kaWZpY2EgZGkgZGF0aQoKIyMjIExpbmd1YWdnaSBSZWxhemlvbmFsaQoKLSBBbGdlYnJhIHJlbGF6aW9uYWxlOiBpbnNpZW1lIGRpIG9wZXJhdG9yaSBzdSByZWxhemlvbmkgY2hlIGRhbm5vIGNvbWUgcmlzdWx0YXRvIHJlbGF6aW9uaS4KCi0gTm9uIHNpIHVzYSBjb21lIGxpbmd1YWdnaW8gZGkgaW50ZXJyb2dhemlvbmUgZGVpIERCTVMgbWEgY29tZSByYXBwcmVzZW50YXppb25lIGludGVybmEgZGVsbGUgaW50ZXJyb2dhemlvbmkuCgotIENhbGNvbG8gcmVsYXppb25hbGU6IGxpbmd1YWdnaW8gZGljaGlhcmF0aXZvIGRpIHRpcG8gbG9naWNvIGRhbCBxdWFsZSDDqCBzdGF0byBkZXJpdmF0byBsJ1NRTAoKIyMjIEdsaSBvcGVyYXRvcmkgZGVsbCdhbGdlYnJhIHJlbGF6aW9uYWxlCgotIHVuaW9uZSwgaW50ZXJzZXppb25lLCBkaWZmZXJlbnphCi0gcmlkZW5vbWluYXppb25lCi0gc2VsZXppb25lCi0gcHJvaWV6aW9uZQotIGpvaW4gKGpvaW4gbmF0dXJhbGUsIHByb2RvdHRvIGNhcnRlc2lhbm8sIHRoZXRhLWpvaW4pCgojIyMgT3BlcmF0b3JpIEluc2llbWlzdGljaQoKLSBsZSByZWxhemlvbmkgc29ubyBpbnNpZW1pCi0gaSByaXN1bHRhdGkgZGV2b25vIGVzc2VyZSByZWxhemlvbmkKLSDDqCBwb3NzaWJpbGUgYXBwbGljYXJlIHVuaW9uZSwgaW50ZXJzZXppb25lLCBkaWZmZXJlbnphIHNvbG8gYSByZWxhemlvbmkgZGVmaW5pdGUgc3VnbGkgc3Rlc3NpIGF0dHJpYnV0aSAobm9tZSBlIHRpcG8pLCBjaW/DqCBwb3Nzb25vIG9wZXJhcmUgc29sbyBzdSB0dXBsZSB1bmlmb3JtaS4KCuKAoiBVbmlvbmU6IFIgVSBTCuKAoiBEaWZmZXJlbnphOiBSIOKAkyBTCuKAoiBRdWFsIMOoIGlsIHRpcG8gZGVsIHJpc3VsdGF0bz8gU2UgUiBlIFMgaGFubm8gbiBlbGVtZW50aSwgcXVhbnRpIG5lIGhhCmlsIHJpc3VsdGF0bz8K4oCiIFNlIHQxIMOoIHVuJ2VubnVwbGEgbm9uIGluIFIgLCBhbGxvcmE6CuKAoiBSID0gKFIgVSB7dF8xfSkg4oCTIHt0XzF9CuKAoiBvcGVyYXRvcmUgbW9uYWRpY28gKGNvbiB1biBhcmdvbWVudG8pCuKAoiAibW9kaWZpY2EgbG8gc2NoZW1hIiBsYXNjaWFuZG8gaW5hbHRlcmF0YSBsJ2lzdGFuemEgZGVsbCdvcGVyYW5kbwrigKIgw4ggaW5kaWNhdG8gY29uIGxhIGxldHRlcmEgcmhvCgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iLi9hc3NldHMvYmQtNC0xLnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoKIyMjIFNlbGV6aW9uZSAoUmVzdHJpemlvbmUpCgotIG9wZXJhdG9yZSBtb25hZGljbwotIHByb2R1Y2UgdW4gcmlzdWx0YXRvIGNoZToKICAtIGhhIGxvIHN0ZXNzbyBzY2hlbWEgZGVsbCdvcGVyYW5kbwogIC0gY29udGllbmUgdW4gc290dG9pbnNpZW1lIGRlbGxlIGVubnVwbGUgZGVsbCdvcGVyYW5kbwogIC0gcXVlbGxlIGNoZSBzb2RkaXNmYW5vIHVuYSBjb25kaXppb25lIGVzcHJlc3NhIGNvbWJpbmFuZG8sIGNvbiBpIGNvbm5ldHRpdmkgbG9naWNpIGFuZCwgb3IsIG5vdCwgY29uZGl6aW9uaSBhdG9taWNoZSBkZWwgdGlwbyBBIHRoZXRhIEIgb3BwdXJlIEEgdGhldGEgQyBkb3ZlIHRoZXRhIMOoIHVuIG9lcHJhdG9yZSBkaSBjb25mcm9udG8uIEEgZSBCIHNvbm8gYXRyaWJ1dGkgc3UgY3VpIGwnb3BlcmF0b3JlIHRoZXRhIGFiYmFpIHNlbnNvLCBjIHVuYSBjb3N0YW50ZSBjb21wYXRpYmlsZSBjb2wgZG9taW5pbyBkaSBBLgogICAgw4ggZGVub3RhdGEgY29uIHNpZ21hLCBjb24gbGEgY29uZGl6aW9uZSBtZXNzYSBhIHBlZGljZS4KCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTIucG5nIiBhbHQ9ImlzIiAvPgo8L3A+Cgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iLi9hc3NldHMvYmQtNC0zLnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoKX1NlbGV6aW9uZSBlIHByb2llemlvbmVfOiBjb21iaW5hbmRvIHNlbGV6aW9uZSBlIHByb2llemlvbmUsIHBvc3NpYW1vIGVzdHJhcnJlIGludGVyZXNzYW50aSBpbmZvcm1hemlvbmkgZGEgdW5hIHJlbGF6aW9uZS4KCl9Db21iaW5hbmRvIHNlbGV6aW9uZSBlIHByb2llemlvbmVfLCBwb3NzaWFtbyBlc3RyYXJyZSBpbmZvcm1hemlvbmkgZGEgdW5hIHJlbGF6aW9uZSwgbWEgbm9uIHBvc3NpYW1vIHBlcsOyIGNvcnJlbGFyZSBpbmZvcm1hemlvbmkgcHJlc2VudGkgaW4gcmVsYXppb25pIGRpdmVyc2UuCgpJbCBqb2luIMOoIGwnb3BlcmF0b3JlIHBpw7kgaW50ZXJlc3NhbnRlIGRlbGwnYWxnZWJyYSByZWxhemlvbmFsZSBwb2ljaMOoIHBlcm1ldHRlIGRpIGNvcnJlbGFyZSBkYXRpIGluIHJlbGF6aW9uaSBkaXZlcnNlLgoKKipKb2luIE5hdHVyYWxlKioKCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTQucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgrDiCB1biBvcGVyYXRvcmUgYmluYXJpbyBjaGUgY29ycmVsYSBkYXRpIGluIHJlbGF6aW9uaSBkaXZlcnNlLCBzdWxsYSBiYXNlIGRpIHZhbG9yaSB1Z3VhbGkgaW4gYXR0cmlidXRpIGNvbiBsbyBzdGVzc28gbm9tZS4KCi0gUHJvZHVjZSB1biByaXN1bHRhdG86Ci0gc3VsbCd1bmlvbmUgZGVnbGkgYXR0cmlidXRpIGRlZ2xpIG9wZXJhbmRpCi0gY29uIGVubnVwbGUgY2hlIHNvbm8gb3R0ZW51dGUgY29tYmluYW5kbyBsZSBlbm51cGxlIGRlZ2xpIG9wZXJhbmRpIGNvbiB2YWxvcmkgdWd1YWxpIHN1Z2xpIGF0dHJpYnV0aSBpbiBjb211bmUuCgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iLi9hc3NldHMvYmQtNC01LnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoKPHAgYWxpZ249ImNlbnRlciI+CiAgPGltZyBzcmM9Ii4vYXNzZXRzL2JkLTQtNi5wbmciIGFsdD0iaXMiIC8+CjwvcD4KCiMjIyBKb2luIGVzdGVybm8sIGludGVybm8sIHNpbmlzdHJvLCBkZXN0cm8sIGNvbXBsZXRvCgo8cCBhbGlnbj0iY2VudGVyIj4KICA8aW1nIHNyYz0iLi9hc3NldHMvYmQtNC03LnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoKKipJbCBwcm9kb3R0byBjYXJ0ZXNpYW5vOioqIMOoIHVuIGpvaW4gbmF0dXJhbGUgc2VuemEgYXR0cmlidXRpIGluIGNvbXVuZSBlIGNvbnRpZW5lIHNlbXByZSB1biBudW1lcm8gZGkgZW5udXBsZSBwYXJpIGFsIHByb2RvdHRvIGRsbGUgY2FyZGluYWxpdMOgIGRlZ2xpIG9wZXJhbmRpIChsZSBlbm51cGxlIHNvbm8gdHV0dGUgY29tYWJpbmFiaWxpKQoKKipUaGV0YS1qb2luIGVkIGVxdWktam9pbioqCgotIFByb2RvdHRvIGNhcnRlc2lhbm86IGNvbmNhdGVuYSB0dXBsZSBub24gbmVjZXNzYXJpYW1lbnRlIGNvcnJlbGF0ZSBkYWwgcHVudG8gZGkgdmlzdGEgc2VtYW50aWNvLgoKw6ggcGnDuSB1dGlsZSBzZSBmYXR0byBzZWd1aXJlIGRhIHVuYSBzZWxlemlvbmUuClByb2RvdHRvIGNhcnRlc2lhbm8gc2VndWl0byBkYWxsYSBzZWxlemlvbmUgY2hlIG1hbnRpZW5lIHNvbG8gbGUgdHVwbGUgY29uIHZhbG9yaSB1Z3VhbGkgc3VsbCdhdHRyaWJ1dG86ClJlcGFydG8gZGkgSW1waWVnYXRpIGUgY29kaWNlIGRpIHJlcGFydGkuCgojIyMgVGhldGEtam9pbgoKLSBJbCBwcm9kb3R0byBjYXJ0ZXNpYW5vLCBpbiBwcmF0aWNhLCBoYSBzZW5zbyBzb2xvIHNlIHNlZ3VpdG8gZGEgc2VsZXppb25lOgogIHNpZ21hX2NvbmRpemlvbmUgKFJfMSB8Pjx8IFJfMikKCi0gTCdvcGVyYXppb25lIHZpZW5lIGNoaWFtYXRhIHRoZXRhLWpvaW4gZSBwdcOyIGVzc2VyZSBzaW50YXR0aWNhbWVudGUgaW5kaWNhdGEgY29uCiAgUl8xIHw+PHxcX2NvbmRpemlvbmUgUl8yCgojIyMjIFBlcmNow6ggdGhldGEtam9pbj8KCkxhIGNvbmRpemlvbmUgQyDDqCBzcGVzc28gdW5hIGNvbmdpdW56aW9uZSBkaSBhdG9taSBkaSBjb25mcm9udG8gQV8xIHRoZXRhLWpvaW4gQV8yIGRvdmUgdGhldGFfam9pbiDDqCB1bm8gZGVnbGkgb3BlcmF0b3JpIGRpIGNvbmZyb250byAoPSwgPiw8LC4uLikKCi0gc2UgbCdvcGVyYXRvcmUgw6ggc2VtcHJlIGwndWd1YWdsaWFuemEgKD0pIGFsbG9yYSBzaSBwYXJsYSBkaSBlcXVpLWpvaW4KCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTgucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgojIyMgU2VsZiBKb2luCgpTdXBwb25pYW1vIGRpIGNvbnNpZGVyYXJlIGxhIHNlZ3VlbnRlIHJlbGF6aW9uZS4KCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTkucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgplIGRpIHZvbGVyIG90dGVuZXJlIHVuYSByZWxhemlvbmUgTm9ubm8tTmlwb3RlLgoKPHAgYWxpZ249ImNlbnRlciI+CiAgPGltZyBzcmM9Ii4vYXNzZXRzL2JkLTQtMTAucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgpVbmEgc2VsZXppb25lIGNvbmdpdW50aXZhIHB1w7IgZXNzZXJlIHNvc3RpdHVpdGEgZGEgdW5hIGNhc2NhdGEgZGkgc2VsZXppb25pIGF0b21pY2hlLgoKVW5hIHByb2llemlvbmUgcHXDsiBlc3NlcmUgdHJhc2Zvcm1hdGEgaW4gdW5hIGNhc2NhdGEgZGkgcHJvaWV6aW9uaSBjaGUgZWxpbWluYW5vIGkgdmFyaSBhdHRyaWJ1dGkgaW4gZmFzaSBkaXZlcnNlIHNlIEUgw6ggZGVmaW5pdGEgc3UgdW4gaW5zaWVtZSBkaSBhdHRyaWJ1dGkgY2hlIGNvbnRpZW5lIFkgb2x0cmUgY2hlIFguCgpwaSpYKEUpID0gcGlfWChwaSp7WFl9KEUpKQoKQW50aWNpcGF6aW9uZSBkZWxsYSBwcm9pZXppb25lIHJpc3BldHRvIGFsIGpvaW4gKFB1c2hpbmcgcHJvamVjdGlvbnMgZG93bik6Ck5vbiBoYSBlZmZldHRvIHN1bGwnZWZmaWNpZW56YSBtYSBzdWxsYSBsZWdnaWJpbGl0w6AuCgpJbiBnZW5lcmFsZSBzZSBSXzEgZWQgUl8yIHNvbm8gZGVmaW5pdGUgc2xsJ2luc2llbWUgZGkgYXR0cmlidXRpIFggPSBBQiwgZSBjb250ZW5nb25vIHR1cGxlIHVndWFsaSBzIEEgZSBkaXZlcnNlIHN1IEIuCgpJbCBDYWxjb2xvIHJlbGF6aW9uYWxlIMOoIHVuIGxpbmd1YWdnaW8gY2hlIHBlcm1ldHRlIGRpIGRlZmluaXJlIGlsIHJpc3VsdGF0byBkaSB1bidpbnRlcnJvZ2F6aW9uZSBjb21lIGwnaW5zaWVtZSBkaSBxdWVsbGUgZW5udXBsZSBjaGUgc29kZGlzZmFubyB1bmEgY2VydGEgY29uZGl6b25lIHBoaQoKLSBMJ2luc2llbWUgZGVsbGUgbWF0cmljb2xlIGRlZ2xpIHN0dWRlbnRpIGNoZSBoYW5ubyBzdXBlcmF0byBxdWFsY3VubyBkZWdsaSBlc2FtaSBlbGVuY2F0aSBuZWxsYSByZWxhemlvbmUgTWF0ZXJpZShNYXRlcmlhKSwgc2kgcHXDsiBkZWZpbmlyZSBjb21lOgoKPHAgYWxpZ249ImNlbnRlciI+CiAgPGltZyBzcmM9Ii4vYXNzZXRzL2JkLTQtMTEucG5nIiBhbHQ9ImlzIiAvPgo8L3A+CgpDaGUgw6ggZXF1aXZhbGVudGUgYToKCjxwIGFsaWduPSJjZW50ZXIiPgogIDxpbWcgc3JjPSIuL2Fzc2V0cy9iZC00LTEyLnBuZyIgYWx0PSJpcyIgLz4KPC9wPgoK",
					"AQAAAAAAAAABAAAAjhYAAAAAAACOFgAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"op",
				"Terminus: Open Default Shell in Panel"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"ope",
				"Terminus: Open Default Shell in Panel"
			],
			[
				"sublimLin",
				"SublimeLinter: Show Line Errors"
			],
			[
				"ui",
				"UI: Select Theme"
			],
			[
				"UI",
				"UI: Customize Theme"
			],
			[
				"open",
				"Terminus: Open Default Shell in Panel"
			],
			[
				"close",
				"Terminus: Close"
			],
			[
				"previe",
				"MarkdownLivePreview: Open Preview"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"previ",
				"GitHub Flavored Markdown: Preview"
			],
			[
				"mark",
				"Markdown Preview: Preview in Browser"
			],
			[
				"them",
				"UI: Select Theme"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"term",
				"Terminus: Open Default Shell in Panel"
			],
			[
				"show",
				"SublimeLinter: Show All Errors"
			],
			[
				"ter",
				"Terminus: Toggle Panel"
			],
			[
				"termi",
				"Preferences: Terminus Settings"
			],
			[
				"to",
				"Terminus: Open Default Shell in Panel"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"rmeo",
				"Package Control: Remove Package"
			],
			[
				"terminal",
				"Preferences: Terminal OS Specific Settings"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 323.0,
		"history":
		[
			"exit",
			"clear"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/gab/Github/Triennale",
		"/home/gab/Github/Triennale/III",
		"/home/gab/Github/Triennale/III/Basi-di-Dati",
		"/home/gab/Github/Triennale/III/Ingegneria-del-Software"
	],
	"file_history":
	[
		"/home/gab/Github/Triennale/III/Basi-di-Dati/Capitolo-3.md",
		"/home/gab/Github/Triennale/III/Basi-di-Dati/Capitolo-2.md",
		"/home/gab/Github/Triennale/III/Basi-di-Dati/Capitolo-1.md",
		"/home/gab/Github/Triennale/II/Paradigmi_di_Programmazione/Programmazione-Concorrente-2.md",
		"/home/gab/Github/Triennale/II/Paradigmi_di_Programmazione/Programmazione-Concorrente-1.md",
		"/home/gab/Github/Triennale/II/Paradigmi_di_Programmazione/assets/pdp2-2.png",
		"/home/gab/Github/Triennale/III/Reti-LabIII/LabIII/teoria/teoria.md",
		"/home/gab/Github/Triennale/II/Ricerca-Operativa/PL.md",
		"/home/gab/Github/Triennale/II/Ricerca-Operativa/assets/ro22.png",
		"/home/gab/Github/Triennale/II/Ricerca-Operativa/assets/ro28.png",
		"/home/gab/Github/Triennale/II/Ricerca-Operativa/assets/ro27.png",
		"/home/gab/Github/Triennale/II/Ricerca-Operativa/assets/ro14.png",
		"/home/gab/Github/Triennale/III/Ingegneria-del-Software/Capitolo-7-8.md",
		"/home/gab/Github/Triennale/III/Ingegneria-del-Software/Capitolo-9.md",
		"/home/gab/Github/Triennale/II/Paradigmi_di_Programmazione/esercizi-extra.ml",
		"/home/gab/Github/Triennale/III/Ingegneria-del-Software/Capitolo-7.md",
		"/home/gab/Github/Triennale/III/Ingegneria-del-Software/Capitolo-5-6.md",
		"/home/gab/Github/Triennale/II/Paradigmi_di_Programmazione/micaml.ml",
		"/home/gab/Github/Triennale/III/Reti-LabIII/LabIII/Server.java",
		"/home/gab/Github/Triennale/III/Reti-LabIII/LabIII/ClientHandler.java",
		"/home/gab/Github/Triennale/uni.sublime-project",
		"/home/gab/Github/Triennale/III/Reti-LabIII/Reti/Capitolo-4.md",
		"/home/gab/.config/sublime-text/Packages/Diction/Diction.sublime-settings",
		"/home/gab/Github/Triennale/III/Ingegneria-del-Software/Capitolo-5.md",
		"/home/gab/Github/Triennale/III/Reti-LabIII/Reti/Capitolo-3.md",
		"/home/gab/Github/Triennale/III/Reti-LabIII/Reti/Capitolo-2.md",
		"/home/gab/Github/Triennale/III/Reti-LabIII/Reti/Capitolo-1.md",
		"/home/gab/Github/Triennale/III/Ingegneria-del-Software/Capitolo-4.md",
		"/home/gab/Github/Triennale/III/Ingegneria-del-Software/Capitolo-3.md",
		"/home/gab/Github/HackEd/src/app/services/custom-server.service.ts",
		"/home/gab/Github/Triennale/III/Ingegneria-del-Software/Capitolo-2.md",
		"/home/gab/Github/Triennale/III/Ingegneria-del-Software/Capitolo-1.md",
		"/home/gab/Github/Triennale/III/Reti-LabIII/Reti/appunti.md",
		"/home/gab/Github/Triennale/README.md",
		"/home/gab/Github/Triennale/assets/scripts/change-dir.sh",
		"/home/gab/Github/Triennale/assets/scripts/move-image-here.sh",
		"/home/gab/Github/Triennale/.gitignore",
		"/home/gab/Github/Second-Brain/brain-dumps/esercizi.ml",
		"/home/gab/Github/Second-Brain/projects/triennale/bozza-di-piano.md",
		"/home/gab/Github/Second-Brain/projects/Swot.md",
		"/home/gab/.config/sublime-text/Packages/User/Diction.sublime-settings",
		"/home/gab/Github/Python/class.py",
		"/home/gab/Github/Second-Brain/README.md",
		"/home/gab/Github/Second-Brain/brain-dumps/orwellian-stream.md",
		"/home/gab/Github/Packages/README.md",
		"/home/gab/.config/sublime-text/Packages/User/termious_on_startup.py",
		"/home/gab/Github/Second-Brain/second-brain.sublime-project",
		"/home/gab/Github/Second-Brain/.gitignore",
		"/home/gab/Github/Dry/README.md",
		"/home/gab/tuscandry.md",
		"/home/gab/Github/HackEd/src/app/app-routing.module.ts",
		"/home/gab/Github/Server/socket.js",
		"/home/gab/Github/Server/compiler.js",
		"/home/gab/Github/Server/compiler_test.js",
		"/home/gab/Github/Server/pserver.js",
		"/home/gab/Github/Server/sftp-config.json",
		"/home/gab/Github/gabsalvo.github.io/src/pages/index.astro",
		"/home/gab/Github/HackEd/src/app/user/user.component.ts",
		"/home/gab/Github/HackEd/src/app/app.component.html",
		"/home/gab/Github/gabsalvo.github.io/src/content/post/Get your first npm package going.md",
		"/home/gab/.config/sublime-text/Packages/User/Terminus.sublime-settings",
		"/home/gab/.config/sublime-text/Packages/Terminus/Terminus.sublime-settings",
		"/home/gab/.config/sublime-text/Packages/QuickPanelEnhanced/Default.sublime-keymap",
		"/home/gab/.config/sublime-text/Packages/TerminalinPackages/Default.sublime-keymap",
		"/home/gab/.config/sublime-text/Packages/User/Side Bar.sublime-settings",
		"/home/gab/hello.c"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "III/Basi-di-Dati/Capitolo-4.md",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5845,
						"regions":
						{
						},
						"selection":
						[
							[
								5845,
								5845
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 3626.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 37.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SFTP":
	{
		"height": 0.0
	},
	"output.SublimeLinter":
	{
		"height": 338.0
	},
	"output.SublimeLinter Messages":
	{
		"height": 132.0
	},
	"output.Terminus":
	{
		"height": 246.0
	},
	"output.Terminus 2":
	{
		"height": 305.0
	},
	"output.Terminus 3":
	{
		"height": 357.0
	},
	"output.Terminus 4":
	{
		"height": 263.0
	},
	"output.Terminus 5":
	{
		"height": 285.0
	},
	"output.Terminus 6":
	{
		"height": 296.0
	},
	"output.Terminus 7":
	{
		"height": 156.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "uni.sublime-project",
	"replace":
	{
		"height": 70.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"user",
				"HackEd/src/app/user/user.component.ts"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 316.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
